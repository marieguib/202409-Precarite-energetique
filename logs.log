2024-05-24 15:42:29,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 15:42:29,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 15:42:29,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 15:42:29,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 15:57:10,050:INFO:PyCaret ClassificationExperiment
2024-05-24 15:57:10,050:INFO:Logging name: clf-default-name
2024-05-24 15:57:10,050:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-24 15:57:10,050:INFO:version 3.3.2
2024-05-24 15:57:10,053:INFO:Initializing setup()
2024-05-24 15:57:10,053:INFO:self.USI: 0598
2024-05-24 15:57:10,053:INFO:self._variable_keys: {'seed', 'X', 'is_multiclass', 'USI', 'X_test', 'target_param', 'memory', 'html_param', 'gpu_param', 'X_train', 'pipeline', 'fix_imbalance', 'y_train', '_available_plots', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'y', 'n_jobs_param', 'idx', 'fold_generator', 'log_plots_param', 'fold_groups_param', 'fold_shuffle_param', 'y_test', 'logging_param', 'data', '_ml_usecase'}
2024-05-24 15:57:10,053:INFO:Checking environment
2024-05-24 15:57:10,053:INFO:python_version: 3.11.5
2024-05-24 15:57:10,053:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-24 15:57:10,053:INFO:machine: AMD64
2024-05-24 15:57:10,053:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-24 15:57:10,058:INFO:Memory: svmem(total=8395403264, available=917250048, percent=89.1, used=7478153216, free=917250048)
2024-05-24 15:57:10,058:INFO:Physical Core: 4
2024-05-24 15:57:10,058:INFO:Logical Core: 8
2024-05-24 15:57:10,063:INFO:Checking libraries
2024-05-24 15:57:10,063:INFO:System:
2024-05-24 15:57:10,063:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-24 15:57:10,063:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-24 15:57:10,063:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-24 15:57:10,063:INFO:PyCaret required dependencies:
2024-05-24 15:57:13,706:INFO:                 pip: 23.2.1
2024-05-24 15:57:13,706:INFO:          setuptools: 68.0.0
2024-05-24 15:57:13,706:INFO:             pycaret: 3.3.2
2024-05-24 15:57:13,706:INFO:             IPython: 8.15.0
2024-05-24 15:57:13,706:INFO:          ipywidgets: 8.0.4
2024-05-24 15:57:13,706:INFO:                tqdm: 4.65.0
2024-05-24 15:57:13,706:INFO:               numpy: 1.24.3
2024-05-24 15:57:13,706:INFO:              pandas: 2.0.3
2024-05-24 15:57:13,706:INFO:              jinja2: 3.1.2
2024-05-24 15:57:13,706:INFO:               scipy: 1.11.1
2024-05-24 15:57:13,706:INFO:              joblib: 1.2.0
2024-05-24 15:57:13,706:INFO:             sklearn: 1.4.2
2024-05-24 15:57:13,706:INFO:                pyod: 1.1.3
2024-05-24 15:57:13,706:INFO:            imblearn: 0.12.2
2024-05-24 15:57:13,706:INFO:   category_encoders: 2.6.3
2024-05-24 15:57:13,706:INFO:            lightgbm: 4.3.0
2024-05-24 15:57:13,706:INFO:               numba: 0.57.1
2024-05-24 15:57:13,706:INFO:            requests: 2.31.0
2024-05-24 15:57:13,706:INFO:          matplotlib: 3.7.2
2024-05-24 15:57:13,706:INFO:          scikitplot: 0.3.7
2024-05-24 15:57:13,706:INFO:         yellowbrick: 1.5
2024-05-24 15:57:13,706:INFO:              plotly: 5.22.0
2024-05-24 15:57:13,706:INFO:    plotly-resampler: Not installed
2024-05-24 15:57:13,706:INFO:             kaleido: 0.2.1
2024-05-24 15:57:13,706:INFO:           schemdraw: 0.15
2024-05-24 15:57:13,706:INFO:         statsmodels: 0.14.0
2024-05-24 15:57:13,706:INFO:              sktime: 0.26.0
2024-05-24 15:57:13,706:INFO:               tbats: 1.1.3
2024-05-24 15:57:13,706:INFO:            pmdarima: 2.0.4
2024-05-24 15:57:13,706:INFO:              psutil: 5.9.0
2024-05-24 15:57:13,706:INFO:          markupsafe: 2.1.1
2024-05-24 15:57:13,706:INFO:             pickle5: Not installed
2024-05-24 15:57:13,706:INFO:         cloudpickle: 2.2.1
2024-05-24 15:57:13,706:INFO:         deprecation: 2.1.0
2024-05-24 15:57:13,706:INFO:              xxhash: 2.0.2
2024-05-24 15:57:13,706:INFO:           wurlitzer: Not installed
2024-05-24 15:57:13,706:INFO:PyCaret optional dependencies:
2024-05-24 15:57:13,743:INFO:                shap: Not installed
2024-05-24 15:57:13,743:INFO:           interpret: Not installed
2024-05-24 15:57:13,743:INFO:                umap: Not installed
2024-05-24 15:57:13,743:INFO:     ydata_profiling: Not installed
2024-05-24 15:57:13,743:INFO:  explainerdashboard: Not installed
2024-05-24 15:57:13,743:INFO:             autoviz: Not installed
2024-05-24 15:57:13,743:INFO:           fairlearn: Not installed
2024-05-24 15:57:13,743:INFO:          deepchecks: Not installed
2024-05-24 15:57:13,743:INFO:             xgboost: Not installed
2024-05-24 15:57:13,743:INFO:            catboost: Not installed
2024-05-24 15:57:13,743:INFO:              kmodes: Not installed
2024-05-24 15:57:13,743:INFO:             mlxtend: Not installed
2024-05-24 15:57:13,743:INFO:       statsforecast: Not installed
2024-05-24 15:57:13,743:INFO:        tune_sklearn: Not installed
2024-05-24 15:57:13,743:INFO:                 ray: Not installed
2024-05-24 15:57:13,743:INFO:            hyperopt: Not installed
2024-05-24 15:57:13,743:INFO:              optuna: Not installed
2024-05-24 15:57:13,743:INFO:               skopt: Not installed
2024-05-24 15:57:13,743:INFO:              mlflow: Not installed
2024-05-24 15:57:13,743:INFO:              gradio: Not installed
2024-05-24 15:57:13,743:INFO:             fastapi: Not installed
2024-05-24 15:57:13,743:INFO:             uvicorn: Not installed
2024-05-24 15:57:13,743:INFO:              m2cgen: Not installed
2024-05-24 15:57:13,743:INFO:           evidently: Not installed
2024-05-24 15:57:13,743:INFO:               fugue: Not installed
2024-05-24 15:57:13,743:INFO:           streamlit: Not installed
2024-05-24 15:57:13,743:INFO:             prophet: Not installed
2024-05-24 15:57:13,743:INFO:None
2024-05-24 15:57:13,743:INFO:Set up data.
2024-05-24 15:57:13,762:INFO:Set up folding strategy.
2024-05-24 15:57:13,762:INFO:Set up train/test split.
2024-05-24 15:57:13,803:INFO:Set up index.
2024-05-24 15:57:13,803:INFO:Assigning column types.
2024-05-24 15:57:13,818:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-24 15:57:13,926:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:13,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:13,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:13,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:14,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:14,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,090:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-24 15:57:14,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:14,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,288:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:14,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,336:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-24 15:57:14,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,525:INFO:Preparing preprocessing pipeline...
2024-05-24 15:57:14,534:INFO:Set up simple imputation.
2024-05-24 15:57:14,543:INFO:Set up encoding of ordinal features.
2024-05-24 15:57:14,552:INFO:Set up encoding of categorical features.
2024-05-24 15:57:14,552:INFO:Set up imbalanced handling.
2024-05-24 15:57:14,553:INFO:Set up feature normalization.
2024-05-24 15:57:31,906:INFO:PyCaret ClassificationExperiment
2024-05-24 15:57:31,906:INFO:Logging name: clf-default-name
2024-05-24 15:57:31,906:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-24 15:57:31,906:INFO:version 3.3.2
2024-05-24 15:57:31,906:INFO:Initializing setup()
2024-05-24 15:57:31,906:INFO:self.USI: c7ed
2024-05-24 15:57:31,906:INFO:self._variable_keys: {'seed', 'X', 'is_multiclass', 'USI', 'X_test', 'target_param', 'memory', 'html_param', 'gpu_param', 'X_train', 'pipeline', 'fix_imbalance', 'y_train', '_available_plots', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'y', 'n_jobs_param', 'idx', 'fold_generator', 'log_plots_param', 'fold_groups_param', 'fold_shuffle_param', 'y_test', 'logging_param', 'data', '_ml_usecase'}
2024-05-24 15:57:31,906:INFO:Checking environment
2024-05-24 15:57:31,906:INFO:python_version: 3.11.5
2024-05-24 15:57:31,906:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-24 15:57:31,906:INFO:machine: AMD64
2024-05-24 15:57:31,906:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-24 15:57:31,912:INFO:Memory: svmem(total=8395403264, available=1868824576, percent=77.7, used=6526578688, free=1868824576)
2024-05-24 15:57:31,912:INFO:Physical Core: 4
2024-05-24 15:57:31,912:INFO:Logical Core: 8
2024-05-24 15:57:31,912:INFO:Checking libraries
2024-05-24 15:57:31,912:INFO:System:
2024-05-24 15:57:31,912:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-24 15:57:31,912:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-24 15:57:31,912:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-24 15:57:31,912:INFO:PyCaret required dependencies:
2024-05-24 15:57:31,912:INFO:                 pip: 23.2.1
2024-05-24 15:57:31,912:INFO:          setuptools: 68.0.0
2024-05-24 15:57:31,912:INFO:             pycaret: 3.3.2
2024-05-24 15:57:31,912:INFO:             IPython: 8.15.0
2024-05-24 15:57:31,912:INFO:          ipywidgets: 8.0.4
2024-05-24 15:57:31,912:INFO:                tqdm: 4.65.0
2024-05-24 15:57:31,912:INFO:               numpy: 1.24.3
2024-05-24 15:57:31,912:INFO:              pandas: 2.0.3
2024-05-24 15:57:31,912:INFO:              jinja2: 3.1.2
2024-05-24 15:57:31,912:INFO:               scipy: 1.11.1
2024-05-24 15:57:31,912:INFO:              joblib: 1.2.0
2024-05-24 15:57:31,912:INFO:             sklearn: 1.4.2
2024-05-24 15:57:31,912:INFO:                pyod: 1.1.3
2024-05-24 15:57:31,912:INFO:            imblearn: 0.12.2
2024-05-24 15:57:31,912:INFO:   category_encoders: 2.6.3
2024-05-24 15:57:31,912:INFO:            lightgbm: 4.3.0
2024-05-24 15:57:31,912:INFO:               numba: 0.57.1
2024-05-24 15:57:31,912:INFO:            requests: 2.31.0
2024-05-24 15:57:31,912:INFO:          matplotlib: 3.7.2
2024-05-24 15:57:31,912:INFO:          scikitplot: 0.3.7
2024-05-24 15:57:31,912:INFO:         yellowbrick: 1.5
2024-05-24 15:57:31,912:INFO:              plotly: 5.22.0
2024-05-24 15:57:31,919:INFO:    plotly-resampler: Not installed
2024-05-24 15:57:31,919:INFO:             kaleido: 0.2.1
2024-05-24 15:57:31,919:INFO:           schemdraw: 0.15
2024-05-24 15:57:31,919:INFO:         statsmodels: 0.14.0
2024-05-24 15:57:31,919:INFO:              sktime: 0.26.0
2024-05-24 15:57:31,919:INFO:               tbats: 1.1.3
2024-05-24 15:57:31,919:INFO:            pmdarima: 2.0.4
2024-05-24 15:57:31,919:INFO:              psutil: 5.9.0
2024-05-24 15:57:31,919:INFO:          markupsafe: 2.1.1
2024-05-24 15:57:31,919:INFO:             pickle5: Not installed
2024-05-24 15:57:31,919:INFO:         cloudpickle: 2.2.1
2024-05-24 15:57:31,919:INFO:         deprecation: 2.1.0
2024-05-24 15:57:31,919:INFO:              xxhash: 2.0.2
2024-05-24 15:57:31,919:INFO:           wurlitzer: Not installed
2024-05-24 15:57:31,919:INFO:PyCaret optional dependencies:
2024-05-24 15:57:31,921:INFO:                shap: Not installed
2024-05-24 15:57:31,921:INFO:           interpret: Not installed
2024-05-24 15:57:31,921:INFO:                umap: Not installed
2024-05-24 15:57:31,922:INFO:     ydata_profiling: Not installed
2024-05-24 15:57:31,922:INFO:  explainerdashboard: Not installed
2024-05-24 15:57:31,922:INFO:             autoviz: Not installed
2024-05-24 15:57:31,922:INFO:           fairlearn: Not installed
2024-05-24 15:57:31,922:INFO:          deepchecks: Not installed
2024-05-24 15:57:31,922:INFO:             xgboost: Not installed
2024-05-24 15:57:31,922:INFO:            catboost: Not installed
2024-05-24 15:57:31,922:INFO:              kmodes: Not installed
2024-05-24 15:57:31,922:INFO:             mlxtend: Not installed
2024-05-24 15:57:31,922:INFO:       statsforecast: Not installed
2024-05-24 15:57:31,922:INFO:        tune_sklearn: Not installed
2024-05-24 15:57:31,922:INFO:                 ray: Not installed
2024-05-24 15:57:31,922:INFO:            hyperopt: Not installed
2024-05-24 15:57:31,922:INFO:              optuna: Not installed
2024-05-24 15:57:31,922:INFO:               skopt: Not installed
2024-05-24 15:57:31,922:INFO:              mlflow: Not installed
2024-05-24 15:57:31,922:INFO:              gradio: Not installed
2024-05-24 15:57:31,922:INFO:             fastapi: Not installed
2024-05-24 15:57:31,922:INFO:             uvicorn: Not installed
2024-05-24 15:57:31,922:INFO:              m2cgen: Not installed
2024-05-24 15:57:31,922:INFO:           evidently: Not installed
2024-05-24 15:57:31,922:INFO:               fugue: Not installed
2024-05-24 15:57:31,922:INFO:           streamlit: Not installed
2024-05-24 15:57:31,922:INFO:             prophet: Not installed
2024-05-24 15:57:31,922:INFO:None
2024-05-24 15:57:31,922:INFO:Set up data.
2024-05-24 15:57:31,941:INFO:Set up folding strategy.
2024-05-24 15:57:31,941:INFO:Set up train/test split.
2024-05-24 15:57:31,964:INFO:Set up index.
2024-05-24 15:57:31,964:INFO:Assigning column types.
2024-05-24 15:57:31,984:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-24 15:57:32,076:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,079:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,209:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,244:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-24 15:57:32,384:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,497:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,549:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-24 15:57:32,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,858:INFO:Preparing preprocessing pipeline...
2024-05-24 15:57:32,873:INFO:Set up simple imputation.
2024-05-24 15:57:32,898:INFO:Set up encoding of ordinal features.
2024-05-24 15:57:32,936:INFO:Set up encoding of categorical features.
2024-05-24 15:57:32,938:INFO:Set up imbalanced handling.
2024-05-24 15:57:56,781:INFO:PyCaret ClassificationExperiment
2024-05-24 15:57:56,781:INFO:Logging name: clf-default-name
2024-05-24 15:57:56,781:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-24 15:57:56,781:INFO:version 3.3.2
2024-05-24 15:57:56,781:INFO:Initializing setup()
2024-05-24 15:57:56,781:INFO:self.USI: e2f2
2024-05-24 15:57:56,781:INFO:self._variable_keys: {'seed', 'X', 'is_multiclass', 'USI', 'X_test', 'target_param', 'memory', 'html_param', 'gpu_param', 'X_train', 'pipeline', 'fix_imbalance', 'y_train', '_available_plots', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'y', 'n_jobs_param', 'idx', 'fold_generator', 'log_plots_param', 'fold_groups_param', 'fold_shuffle_param', 'y_test', 'logging_param', 'data', '_ml_usecase'}
2024-05-24 15:57:56,781:INFO:Checking environment
2024-05-24 15:57:56,781:INFO:python_version: 3.11.5
2024-05-24 15:57:56,781:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-24 15:57:56,781:INFO:machine: AMD64
2024-05-24 15:57:56,781:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-24 15:57:56,781:INFO:Memory: svmem(total=8395403264, available=1959620608, percent=76.7, used=6435782656, free=1959620608)
2024-05-24 15:57:56,781:INFO:Physical Core: 4
2024-05-24 15:57:56,781:INFO:Logical Core: 8
2024-05-24 15:57:56,781:INFO:Checking libraries
2024-05-24 15:57:56,781:INFO:System:
2024-05-24 15:57:56,781:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-24 15:57:56,781:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-24 15:57:56,781:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-24 15:57:56,781:INFO:PyCaret required dependencies:
2024-05-24 15:57:56,781:INFO:                 pip: 23.2.1
2024-05-24 15:57:56,781:INFO:          setuptools: 68.0.0
2024-05-24 15:57:56,781:INFO:             pycaret: 3.3.2
2024-05-24 15:57:56,781:INFO:             IPython: 8.15.0
2024-05-24 15:57:56,781:INFO:          ipywidgets: 8.0.4
2024-05-24 15:57:56,781:INFO:                tqdm: 4.65.0
2024-05-24 15:57:56,781:INFO:               numpy: 1.24.3
2024-05-24 15:57:56,781:INFO:              pandas: 2.0.3
2024-05-24 15:57:56,781:INFO:              jinja2: 3.1.2
2024-05-24 15:57:56,781:INFO:               scipy: 1.11.1
2024-05-24 15:57:56,781:INFO:              joblib: 1.2.0
2024-05-24 15:57:56,781:INFO:             sklearn: 1.4.2
2024-05-24 15:57:56,781:INFO:                pyod: 1.1.3
2024-05-24 15:57:56,781:INFO:            imblearn: 0.12.2
2024-05-24 15:57:56,781:INFO:   category_encoders: 2.6.3
2024-05-24 15:57:56,781:INFO:            lightgbm: 4.3.0
2024-05-24 15:57:56,781:INFO:               numba: 0.57.1
2024-05-24 15:57:56,781:INFO:            requests: 2.31.0
2024-05-24 15:57:56,781:INFO:          matplotlib: 3.7.2
2024-05-24 15:57:56,781:INFO:          scikitplot: 0.3.7
2024-05-24 15:57:56,781:INFO:         yellowbrick: 1.5
2024-05-24 15:57:56,781:INFO:              plotly: 5.22.0
2024-05-24 15:57:56,790:INFO:    plotly-resampler: Not installed
2024-05-24 15:57:56,790:INFO:             kaleido: 0.2.1
2024-05-24 15:57:56,790:INFO:           schemdraw: 0.15
2024-05-24 15:57:56,790:INFO:         statsmodels: 0.14.0
2024-05-24 15:57:56,790:INFO:              sktime: 0.26.0
2024-05-24 15:57:56,790:INFO:               tbats: 1.1.3
2024-05-24 15:57:56,791:INFO:            pmdarima: 2.0.4
2024-05-24 15:57:56,791:INFO:              psutil: 5.9.0
2024-05-24 15:57:56,791:INFO:          markupsafe: 2.1.1
2024-05-24 15:57:56,791:INFO:             pickle5: Not installed
2024-05-24 15:57:56,791:INFO:         cloudpickle: 2.2.1
2024-05-24 15:57:56,792:INFO:         deprecation: 2.1.0
2024-05-24 15:57:56,792:INFO:              xxhash: 2.0.2
2024-05-24 15:57:56,792:INFO:           wurlitzer: Not installed
2024-05-24 15:57:56,792:INFO:PyCaret optional dependencies:
2024-05-24 15:57:56,792:INFO:                shap: Not installed
2024-05-24 15:57:56,792:INFO:           interpret: Not installed
2024-05-24 15:57:56,792:INFO:                umap: Not installed
2024-05-24 15:57:56,792:INFO:     ydata_profiling: Not installed
2024-05-24 15:57:56,792:INFO:  explainerdashboard: Not installed
2024-05-24 15:57:56,792:INFO:             autoviz: Not installed
2024-05-24 15:57:56,792:INFO:           fairlearn: Not installed
2024-05-24 15:57:56,792:INFO:          deepchecks: Not installed
2024-05-24 15:57:56,792:INFO:             xgboost: Not installed
2024-05-24 15:57:56,792:INFO:            catboost: Not installed
2024-05-24 15:57:56,792:INFO:              kmodes: Not installed
2024-05-24 15:57:56,792:INFO:             mlxtend: Not installed
2024-05-24 15:57:56,792:INFO:       statsforecast: Not installed
2024-05-24 15:57:56,792:INFO:        tune_sklearn: Not installed
2024-05-24 15:57:56,792:INFO:                 ray: Not installed
2024-05-24 15:57:56,792:INFO:            hyperopt: Not installed
2024-05-24 15:57:56,792:INFO:              optuna: Not installed
2024-05-24 15:57:56,792:INFO:               skopt: Not installed
2024-05-24 15:57:56,792:INFO:              mlflow: Not installed
2024-05-24 15:57:56,792:INFO:              gradio: Not installed
2024-05-24 15:57:56,792:INFO:             fastapi: Not installed
2024-05-24 15:57:56,792:INFO:             uvicorn: Not installed
2024-05-24 15:57:56,792:INFO:              m2cgen: Not installed
2024-05-24 15:57:56,792:INFO:           evidently: Not installed
2024-05-24 15:57:56,792:INFO:               fugue: Not installed
2024-05-24 15:57:56,792:INFO:           streamlit: Not installed
2024-05-24 15:57:56,792:INFO:             prophet: Not installed
2024-05-24 15:57:56,792:INFO:None
2024-05-24 15:57:56,792:INFO:Set up data.
2024-05-24 15:57:56,807:INFO:Set up folding strategy.
2024-05-24 15:57:56,807:INFO:Set up train/test split.
2024-05-24 15:57:56,814:INFO:Set up index.
2024-05-24 15:57:56,814:INFO:Assigning column types.
2024-05-24 15:57:56,831:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-24 15:57:56,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:56,903:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:56,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:56,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:57,026:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:57,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,067:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-24 15:57:57,130:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:57,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,238:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:57,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,286:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-24 15:57:57,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,528:INFO:Preparing preprocessing pipeline...
2024-05-24 15:57:57,532:INFO:Set up simple imputation.
2024-05-24 15:57:57,541:INFO:Set up encoding of ordinal features.
2024-05-24 15:57:57,553:INFO:Set up encoding of categorical features.
2024-05-24 15:57:57,553:INFO:Set up imbalanced handling.
2024-05-24 16:39:36,637:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 16:39:36,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 16:39:36,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 16:39:36,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 16:39:40,701:INFO:PyCaret ClassificationExperiment
2024-05-24 16:39:40,701:INFO:Logging name: clf-default-name
2024-05-24 16:39:40,701:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-24 16:39:40,701:INFO:version 3.2.0
2024-05-24 16:39:40,701:INFO:Initializing setup()
2024-05-24 16:39:40,701:INFO:self.USI: 16ab
2024-05-24 16:39:40,701:INFO:self._variable_keys: {'html_param', 'memory', 'fold_generator', 'idx', 'log_plots_param', 'data', 'X_train', 'is_multiclass', '_ml_usecase', 'fix_imbalance', 'logging_param', 'gpu_param', 'exp_name_log', 'pipeline', 'y', 'X_test', 'gpu_n_jobs_param', 'n_jobs_param', 'target_param', 'seed', 'X', 'fold_shuffle_param', 'exp_id', 'y_train', '_available_plots', 'y_test', 'USI', 'fold_groups_param'}
2024-05-24 16:39:40,701:INFO:Checking environment
2024-05-24 16:39:40,701:INFO:python_version: 3.11.5
2024-05-24 16:39:40,701:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-24 16:39:40,701:INFO:machine: AMD64
2024-05-24 16:39:40,701:INFO:platform: Windows-10-10.0.19045-SP0
2024-05-24 16:39:40,701:INFO:Memory: svmem(total=8471379968, available=1535717376, percent=81.9, used=6935662592, free=1535717376)
2024-05-24 16:39:40,701:INFO:Physical Core: 2
2024-05-24 16:39:40,701:INFO:Logical Core: 4
2024-05-24 16:39:40,701:INFO:Checking libraries
2024-05-24 16:39:40,701:INFO:System:
2024-05-24 16:39:40,701:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-24 16:39:40,701:INFO:executable: c:\Users\clemc\anaconda3\python.exe
2024-05-24 16:39:40,701:INFO:   machine: Windows-10-10.0.19045-SP0
2024-05-24 16:39:40,701:INFO:PyCaret required dependencies:
2024-05-24 16:39:43,299:INFO:                 pip: 23.2.1
2024-05-24 16:39:43,299:INFO:          setuptools: 68.0.0
2024-05-24 16:39:43,299:INFO:             pycaret: 3.2.0
2024-05-24 16:39:43,299:INFO:             IPython: 8.15.0
2024-05-24 16:39:43,299:INFO:          ipywidgets: 8.0.4
2024-05-24 16:39:43,299:INFO:                tqdm: 4.65.0
2024-05-24 16:39:43,299:INFO:               numpy: 1.24.3
2024-05-24 16:39:43,299:INFO:              pandas: 1.5.3
2024-05-24 16:39:43,299:INFO:              jinja2: 3.1.2
2024-05-24 16:39:43,299:INFO:               scipy: 1.10.1
2024-05-24 16:39:43,299:INFO:              joblib: 1.2.0
2024-05-24 16:39:43,299:INFO:             sklearn: 1.2.2
2024-05-24 16:39:43,299:INFO:                pyod: 1.1.2
2024-05-24 16:39:43,299:INFO:            imblearn: 0.10.1
2024-05-24 16:39:43,299:INFO:   category_encoders: 2.6.3
2024-05-24 16:39:43,299:INFO:            lightgbm: 4.2.0
2024-05-24 16:39:43,299:INFO:               numba: 0.57.1
2024-05-24 16:39:43,310:INFO:            requests: 2.31.0
2024-05-24 16:39:43,311:INFO:          matplotlib: 3.6.0
2024-05-24 16:39:43,311:INFO:          scikitplot: 0.3.7
2024-05-24 16:39:43,311:INFO:         yellowbrick: 1.5
2024-05-24 16:39:43,312:INFO:              plotly: 5.9.0
2024-05-24 16:39:43,312:INFO:    plotly-resampler: Not installed
2024-05-24 16:39:43,312:INFO:             kaleido: 0.2.1
2024-05-24 16:39:43,312:INFO:           schemdraw: 0.15
2024-05-24 16:39:43,312:INFO:         statsmodels: 0.14.0
2024-05-24 16:39:43,312:INFO:              sktime: 0.21.1
2024-05-24 16:39:43,314:INFO:               tbats: 1.1.3
2024-05-24 16:39:43,314:INFO:            pmdarima: 2.0.4
2024-05-24 16:39:43,314:INFO:              psutil: 5.9.0
2024-05-24 16:39:43,314:INFO:          markupsafe: 2.1.1
2024-05-24 16:39:43,315:INFO:             pickle5: Not installed
2024-05-24 16:39:43,315:INFO:         cloudpickle: 2.2.1
2024-05-24 16:39:43,316:INFO:         deprecation: 2.1.0
2024-05-24 16:39:43,316:INFO:              xxhash: 2.0.2
2024-05-24 16:39:43,316:INFO:           wurlitzer: Not installed
2024-05-24 16:39:43,316:INFO:PyCaret optional dependencies:
2024-05-24 16:39:43,335:INFO:                shap: Not installed
2024-05-24 16:39:43,342:INFO:           interpret: Not installed
2024-05-24 16:39:43,343:INFO:                umap: Not installed
2024-05-24 16:39:43,344:INFO:     ydata_profiling: Not installed
2024-05-24 16:39:43,344:INFO:  explainerdashboard: Not installed
2024-05-24 16:39:43,344:INFO:             autoviz: Not installed
2024-05-24 16:39:43,344:INFO:           fairlearn: Not installed
2024-05-24 16:39:43,344:INFO:          deepchecks: Not installed
2024-05-24 16:39:43,345:INFO:             xgboost: Not installed
2024-05-24 16:39:43,345:INFO:            catboost: Not installed
2024-05-24 16:39:43,345:INFO:              kmodes: Not installed
2024-05-24 16:39:43,345:INFO:             mlxtend: Not installed
2024-05-24 16:39:43,345:INFO:       statsforecast: Not installed
2024-05-24 16:39:43,345:INFO:        tune_sklearn: Not installed
2024-05-24 16:39:43,345:INFO:                 ray: Not installed
2024-05-24 16:39:43,345:INFO:            hyperopt: Not installed
2024-05-24 16:39:43,345:INFO:              optuna: Not installed
2024-05-24 16:39:43,345:INFO:               skopt: Not installed
2024-05-24 16:39:43,345:INFO:              mlflow: 2.13.0
2024-05-24 16:39:43,345:INFO:              gradio: Not installed
2024-05-24 16:39:43,345:INFO:             fastapi: Not installed
2024-05-24 16:39:43,345:INFO:             uvicorn: Not installed
2024-05-24 16:39:43,345:INFO:              m2cgen: Not installed
2024-05-24 16:39:43,345:INFO:           evidently: Not installed
2024-05-24 16:39:43,345:INFO:               fugue: Not installed
2024-05-24 16:39:43,345:INFO:           streamlit: Not installed
2024-05-24 16:39:43,345:INFO:             prophet: Not installed
2024-05-24 16:39:43,349:INFO:None
2024-05-24 16:39:43,349:INFO:Set up data.
2024-05-24 16:39:43,360:INFO:Set up folding strategy.
2024-05-24 16:39:43,360:INFO:Set up train/test split.
2024-05-24 16:39:43,413:INFO:Set up index.
2024-05-24 16:39:43,413:INFO:Assigning column types.
2024-05-24 16:39:43,413:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-24 16:39:43,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,661:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-24 16:39:43,713:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,814:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,858:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-24 16:39:43,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:44,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:44,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:44,072:INFO:Preparing preprocessing pipeline...
2024-05-24 16:39:44,076:INFO:Set up simple imputation.
2024-05-24 16:39:44,077:INFO:Set up encoding of ordinal features.
2024-05-24 16:39:44,077:INFO:Set up encoding of categorical features.
2024-05-24 16:39:44,077:INFO:Set up imbalanced handling.
2024-05-27 18:14:22,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-27 18:14:22,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-27 18:14:22,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-27 18:14:22,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-27 18:20:58,612:INFO:PyCaret ClassificationExperiment
2024-05-27 18:20:58,614:INFO:Logging name: clf-default-name
2024-05-27 18:20:58,614:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-27 18:20:58,614:INFO:version 3.3.2
2024-05-27 18:20:58,614:INFO:Initializing setup()
2024-05-27 18:20:58,614:INFO:self.USI: 6f71
2024-05-27 18:20:58,614:INFO:self._variable_keys: {'y', 'is_multiclass', '_ml_usecase', 'logging_param', 'fold_groups_param', 'X_train', 'USI', '_available_plots', 'X_test', 'y_train', 'seed', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'memory', 'n_jobs_param', 'exp_id', 'html_param', 'X', 'data', 'fold_generator', 'idx', 'gpu_param', 'y_test', 'fix_imbalance', 'fold_shuffle_param', 'target_param', 'pipeline'}
2024-05-27 18:20:58,614:INFO:Checking environment
2024-05-27 18:20:58,615:INFO:python_version: 3.11.5
2024-05-27 18:20:58,615:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-27 18:20:58,615:INFO:machine: AMD64
2024-05-27 18:20:58,615:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-27 18:20:58,619:INFO:Memory: svmem(total=8395403264, available=1115701248, percent=86.7, used=7279702016, free=1115701248)
2024-05-27 18:20:58,619:INFO:Physical Core: 4
2024-05-27 18:20:58,619:INFO:Logical Core: 8
2024-05-27 18:20:58,619:INFO:Checking libraries
2024-05-27 18:20:58,619:INFO:System:
2024-05-27 18:20:58,619:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-27 18:20:58,619:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-27 18:20:58,619:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-27 18:20:58,619:INFO:PyCaret required dependencies:
2024-05-27 18:21:02,672:INFO:                 pip: 23.2.1
2024-05-27 18:21:02,673:INFO:          setuptools: 68.0.0
2024-05-27 18:21:02,673:INFO:             pycaret: 3.3.2
2024-05-27 18:21:02,673:INFO:             IPython: 8.15.0
2024-05-27 18:21:02,673:INFO:          ipywidgets: 8.0.4
2024-05-27 18:21:02,674:INFO:                tqdm: 4.65.0
2024-05-27 18:21:02,674:INFO:               numpy: 1.24.3
2024-05-27 18:21:02,674:INFO:              pandas: 2.0.3
2024-05-27 18:21:02,674:INFO:              jinja2: 3.1.2
2024-05-27 18:21:02,675:INFO:               scipy: 1.11.1
2024-05-27 18:21:02,675:INFO:              joblib: 1.2.0
2024-05-27 18:21:02,675:INFO:             sklearn: 1.4.2
2024-05-27 18:21:02,675:INFO:                pyod: 1.1.3
2024-05-27 18:21:02,675:INFO:            imblearn: 0.12.2
2024-05-27 18:21:02,676:INFO:   category_encoders: 2.6.3
2024-05-27 18:21:02,676:INFO:            lightgbm: 4.3.0
2024-05-27 18:21:02,676:INFO:               numba: 0.57.1
2024-05-27 18:21:02,676:INFO:            requests: 2.31.0
2024-05-27 18:21:02,677:INFO:          matplotlib: 3.7.2
2024-05-27 18:21:02,677:INFO:          scikitplot: 0.3.7
2024-05-27 18:21:02,677:INFO:         yellowbrick: 1.5
2024-05-27 18:21:02,677:INFO:              plotly: 5.22.0
2024-05-27 18:21:02,677:INFO:    plotly-resampler: Not installed
2024-05-27 18:21:02,677:INFO:             kaleido: 0.2.1
2024-05-27 18:21:02,677:INFO:           schemdraw: 0.15
2024-05-27 18:21:02,678:INFO:         statsmodels: 0.14.0
2024-05-27 18:21:02,678:INFO:              sktime: 0.26.0
2024-05-27 18:21:02,678:INFO:               tbats: 1.1.3
2024-05-27 18:21:02,679:INFO:            pmdarima: 2.0.4
2024-05-27 18:21:02,679:INFO:              psutil: 5.9.0
2024-05-27 18:21:02,679:INFO:          markupsafe: 2.1.1
2024-05-27 18:21:02,679:INFO:             pickle5: Not installed
2024-05-27 18:21:02,680:INFO:         cloudpickle: 2.2.1
2024-05-27 18:21:02,680:INFO:         deprecation: 2.1.0
2024-05-27 18:21:02,680:INFO:              xxhash: 2.0.2
2024-05-27 18:21:02,680:INFO:           wurlitzer: Not installed
2024-05-27 18:21:02,681:INFO:PyCaret optional dependencies:
2024-05-27 18:21:02,740:INFO:                shap: Not installed
2024-05-27 18:21:02,740:INFO:           interpret: Not installed
2024-05-27 18:21:02,740:INFO:                umap: Not installed
2024-05-27 18:21:02,740:INFO:     ydata_profiling: Not installed
2024-05-27 18:21:02,740:INFO:  explainerdashboard: Not installed
2024-05-27 18:21:02,740:INFO:             autoviz: Not installed
2024-05-27 18:21:02,740:INFO:           fairlearn: Not installed
2024-05-27 18:21:02,740:INFO:          deepchecks: Not installed
2024-05-27 18:21:02,740:INFO:             xgboost: Not installed
2024-05-27 18:21:02,741:INFO:            catboost: Not installed
2024-05-27 18:21:02,741:INFO:              kmodes: Not installed
2024-05-27 18:21:02,741:INFO:             mlxtend: Not installed
2024-05-27 18:21:02,741:INFO:       statsforecast: Not installed
2024-05-27 18:21:02,741:INFO:        tune_sklearn: Not installed
2024-05-27 18:21:02,742:INFO:                 ray: Not installed
2024-05-27 18:21:02,742:INFO:            hyperopt: Not installed
2024-05-27 18:21:02,742:INFO:              optuna: Not installed
2024-05-27 18:21:02,742:INFO:               skopt: Not installed
2024-05-27 18:21:02,742:INFO:              mlflow: 2.13.0
2024-05-27 18:21:02,742:INFO:              gradio: Not installed
2024-05-27 18:21:02,742:INFO:             fastapi: Not installed
2024-05-27 18:21:02,742:INFO:             uvicorn: Not installed
2024-05-27 18:21:02,742:INFO:              m2cgen: Not installed
2024-05-27 18:21:02,742:INFO:           evidently: Not installed
2024-05-27 18:21:02,743:INFO:               fugue: Not installed
2024-05-27 18:21:02,743:INFO:           streamlit: Not installed
2024-05-27 18:21:02,743:INFO:             prophet: Not installed
2024-05-27 18:21:02,743:INFO:None
2024-05-27 18:21:02,743:INFO:Set up data.
2024-05-27 18:21:02,768:INFO:Set up folding strategy.
2024-05-27 18:21:02,769:INFO:Set up train/test split.
2024-05-27 18:21:02,795:INFO:Set up index.
2024-05-27 18:21:02,795:INFO:Assigning column types.
2024-05-27 18:21:02,813:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-27 18:21:02,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-27 18:21:02,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:21:02,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:02,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-27 18:21:03,067:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:21:03,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,103:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-27 18:21:03,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:21:03,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,264:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:21:03,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,325:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-27 18:21:03,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,523:INFO:Preparing preprocessing pipeline...
2024-05-27 18:21:03,527:INFO:Set up simple imputation.
2024-05-27 18:21:03,540:INFO:Set up encoding of ordinal features.
2024-05-27 18:21:03,557:INFO:Set up encoding of categorical features.
2024-05-27 18:21:03,557:INFO:Set up imbalanced handling.
2024-05-27 18:26:19,818:INFO:PyCaret ClassificationExperiment
2024-05-27 18:26:19,818:INFO:Logging name: clf-default-name
2024-05-27 18:26:19,818:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-27 18:26:19,818:INFO:version 3.3.2
2024-05-27 18:26:19,818:INFO:Initializing setup()
2024-05-27 18:26:19,819:INFO:self.USI: ac56
2024-05-27 18:26:19,819:INFO:self._variable_keys: {'y', 'is_multiclass', '_ml_usecase', 'logging_param', 'fold_groups_param', 'X_train', 'USI', '_available_plots', 'X_test', 'y_train', 'seed', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'memory', 'n_jobs_param', 'exp_id', 'html_param', 'X', 'data', 'fold_generator', 'idx', 'gpu_param', 'y_test', 'fix_imbalance', 'fold_shuffle_param', 'target_param', 'pipeline'}
2024-05-27 18:26:19,819:INFO:Checking environment
2024-05-27 18:26:19,819:INFO:python_version: 3.11.5
2024-05-27 18:26:19,819:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-27 18:26:19,819:INFO:machine: AMD64
2024-05-27 18:26:19,819:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-27 18:26:19,819:INFO:Memory: svmem(total=8395403264, available=459862016, percent=94.5, used=7935541248, free=459862016)
2024-05-27 18:26:19,819:INFO:Physical Core: 4
2024-05-27 18:26:19,819:INFO:Logical Core: 8
2024-05-27 18:26:19,819:INFO:Checking libraries
2024-05-27 18:26:19,819:INFO:System:
2024-05-27 18:26:19,819:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-27 18:26:19,819:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-27 18:26:19,819:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-27 18:26:19,819:INFO:PyCaret required dependencies:
2024-05-27 18:26:19,819:INFO:                 pip: 23.2.1
2024-05-27 18:26:19,819:INFO:          setuptools: 68.0.0
2024-05-27 18:26:19,819:INFO:             pycaret: 3.3.2
2024-05-27 18:26:19,819:INFO:             IPython: 8.15.0
2024-05-27 18:26:19,819:INFO:          ipywidgets: 8.0.4
2024-05-27 18:26:19,819:INFO:                tqdm: 4.65.0
2024-05-27 18:26:19,819:INFO:               numpy: 1.24.3
2024-05-27 18:26:19,819:INFO:              pandas: 2.0.3
2024-05-27 18:26:19,819:INFO:              jinja2: 3.1.2
2024-05-27 18:26:19,819:INFO:               scipy: 1.11.1
2024-05-27 18:26:19,819:INFO:              joblib: 1.2.0
2024-05-27 18:26:19,819:INFO:             sklearn: 1.4.2
2024-05-27 18:26:19,819:INFO:                pyod: 1.1.3
2024-05-27 18:26:19,819:INFO:            imblearn: 0.12.2
2024-05-27 18:26:19,819:INFO:   category_encoders: 2.6.3
2024-05-27 18:26:19,819:INFO:            lightgbm: 4.3.0
2024-05-27 18:26:19,819:INFO:               numba: 0.57.1
2024-05-27 18:26:19,819:INFO:            requests: 2.31.0
2024-05-27 18:26:19,819:INFO:          matplotlib: 3.7.2
2024-05-27 18:26:19,819:INFO:          scikitplot: 0.3.7
2024-05-27 18:26:19,819:INFO:         yellowbrick: 1.5
2024-05-27 18:26:19,819:INFO:              plotly: 5.22.0
2024-05-27 18:26:19,819:INFO:    plotly-resampler: Not installed
2024-05-27 18:26:19,819:INFO:             kaleido: 0.2.1
2024-05-27 18:26:19,819:INFO:           schemdraw: 0.15
2024-05-27 18:26:19,819:INFO:         statsmodels: 0.14.0
2024-05-27 18:26:19,819:INFO:              sktime: 0.26.0
2024-05-27 18:26:19,819:INFO:               tbats: 1.1.3
2024-05-27 18:26:19,819:INFO:            pmdarima: 2.0.4
2024-05-27 18:26:19,819:INFO:              psutil: 5.9.0
2024-05-27 18:26:19,819:INFO:          markupsafe: 2.1.1
2024-05-27 18:26:19,819:INFO:             pickle5: Not installed
2024-05-27 18:26:19,829:INFO:         cloudpickle: 2.2.1
2024-05-27 18:26:19,829:INFO:         deprecation: 2.1.0
2024-05-27 18:26:19,829:INFO:              xxhash: 2.0.2
2024-05-27 18:26:19,829:INFO:           wurlitzer: Not installed
2024-05-27 18:26:19,829:INFO:PyCaret optional dependencies:
2024-05-27 18:26:19,830:INFO:                shap: Not installed
2024-05-27 18:26:19,830:INFO:           interpret: Not installed
2024-05-27 18:26:19,830:INFO:                umap: Not installed
2024-05-27 18:26:19,830:INFO:     ydata_profiling: Not installed
2024-05-27 18:26:19,830:INFO:  explainerdashboard: Not installed
2024-05-27 18:26:19,830:INFO:             autoviz: Not installed
2024-05-27 18:26:19,830:INFO:           fairlearn: Not installed
2024-05-27 18:26:19,830:INFO:          deepchecks: Not installed
2024-05-27 18:26:19,830:INFO:             xgboost: Not installed
2024-05-27 18:26:19,830:INFO:            catboost: Not installed
2024-05-27 18:26:19,830:INFO:              kmodes: Not installed
2024-05-27 18:26:19,830:INFO:             mlxtend: Not installed
2024-05-27 18:26:19,830:INFO:       statsforecast: Not installed
2024-05-27 18:26:19,831:INFO:        tune_sklearn: Not installed
2024-05-27 18:26:19,831:INFO:                 ray: Not installed
2024-05-27 18:26:19,831:INFO:            hyperopt: Not installed
2024-05-27 18:26:19,831:INFO:              optuna: Not installed
2024-05-27 18:26:19,831:INFO:               skopt: Not installed
2024-05-27 18:26:19,831:INFO:              mlflow: 2.13.0
2024-05-27 18:26:19,832:INFO:              gradio: Not installed
2024-05-27 18:26:19,832:INFO:             fastapi: Not installed
2024-05-27 18:26:19,832:INFO:             uvicorn: Not installed
2024-05-27 18:26:19,832:INFO:              m2cgen: Not installed
2024-05-27 18:26:19,832:INFO:           evidently: Not installed
2024-05-27 18:26:19,832:INFO:               fugue: Not installed
2024-05-27 18:26:19,832:INFO:           streamlit: Not installed
2024-05-27 18:26:19,832:INFO:             prophet: Not installed
2024-05-27 18:26:19,832:INFO:None
2024-05-27 18:26:19,832:INFO:Set up data.
2024-05-27 18:26:19,855:INFO:Set up folding strategy.
2024-05-27 18:26:19,855:INFO:Set up train/test split.
2024-05-27 18:26:19,879:INFO:Set up index.
2024-05-27 18:26:19,879:INFO:Assigning column types.
2024-05-27 18:26:19,895:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-27 18:26:19,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-27 18:26:19,965:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,058:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,060:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,107:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-27 18:26:20,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,437:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-27 18:26:20,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,680:INFO:Preparing preprocessing pipeline...
2024-05-27 18:26:20,682:INFO:Set up label encoding.
2024-05-27 18:26:20,682:INFO:Set up simple imputation.
2024-05-27 18:26:20,698:INFO:Set up encoding of ordinal features.
2024-05-27 18:26:20,712:INFO:Set up encoding of categorical features.
2024-05-27 18:26:20,712:INFO:Set up imbalanced handling.
2024-05-27 18:26:21,066:INFO:Finished creating preprocessing pipeline.
2024-05-27 18:26:21,126:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['moyenne_conso_agri_hab',
                                             'moyenne_conso_indus_hab',
                                             'moyenne_conso_tertiaire_hab',
                                             'moyenne_conso_resid...
                                    transformer=TargetEncoder(cols=['CSP_maire'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-05-27 18:26:21,126:INFO:Creating final display dataframe.
2024-05-27 18:26:22,217:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target  beneficiaire_trans_eco
2                   Target type                  Binary
3                Target mapping              0: 0, 1: 1
4           Original data shape              (1189, 32)
5        Transformed data shape              (1739, 41)
6   Transformed train set shape              (1382, 41)
7    Transformed test set shape               (357, 41)
8              Numeric features                      22
9          Categorical features                       6
10                   Preprocess                    True
11              Imputation type                  simple
12           Numeric imputation                    mean
13       Categorical imputation                    mode
14     Maximum one-hot encoding                      25
15              Encoding method                    None
16                Fix imbalance                    True
17         Fix imbalance method                   smote
18               Fold Generator         StratifiedKFold
19                  Fold Number                      10
20                     CPU Jobs                      -1
21                      Use GPU                   False
22               Log Experiment                   False
23              Experiment Name        clf-default-name
24                          USI                    ac56
2024-05-27 18:26:22,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:22,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:22,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:22,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:22,566:INFO:setup() successfully completed in 2.75s...............
2024-05-27 18:28:09,933:INFO:Initializing compare_models()
2024-05-27 18:28:09,934:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-27 18:28:09,934:INFO:Checking exceptions
2024-05-27 18:28:09,947:INFO:Preparing display monitor
2024-05-27 18:28:09,995:INFO:Initializing Logistic Regression
2024-05-27 18:28:09,995:INFO:Total runtime is 0.0 minutes
2024-05-27 18:28:10,006:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:10,006:INFO:Initializing create_model()
2024-05-27 18:28:10,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:10,006:INFO:Checking exceptions
2024-05-27 18:28:10,007:INFO:Importing libraries
2024-05-27 18:28:10,007:INFO:Copying training dataset
2024-05-27 18:28:10,022:INFO:Defining folds
2024-05-27 18:28:10,023:INFO:Declaring metric variables
2024-05-27 18:28:10,030:INFO:Importing untrained model
2024-05-27 18:28:10,036:INFO:Logistic Regression Imported successfully
2024-05-27 18:28:10,050:INFO:Starting cross validation
2024-05-27 18:28:10,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:32,857:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,939:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,947:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,987:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,035:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,047:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,071:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,071:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,099:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,116:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,140:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,152:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,165:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,756:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:33,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:33,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,831:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,835:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,857:INFO:Calculating mean and std
2024-05-27 18:28:33,860:INFO:Creating metrics dataframe
2024-05-27 18:28:33,875:INFO:Uploading results into container
2024-05-27 18:28:33,875:INFO:Uploading model into container now
2024-05-27 18:28:33,882:INFO:_master_model_container: 1
2024-05-27 18:28:33,882:INFO:_display_container: 2
2024-05-27 18:28:33,884:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-27 18:28:33,884:INFO:create_model() successfully completed......................................
2024-05-27 18:28:34,986:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:34,986:INFO:Creating metrics dataframe
2024-05-27 18:28:35,016:INFO:Initializing K Neighbors Classifier
2024-05-27 18:28:35,016:INFO:Total runtime is 0.41701706250508624 minutes
2024-05-27 18:28:35,020:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:35,020:INFO:Initializing create_model()
2024-05-27 18:28:35,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:35,020:INFO:Checking exceptions
2024-05-27 18:28:35,020:INFO:Importing libraries
2024-05-27 18:28:35,020:INFO:Copying training dataset
2024-05-27 18:28:35,052:INFO:Defining folds
2024-05-27 18:28:35,052:INFO:Declaring metric variables
2024-05-27 18:28:35,090:INFO:Importing untrained model
2024-05-27 18:28:35,107:INFO:K Neighbors Classifier Imported successfully
2024-05-27 18:28:35,134:INFO:Starting cross validation
2024-05-27 18:28:35,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:35,821:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,830:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,866:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,866:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,878:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,957:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,272:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,320:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,330:INFO:Calculating mean and std
2024-05-27 18:28:36,333:INFO:Creating metrics dataframe
2024-05-27 18:28:36,339:INFO:Uploading results into container
2024-05-27 18:28:36,339:INFO:Uploading model into container now
2024-05-27 18:28:36,341:INFO:_master_model_container: 2
2024-05-27 18:28:36,341:INFO:_display_container: 2
2024-05-27 18:28:36,341:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-27 18:28:36,341:INFO:create_model() successfully completed......................................
2024-05-27 18:28:36,554:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:36,554:INFO:Creating metrics dataframe
2024-05-27 18:28:36,577:INFO:Initializing Naive Bayes
2024-05-27 18:28:36,577:INFO:Total runtime is 0.44303940534591674 minutes
2024-05-27 18:28:36,584:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:36,584:INFO:Initializing create_model()
2024-05-27 18:28:36,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:36,584:INFO:Checking exceptions
2024-05-27 18:28:36,584:INFO:Importing libraries
2024-05-27 18:28:36,584:INFO:Copying training dataset
2024-05-27 18:28:36,604:INFO:Defining folds
2024-05-27 18:28:36,604:INFO:Declaring metric variables
2024-05-27 18:28:36,612:INFO:Importing untrained model
2024-05-27 18:28:36,622:INFO:Naive Bayes Imported successfully
2024-05-27 18:28:36,643:INFO:Starting cross validation
2024-05-27 18:28:36,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:37,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,215:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,227:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,272:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,552:INFO:Calculating mean and std
2024-05-27 18:28:37,552:INFO:Creating metrics dataframe
2024-05-27 18:28:37,560:INFO:Uploading results into container
2024-05-27 18:28:37,562:INFO:Uploading model into container now
2024-05-27 18:28:37,563:INFO:_master_model_container: 3
2024-05-27 18:28:37,563:INFO:_display_container: 2
2024-05-27 18:28:37,563:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-27 18:28:37,563:INFO:create_model() successfully completed......................................
2024-05-27 18:28:37,782:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:37,782:INFO:Creating metrics dataframe
2024-05-27 18:28:37,802:INFO:Initializing Decision Tree Classifier
2024-05-27 18:28:37,802:INFO:Total runtime is 0.46345565319061277 minutes
2024-05-27 18:28:37,815:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:37,815:INFO:Initializing create_model()
2024-05-27 18:28:37,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:37,815:INFO:Checking exceptions
2024-05-27 18:28:37,815:INFO:Importing libraries
2024-05-27 18:28:37,815:INFO:Copying training dataset
2024-05-27 18:28:37,860:INFO:Defining folds
2024-05-27 18:28:37,860:INFO:Declaring metric variables
2024-05-27 18:28:37,882:INFO:Importing untrained model
2024-05-27 18:28:37,907:INFO:Decision Tree Classifier Imported successfully
2024-05-27 18:28:37,956:INFO:Starting cross validation
2024-05-27 18:28:37,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:38,584:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,639:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,639:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,656:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,668:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,716:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,964:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,996:INFO:Calculating mean and std
2024-05-27 18:28:38,996:INFO:Creating metrics dataframe
2024-05-27 18:28:39,008:INFO:Uploading results into container
2024-05-27 18:28:39,008:INFO:Uploading model into container now
2024-05-27 18:28:39,008:INFO:_master_model_container: 4
2024-05-27 18:28:39,008:INFO:_display_container: 2
2024-05-27 18:28:39,008:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-27 18:28:39,008:INFO:create_model() successfully completed......................................
2024-05-27 18:28:39,366:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:39,366:INFO:Creating metrics dataframe
2024-05-27 18:28:39,382:INFO:Initializing SVM - Linear Kernel
2024-05-27 18:28:39,382:INFO:Total runtime is 0.4897916555404663 minutes
2024-05-27 18:28:39,387:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:39,388:INFO:Initializing create_model()
2024-05-27 18:28:39,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:39,389:INFO:Checking exceptions
2024-05-27 18:28:39,389:INFO:Importing libraries
2024-05-27 18:28:39,389:INFO:Copying training dataset
2024-05-27 18:28:39,412:INFO:Defining folds
2024-05-27 18:28:39,412:INFO:Declaring metric variables
2024-05-27 18:28:39,419:INFO:Importing untrained model
2024-05-27 18:28:39,427:INFO:SVM - Linear Kernel Imported successfully
2024-05-27 18:28:39,439:INFO:Starting cross validation
2024-05-27 18:28:39,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:40,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:40,054:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,054:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,054:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,066:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,066:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:40,066:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,078:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,084:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:40,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,228:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,228:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,245:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,259:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,423:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,435:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,435:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,447:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,459:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,459:INFO:Calculating mean and std
2024-05-27 18:28:40,459:INFO:Creating metrics dataframe
2024-05-27 18:28:40,473:INFO:Uploading results into container
2024-05-27 18:28:40,473:INFO:Uploading model into container now
2024-05-27 18:28:40,473:INFO:_master_model_container: 5
2024-05-27 18:28:40,473:INFO:_display_container: 2
2024-05-27 18:28:40,473:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-27 18:28:40,473:INFO:create_model() successfully completed......................................
2024-05-27 18:28:40,765:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:40,765:INFO:Creating metrics dataframe
2024-05-27 18:28:40,808:INFO:Initializing Ridge Classifier
2024-05-27 18:28:40,808:INFO:Total runtime is 0.5135610818862915 minutes
2024-05-27 18:28:40,821:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:40,821:INFO:Initializing create_model()
2024-05-27 18:28:40,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:40,821:INFO:Checking exceptions
2024-05-27 18:28:40,821:INFO:Importing libraries
2024-05-27 18:28:40,821:INFO:Copying training dataset
2024-05-27 18:28:40,898:INFO:Defining folds
2024-05-27 18:28:40,899:INFO:Declaring metric variables
2024-05-27 18:28:40,924:INFO:Importing untrained model
2024-05-27 18:28:40,938:INFO:Ridge Classifier Imported successfully
2024-05-27 18:28:40,957:INFO:Starting cross validation
2024-05-27 18:28:40,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,815:INFO:Calculating mean and std
2024-05-27 18:28:41,819:INFO:Creating metrics dataframe
2024-05-27 18:28:41,824:INFO:Uploading results into container
2024-05-27 18:28:41,825:INFO:Uploading model into container now
2024-05-27 18:28:41,825:INFO:_master_model_container: 6
2024-05-27 18:28:41,827:INFO:_display_container: 2
2024-05-27 18:28:41,828:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-27 18:28:41,828:INFO:create_model() successfully completed......................................
2024-05-27 18:28:42,089:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:42,089:INFO:Creating metrics dataframe
2024-05-27 18:28:42,120:INFO:Initializing Random Forest Classifier
2024-05-27 18:28:42,120:INFO:Total runtime is 0.5354231874148051 minutes
2024-05-27 18:28:42,131:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:42,131:INFO:Initializing create_model()
2024-05-27 18:28:42,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:42,131:INFO:Checking exceptions
2024-05-27 18:28:42,131:INFO:Importing libraries
2024-05-27 18:28:42,131:INFO:Copying training dataset
2024-05-27 18:28:42,153:INFO:Defining folds
2024-05-27 18:28:42,153:INFO:Declaring metric variables
2024-05-27 18:28:42,158:INFO:Importing untrained model
2024-05-27 18:28:42,170:INFO:Random Forest Classifier Imported successfully
2024-05-27 18:28:42,188:INFO:Starting cross validation
2024-05-27 18:28:42,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:43,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,735:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,750:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,792:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,840:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,855:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,855:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,961:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,961:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,971:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,462:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,473:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,480:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,480:INFO:Calculating mean and std
2024-05-27 18:28:44,493:INFO:Creating metrics dataframe
2024-05-27 18:28:44,494:INFO:Uploading results into container
2024-05-27 18:28:44,494:INFO:Uploading model into container now
2024-05-27 18:28:44,494:INFO:_master_model_container: 7
2024-05-27 18:28:44,494:INFO:_display_container: 2
2024-05-27 18:28:44,494:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-27 18:28:44,494:INFO:create_model() successfully completed......................................
2024-05-27 18:28:44,798:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:44,798:INFO:Creating metrics dataframe
2024-05-27 18:28:44,821:INFO:Initializing Quadratic Discriminant Analysis
2024-05-27 18:28:44,821:INFO:Total runtime is 0.5804411331812541 minutes
2024-05-27 18:28:44,836:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:44,840:INFO:Initializing create_model()
2024-05-27 18:28:44,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:44,840:INFO:Checking exceptions
2024-05-27 18:28:44,840:INFO:Importing libraries
2024-05-27 18:28:44,840:INFO:Copying training dataset
2024-05-27 18:28:44,860:INFO:Defining folds
2024-05-27 18:28:44,860:INFO:Declaring metric variables
2024-05-27 18:28:44,869:INFO:Importing untrained model
2024-05-27 18:28:44,876:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-27 18:28:44,886:INFO:Starting cross validation
2024-05-27 18:28:44,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:45,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,351:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,506:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,775:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,789:INFO:Calculating mean and std
2024-05-27 18:28:45,789:INFO:Creating metrics dataframe
2024-05-27 18:28:45,794:INFO:Uploading results into container
2024-05-27 18:28:45,794:INFO:Uploading model into container now
2024-05-27 18:28:45,797:INFO:_master_model_container: 8
2024-05-27 18:28:45,797:INFO:_display_container: 2
2024-05-27 18:28:45,799:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-27 18:28:45,799:INFO:create_model() successfully completed......................................
2024-05-27 18:28:46,090:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:46,090:INFO:Creating metrics dataframe
2024-05-27 18:28:46,112:INFO:Initializing Ada Boost Classifier
2024-05-27 18:28:46,112:INFO:Total runtime is 0.6019523739814758 minutes
2024-05-27 18:28:46,119:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:46,119:INFO:Initializing create_model()
2024-05-27 18:28:46,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:46,119:INFO:Checking exceptions
2024-05-27 18:28:46,119:INFO:Importing libraries
2024-05-27 18:28:46,119:INFO:Copying training dataset
2024-05-27 18:28:46,143:INFO:Defining folds
2024-05-27 18:28:46,143:INFO:Declaring metric variables
2024-05-27 18:28:46,156:INFO:Importing untrained model
2024-05-27 18:28:46,163:INFO:Ada Boost Classifier Imported successfully
2024-05-27 18:28:46,186:INFO:Starting cross validation
2024-05-27 18:28:46,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:46,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,626:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,626:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,737:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,803:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:47,631:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,636:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,637:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,637:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,646:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,646:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,687:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,687:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,720:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,764:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,770:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,779:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,870:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,870:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,881:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,896:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,904:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:48,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,697:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,706:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,724:INFO:Calculating mean and std
2024-05-27 18:28:48,724:INFO:Creating metrics dataframe
2024-05-27 18:28:48,729:INFO:Uploading results into container
2024-05-27 18:28:48,730:INFO:Uploading model into container now
2024-05-27 18:28:48,733:INFO:_master_model_container: 9
2024-05-27 18:28:48,733:INFO:_display_container: 2
2024-05-27 18:28:48,733:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-27 18:28:48,733:INFO:create_model() successfully completed......................................
2024-05-27 18:28:48,981:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:48,981:INFO:Creating metrics dataframe
2024-05-27 18:28:49,003:INFO:Initializing Gradient Boosting Classifier
2024-05-27 18:28:49,007:INFO:Total runtime is 0.6501985788345337 minutes
2024-05-27 18:28:49,015:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:49,015:INFO:Initializing create_model()
2024-05-27 18:28:49,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:49,017:INFO:Checking exceptions
2024-05-27 18:28:49,017:INFO:Importing libraries
2024-05-27 18:28:49,017:INFO:Copying training dataset
2024-05-27 18:28:49,044:INFO:Defining folds
2024-05-27 18:28:49,044:INFO:Declaring metric variables
2024-05-27 18:28:49,054:INFO:Importing untrained model
2024-05-27 18:28:49,073:INFO:Gradient Boosting Classifier Imported successfully
2024-05-27 18:28:49,090:INFO:Starting cross validation
2024-05-27 18:28:49,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:53,133:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,133:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,226:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,576:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,614:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,676:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,225:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,239:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,334:INFO:Calculating mean and std
2024-05-27 18:28:56,337:INFO:Creating metrics dataframe
2024-05-27 18:28:56,342:INFO:Uploading results into container
2024-05-27 18:28:56,347:INFO:Uploading model into container now
2024-05-27 18:28:56,347:INFO:_master_model_container: 10
2024-05-27 18:28:56,347:INFO:_display_container: 2
2024-05-27 18:28:56,347:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-27 18:28:56,347:INFO:create_model() successfully completed......................................
2024-05-27 18:28:56,688:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:56,688:INFO:Creating metrics dataframe
2024-05-27 18:28:56,736:INFO:Initializing Linear Discriminant Analysis
2024-05-27 18:28:56,739:INFO:Total runtime is 0.7790737152099609 minutes
2024-05-27 18:28:56,744:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:56,752:INFO:Initializing create_model()
2024-05-27 18:28:56,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:56,752:INFO:Checking exceptions
2024-05-27 18:28:56,752:INFO:Importing libraries
2024-05-27 18:28:56,752:INFO:Copying training dataset
2024-05-27 18:28:56,794:INFO:Defining folds
2024-05-27 18:28:56,794:INFO:Declaring metric variables
2024-05-27 18:28:56,805:INFO:Importing untrained model
2024-05-27 18:28:56,817:INFO:Linear Discriminant Analysis Imported successfully
2024-05-27 18:28:56,849:INFO:Starting cross validation
2024-05-27 18:28:56,857:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:57,595:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,694:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,739:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,021:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,021:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,033:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,073:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,093:INFO:Calculating mean and std
2024-05-27 18:28:58,093:INFO:Creating metrics dataframe
2024-05-27 18:28:58,099:INFO:Uploading results into container
2024-05-27 18:28:58,100:INFO:Uploading model into container now
2024-05-27 18:28:58,100:INFO:_master_model_container: 11
2024-05-27 18:28:58,100:INFO:_display_container: 2
2024-05-27 18:28:58,100:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-27 18:28:58,100:INFO:create_model() successfully completed......................................
2024-05-27 18:28:58,334:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:58,334:INFO:Creating metrics dataframe
2024-05-27 18:28:58,361:INFO:Initializing Extra Trees Classifier
2024-05-27 18:28:58,361:INFO:Total runtime is 0.8061120748519898 minutes
2024-05-27 18:28:58,370:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:58,373:INFO:Initializing create_model()
2024-05-27 18:28:58,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:58,373:INFO:Checking exceptions
2024-05-27 18:28:58,373:INFO:Importing libraries
2024-05-27 18:28:58,373:INFO:Copying training dataset
2024-05-27 18:28:58,395:INFO:Defining folds
2024-05-27 18:28:58,395:INFO:Declaring metric variables
2024-05-27 18:28:58,405:INFO:Importing untrained model
2024-05-27 18:28:58,410:INFO:Extra Trees Classifier Imported successfully
2024-05-27 18:28:58,432:INFO:Starting cross validation
2024-05-27 18:28:58,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:59,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,713:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,773:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,773:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,881:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,960:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,962:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,482:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,497:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,512:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,512:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,526:INFO:Calculating mean and std
2024-05-27 18:29:00,526:INFO:Creating metrics dataframe
2024-05-27 18:29:00,526:INFO:Uploading results into container
2024-05-27 18:29:00,526:INFO:Uploading model into container now
2024-05-27 18:29:00,526:INFO:_master_model_container: 12
2024-05-27 18:29:00,526:INFO:_display_container: 2
2024-05-27 18:29:00,526:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-27 18:29:00,526:INFO:create_model() successfully completed......................................
2024-05-27 18:29:00,888:INFO:SubProcess create_model() end ==================================
2024-05-27 18:29:00,888:INFO:Creating metrics dataframe
2024-05-27 18:29:00,917:INFO:Initializing Light Gradient Boosting Machine
2024-05-27 18:29:00,917:INFO:Total runtime is 0.8487030227979024 minutes
2024-05-27 18:29:00,927:INFO:SubProcess create_model() called ==================================
2024-05-27 18:29:00,927:INFO:Initializing create_model()
2024-05-27 18:29:00,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:29:00,927:INFO:Checking exceptions
2024-05-27 18:29:00,928:INFO:Importing libraries
2024-05-27 18:29:00,929:INFO:Copying training dataset
2024-05-27 18:29:00,943:INFO:Defining folds
2024-05-27 18:29:00,943:INFO:Declaring metric variables
2024-05-27 18:29:00,956:INFO:Importing untrained model
2024-05-27 18:29:00,967:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-27 18:29:00,986:INFO:Starting cross validation
2024-05-27 18:29:00,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:29:03,003:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,036:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,036:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,352:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,376:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,412:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,428:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,529:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,529:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,529:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,576:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,046:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,118:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,118:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,130:INFO:Calculating mean and std
2024-05-27 18:29:04,142:INFO:Creating metrics dataframe
2024-05-27 18:29:04,144:INFO:Uploading results into container
2024-05-27 18:29:04,144:INFO:Uploading model into container now
2024-05-27 18:29:04,144:INFO:_master_model_container: 13
2024-05-27 18:29:04,144:INFO:_display_container: 2
2024-05-27 18:29:04,144:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-27 18:29:04,144:INFO:create_model() successfully completed......................................
2024-05-27 18:29:04,367:INFO:SubProcess create_model() end ==================================
2024-05-27 18:29:04,367:INFO:Creating metrics dataframe
2024-05-27 18:29:04,400:INFO:Initializing Dummy Classifier
2024-05-27 18:29:04,400:INFO:Total runtime is 0.9067627906799317 minutes
2024-05-27 18:29:04,400:INFO:SubProcess create_model() called ==================================
2024-05-27 18:29:04,413:INFO:Initializing create_model()
2024-05-27 18:29:04,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:29:04,414:INFO:Checking exceptions
2024-05-27 18:29:04,414:INFO:Importing libraries
2024-05-27 18:29:04,414:INFO:Copying training dataset
2024-05-27 18:29:04,437:INFO:Defining folds
2024-05-27 18:29:04,437:INFO:Declaring metric variables
2024-05-27 18:29:04,446:INFO:Importing untrained model
2024-05-27 18:29:04,455:INFO:Dummy Classifier Imported successfully
2024-05-27 18:29:04,472:INFO:Starting cross validation
2024-05-27 18:29:04,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:29:05,008:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,057:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,057:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,061:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,061:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,294:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,311:INFO:Calculating mean and std
2024-05-27 18:29:05,311:INFO:Creating metrics dataframe
2024-05-27 18:29:05,316:INFO:Uploading results into container
2024-05-27 18:29:05,316:INFO:Uploading model into container now
2024-05-27 18:29:05,317:INFO:_master_model_container: 14
2024-05-27 18:29:05,317:INFO:_display_container: 2
2024-05-27 18:29:05,317:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-27 18:29:05,317:INFO:create_model() successfully completed......................................
2024-05-27 18:29:05,532:INFO:SubProcess create_model() end ==================================
2024-05-27 18:29:05,532:INFO:Creating metrics dataframe
2024-05-27 18:29:05,620:INFO:Initializing create_model()
2024-05-27 18:29:05,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:29:05,620:INFO:Checking exceptions
2024-05-27 18:29:05,628:INFO:Importing libraries
2024-05-27 18:29:05,636:INFO:Copying training dataset
2024-05-27 18:29:05,661:INFO:Defining folds
2024-05-27 18:29:05,661:INFO:Declaring metric variables
2024-05-27 18:29:05,661:INFO:Importing untrained model
2024-05-27 18:29:05,661:INFO:Declaring custom model
2024-05-27 18:29:05,661:INFO:Dummy Classifier Imported successfully
2024-05-27 18:29:05,669:INFO:Cross validation set to False
2024-05-27 18:29:05,669:INFO:Fitting Model
2024-05-27 18:29:06,169:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-27 18:29:06,169:INFO:create_model() successfully completed......................................
2024-05-27 18:29:06,493:INFO:_master_model_container: 14
2024-05-27 18:29:06,493:INFO:_display_container: 2
2024-05-27 18:29:06,493:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-27 18:29:06,493:INFO:compare_models() successfully completed......................................
2024-05-31 14:26:02,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-31 14:26:02,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-31 14:26:02,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-31 14:26:02,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-31 14:26:22,281:INFO:PyCaret ClassificationExperiment
2024-05-31 14:26:22,281:INFO:Logging name: clf-default-name
2024-05-31 14:26:22,281:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-31 14:26:22,281:INFO:version 3.3.2
2024-05-31 14:26:22,281:INFO:Initializing setup()
2024-05-31 14:26:22,281:INFO:self.USI: c942
2024-05-31 14:26:22,296:INFO:self._variable_keys: {'idx', '_ml_usecase', 'gpu_n_jobs_param', 'y_test', 'fix_imbalance', 'data', 'target_param', 'fold_shuffle_param', 'X', 'log_plots_param', 'html_param', 'fold_generator', 'USI', 'seed', 'exp_name_log', 'pipeline', 'y', 'X_test', 'is_multiclass', '_available_plots', 'gpu_param', 'logging_param', 'fold_groups_param', 'memory', 'X_train', 'n_jobs_param', 'exp_id', 'y_train'}
2024-05-31 14:26:22,296:INFO:Checking environment
2024-05-31 14:26:22,296:INFO:python_version: 3.11.5
2024-05-31 14:26:22,296:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-31 14:26:22,296:INFO:machine: AMD64
2024-05-31 14:26:22,296:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-31 14:26:22,300:INFO:Memory: svmem(total=8395403264, available=588599296, percent=93.0, used=7806803968, free=588599296)
2024-05-31 14:26:22,300:INFO:Physical Core: 4
2024-05-31 14:26:22,300:INFO:Logical Core: 8
2024-05-31 14:26:22,300:INFO:Checking libraries
2024-05-31 14:26:22,300:INFO:System:
2024-05-31 14:26:22,300:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-31 14:26:22,300:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-31 14:26:22,300:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-31 14:26:22,300:INFO:PyCaret required dependencies:
2024-05-31 14:26:26,107:INFO:                 pip: 23.2.1
2024-05-31 14:26:26,109:INFO:          setuptools: 68.0.0
2024-05-31 14:26:26,109:INFO:             pycaret: 3.3.2
2024-05-31 14:26:26,109:INFO:             IPython: 8.15.0
2024-05-31 14:26:26,109:INFO:          ipywidgets: 8.0.4
2024-05-31 14:26:26,109:INFO:                tqdm: 4.65.0
2024-05-31 14:26:26,109:INFO:               numpy: 1.24.3
2024-05-31 14:26:26,109:INFO:              pandas: 2.0.3
2024-05-31 14:26:26,109:INFO:              jinja2: 3.1.2
2024-05-31 14:26:26,109:INFO:               scipy: 1.11.1
2024-05-31 14:26:26,109:INFO:              joblib: 1.2.0
2024-05-31 14:26:26,109:INFO:             sklearn: 1.4.2
2024-05-31 14:26:26,109:INFO:                pyod: 1.1.3
2024-05-31 14:26:26,109:INFO:            imblearn: 0.12.2
2024-05-31 14:26:26,109:INFO:   category_encoders: 2.6.3
2024-05-31 14:26:26,109:INFO:            lightgbm: 4.3.0
2024-05-31 14:26:26,109:INFO:               numba: 0.57.1
2024-05-31 14:26:26,109:INFO:            requests: 2.31.0
2024-05-31 14:26:26,109:INFO:          matplotlib: 3.7.2
2024-05-31 14:26:26,109:INFO:          scikitplot: 0.3.7
2024-05-31 14:26:26,109:INFO:         yellowbrick: 1.5
2024-05-31 14:26:26,109:INFO:              plotly: 5.22.0
2024-05-31 14:26:26,109:INFO:    plotly-resampler: Not installed
2024-05-31 14:26:26,109:INFO:             kaleido: 0.2.1
2024-05-31 14:26:26,109:INFO:           schemdraw: 0.15
2024-05-31 14:26:26,109:INFO:         statsmodels: 0.14.0
2024-05-31 14:26:26,109:INFO:              sktime: 0.26.0
2024-05-31 14:26:26,109:INFO:               tbats: 1.1.3
2024-05-31 14:26:26,109:INFO:            pmdarima: 2.0.4
2024-05-31 14:26:26,109:INFO:              psutil: 5.9.0
2024-05-31 14:26:26,109:INFO:          markupsafe: 2.1.1
2024-05-31 14:26:26,109:INFO:             pickle5: Not installed
2024-05-31 14:26:26,109:INFO:         cloudpickle: 2.2.1
2024-05-31 14:26:26,109:INFO:         deprecation: 2.1.0
2024-05-31 14:26:26,109:INFO:              xxhash: 2.0.2
2024-05-31 14:26:26,109:INFO:           wurlitzer: Not installed
2024-05-31 14:26:26,109:INFO:PyCaret optional dependencies:
2024-05-31 14:26:26,169:INFO:                shap: Not installed
2024-05-31 14:26:26,169:INFO:           interpret: Not installed
2024-05-31 14:26:26,169:INFO:                umap: Not installed
2024-05-31 14:26:26,169:INFO:     ydata_profiling: Not installed
2024-05-31 14:26:26,169:INFO:  explainerdashboard: Not installed
2024-05-31 14:26:26,169:INFO:             autoviz: Not installed
2024-05-31 14:26:26,169:INFO:           fairlearn: Not installed
2024-05-31 14:26:26,169:INFO:          deepchecks: Not installed
2024-05-31 14:26:26,169:INFO:             xgboost: Not installed
2024-05-31 14:26:26,169:INFO:            catboost: Not installed
2024-05-31 14:26:26,169:INFO:              kmodes: Not installed
2024-05-31 14:26:26,169:INFO:             mlxtend: Not installed
2024-05-31 14:26:26,169:INFO:       statsforecast: Not installed
2024-05-31 14:26:26,169:INFO:        tune_sklearn: Not installed
2024-05-31 14:26:26,169:INFO:                 ray: Not installed
2024-05-31 14:26:26,169:INFO:            hyperopt: Not installed
2024-05-31 14:26:26,169:INFO:              optuna: Not installed
2024-05-31 14:26:26,169:INFO:               skopt: Not installed
2024-05-31 14:26:26,169:INFO:              mlflow: 2.13.0
2024-05-31 14:26:26,169:INFO:              gradio: Not installed
2024-05-31 14:26:26,169:INFO:             fastapi: Not installed
2024-05-31 14:26:26,169:INFO:             uvicorn: Not installed
2024-05-31 14:26:26,169:INFO:              m2cgen: Not installed
2024-05-31 14:26:26,169:INFO:           evidently: Not installed
2024-05-31 14:26:26,169:INFO:               fugue: Not installed
2024-05-31 14:26:26,169:INFO:           streamlit: Not installed
2024-05-31 14:26:26,169:INFO:             prophet: Not installed
2024-05-31 14:26:26,169:INFO:None
2024-05-31 14:26:26,169:INFO:Set up data.
2024-05-31 14:26:26,186:INFO:Set up folding strategy.
2024-05-31 14:26:26,186:INFO:Set up train/test split.
2024-05-31 14:26:26,219:INFO:Set up index.
2024-05-31 14:26:26,219:INFO:Assigning column types.
2024-05-31 14:26:26,232:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-31 14:26:26,327:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,515:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,594:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-31 14:26:26,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,860:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,941:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-31 14:26:27,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:27,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:27,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:27,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:27,270:INFO:Preparing preprocessing pipeline...
2024-05-31 14:26:27,270:INFO:Set up label encoding.
2024-05-31 14:26:27,270:INFO:Set up simple imputation.
2024-05-31 14:26:27,286:INFO:Set up encoding of ordinal features.
2024-05-31 14:26:27,288:INFO:Set up encoding of categorical features.
2024-05-31 14:26:27,288:INFO:Set up imbalanced handling.
2024-05-31 14:26:27,651:INFO:Finished creating preprocessing pipeline.
2024-05-31 14:26:27,696:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['moyenne_conso_agri_hab',
                                             'moyenne_conso_indus_hab',
                                             'moyenne_conso_tertiaire_hab',
                                             'moyenne_conso_resid...
                                    transformer=TargetEncoder(cols=['CSP_maire'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-05-31 14:26:27,696:INFO:Creating final display dataframe.
2024-05-31 14:26:28,158:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target  beneficiaire_trans_eco
2                   Target type                  Binary
3                Target mapping              0: 0, 1: 1
4           Original data shape              (1189, 32)
5        Transformed data shape              (1739, 41)
6   Transformed train set shape              (1382, 41)
7    Transformed test set shape               (357, 41)
8              Numeric features                      22
9          Categorical features                       6
10                   Preprocess                    True
11              Imputation type                  simple
12           Numeric imputation                    mean
13       Categorical imputation                    mode
14     Maximum one-hot encoding                      25
15              Encoding method                    None
16                Fix imbalance                    True
17         Fix imbalance method                   smote
18               Fold Generator         StratifiedKFold
19                  Fold Number                      10
20                     CPU Jobs                      -1
21                      Use GPU                   False
22               Log Experiment                   False
23              Experiment Name        clf-default-name
24                          USI                    c942
2024-05-31 14:26:28,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:28,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:28,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:28,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:28,495:INFO:setup() successfully completed in 6.21s...............
2024-05-31 14:26:28,502:INFO:Initializing compare_models()
2024-05-31 14:26:28,502:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-31 14:26:28,502:INFO:Checking exceptions
2024-05-31 14:26:28,522:INFO:Preparing display monitor
2024-05-31 14:26:28,598:INFO:Initializing Logistic Regression
2024-05-31 14:26:28,598:INFO:Total runtime is 0.0 minutes
2024-05-31 14:26:28,611:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:28,612:INFO:Initializing create_model()
2024-05-31 14:26:28,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:28,612:INFO:Checking exceptions
2024-05-31 14:26:28,612:INFO:Importing libraries
2024-05-31 14:26:28,612:INFO:Copying training dataset
2024-05-31 14:26:28,644:INFO:Defining folds
2024-05-31 14:26:28,644:INFO:Declaring metric variables
2024-05-31 14:26:28,663:INFO:Importing untrained model
2024-05-31 14:26:28,675:INFO:Logistic Regression Imported successfully
2024-05-31 14:26:28,691:INFO:Starting cross validation
2024-05-31 14:26:28,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:44,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,474:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,479:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,496:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,517:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,601:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,621:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,629:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,629:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,648:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,656:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,668:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,694:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,711:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,727:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,759:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,774:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,822:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,891:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,900:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:45,755:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:45,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,929:INFO:Calculating mean and std
2024-05-31 14:26:45,931:INFO:Creating metrics dataframe
2024-05-31 14:26:45,934:INFO:Uploading results into container
2024-05-31 14:26:45,934:INFO:Uploading model into container now
2024-05-31 14:26:45,934:INFO:_master_model_container: 1
2024-05-31 14:26:45,934:INFO:_display_container: 2
2024-05-31 14:26:45,934:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-31 14:26:45,934:INFO:create_model() successfully completed......................................
2024-05-31 14:26:46,114:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:46,114:INFO:Creating metrics dataframe
2024-05-31 14:26:46,135:INFO:Initializing K Neighbors Classifier
2024-05-31 14:26:46,135:INFO:Total runtime is 0.29228389263153076 minutes
2024-05-31 14:26:46,135:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:46,135:INFO:Initializing create_model()
2024-05-31 14:26:46,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:46,135:INFO:Checking exceptions
2024-05-31 14:26:46,135:INFO:Importing libraries
2024-05-31 14:26:46,135:INFO:Copying training dataset
2024-05-31 14:26:46,182:INFO:Defining folds
2024-05-31 14:26:46,182:INFO:Declaring metric variables
2024-05-31 14:26:46,182:INFO:Importing untrained model
2024-05-31 14:26:46,198:INFO:K Neighbors Classifier Imported successfully
2024-05-31 14:26:46,214:INFO:Starting cross validation
2024-05-31 14:26:46,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:47,043:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,067:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,067:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,102:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,120:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,132:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,132:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,480:INFO:Calculating mean and std
2024-05-31 14:26:47,480:INFO:Creating metrics dataframe
2024-05-31 14:26:47,492:INFO:Uploading results into container
2024-05-31 14:26:47,492:INFO:Uploading model into container now
2024-05-31 14:26:47,492:INFO:_master_model_container: 2
2024-05-31 14:26:47,492:INFO:_display_container: 2
2024-05-31 14:26:47,492:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-31 14:26:47,492:INFO:create_model() successfully completed......................................
2024-05-31 14:26:47,650:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:47,650:INFO:Creating metrics dataframe
2024-05-31 14:26:47,683:INFO:Initializing Naive Bayes
2024-05-31 14:26:47,683:INFO:Total runtime is 0.31809472242991127 minutes
2024-05-31 14:26:47,690:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:47,690:INFO:Initializing create_model()
2024-05-31 14:26:47,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:47,698:INFO:Checking exceptions
2024-05-31 14:26:47,698:INFO:Importing libraries
2024-05-31 14:26:47,698:INFO:Copying training dataset
2024-05-31 14:26:47,729:INFO:Defining folds
2024-05-31 14:26:47,729:INFO:Declaring metric variables
2024-05-31 14:26:47,738:INFO:Importing untrained model
2024-05-31 14:26:47,752:INFO:Naive Bayes Imported successfully
2024-05-31 14:26:47,764:INFO:Starting cross validation
2024-05-31 14:26:47,778:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:48,330:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,334:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,334:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,362:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,362:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,362:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,362:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,378:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,415:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,425:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,445:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,445:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,472:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,475:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,900:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,934:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,934:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,963:INFO:Calculating mean and std
2024-05-31 14:26:48,963:INFO:Creating metrics dataframe
2024-05-31 14:26:48,963:INFO:Uploading results into container
2024-05-31 14:26:48,963:INFO:Uploading model into container now
2024-05-31 14:26:48,979:INFO:_master_model_container: 3
2024-05-31 14:26:48,979:INFO:_display_container: 2
2024-05-31 14:26:48,979:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-31 14:26:48,979:INFO:create_model() successfully completed......................................
2024-05-31 14:26:49,143:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:49,143:INFO:Creating metrics dataframe
2024-05-31 14:26:49,169:INFO:Initializing Decision Tree Classifier
2024-05-31 14:26:49,169:INFO:Total runtime is 0.3428561766942342 minutes
2024-05-31 14:26:49,169:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:49,169:INFO:Initializing create_model()
2024-05-31 14:26:49,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:49,169:INFO:Checking exceptions
2024-05-31 14:26:49,169:INFO:Importing libraries
2024-05-31 14:26:49,169:INFO:Copying training dataset
2024-05-31 14:26:49,200:INFO:Defining folds
2024-05-31 14:26:49,200:INFO:Declaring metric variables
2024-05-31 14:26:49,200:INFO:Importing untrained model
2024-05-31 14:26:49,216:INFO:Decision Tree Classifier Imported successfully
2024-05-31 14:26:49,235:INFO:Starting cross validation
2024-05-31 14:26:49,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:49,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,006:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,036:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,038:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,038:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,069:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,527:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,572:INFO:Calculating mean and std
2024-05-31 14:26:50,572:INFO:Creating metrics dataframe
2024-05-31 14:26:50,587:INFO:Uploading results into container
2024-05-31 14:26:50,587:INFO:Uploading model into container now
2024-05-31 14:26:50,587:INFO:_master_model_container: 4
2024-05-31 14:26:50,587:INFO:_display_container: 2
2024-05-31 14:26:50,587:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 14:26:50,587:INFO:create_model() successfully completed......................................
2024-05-31 14:26:50,752:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:50,753:INFO:Creating metrics dataframe
2024-05-31 14:26:50,761:INFO:Initializing SVM - Linear Kernel
2024-05-31 14:26:50,761:INFO:Total runtime is 0.36938510735829666 minutes
2024-05-31 14:26:50,776:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:50,776:INFO:Initializing create_model()
2024-05-31 14:26:50,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:50,776:INFO:Checking exceptions
2024-05-31 14:26:50,776:INFO:Importing libraries
2024-05-31 14:26:50,776:INFO:Copying training dataset
2024-05-31 14:26:50,808:INFO:Defining folds
2024-05-31 14:26:50,808:INFO:Declaring metric variables
2024-05-31 14:26:50,808:INFO:Importing untrained model
2024-05-31 14:26:50,823:INFO:SVM - Linear Kernel Imported successfully
2024-05-31 14:26:50,839:INFO:Starting cross validation
2024-05-31 14:26:50,855:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:51,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,603:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,603:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,612:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,612:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:26:51,612:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,631:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,663:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,219:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,219:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,240:INFO:Calculating mean and std
2024-05-31 14:26:52,240:INFO:Creating metrics dataframe
2024-05-31 14:26:52,251:INFO:Uploading results into container
2024-05-31 14:26:52,251:INFO:Uploading model into container now
2024-05-31 14:26:52,251:INFO:_master_model_container: 5
2024-05-31 14:26:52,251:INFO:_display_container: 2
2024-05-31 14:26:52,251:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-31 14:26:52,251:INFO:create_model() successfully completed......................................
2024-05-31 14:26:52,408:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:52,408:INFO:Creating metrics dataframe
2024-05-31 14:26:52,423:INFO:Initializing Ridge Classifier
2024-05-31 14:26:52,423:INFO:Total runtime is 0.397092056274414 minutes
2024-05-31 14:26:52,423:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:52,423:INFO:Initializing create_model()
2024-05-31 14:26:52,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:52,423:INFO:Checking exceptions
2024-05-31 14:26:52,423:INFO:Importing libraries
2024-05-31 14:26:52,439:INFO:Copying training dataset
2024-05-31 14:26:52,455:INFO:Defining folds
2024-05-31 14:26:52,455:INFO:Declaring metric variables
2024-05-31 14:26:52,471:INFO:Importing untrained model
2024-05-31 14:26:52,471:INFO:Ridge Classifier Imported successfully
2024-05-31 14:26:52,486:INFO:Starting cross validation
2024-05-31 14:26:52,502:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:55,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,000:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,000:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,503:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,503:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,285:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,312:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,352:INFO:Calculating mean and std
2024-05-31 14:26:58,355:INFO:Creating metrics dataframe
2024-05-31 14:26:58,359:INFO:Uploading results into container
2024-05-31 14:26:58,361:INFO:Uploading model into container now
2024-05-31 14:26:58,361:INFO:_master_model_container: 6
2024-05-31 14:26:58,361:INFO:_display_container: 2
2024-05-31 14:26:58,361:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-31 14:26:58,361:INFO:create_model() successfully completed......................................
2024-05-31 14:26:58,522:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:58,522:INFO:Creating metrics dataframe
2024-05-31 14:26:58,550:INFO:Initializing Random Forest Classifier
2024-05-31 14:26:58,550:INFO:Total runtime is 0.49920922120412187 minutes
2024-05-31 14:26:58,554:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:58,554:INFO:Initializing create_model()
2024-05-31 14:26:58,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:58,554:INFO:Checking exceptions
2024-05-31 14:26:58,554:INFO:Importing libraries
2024-05-31 14:26:58,554:INFO:Copying training dataset
2024-05-31 14:26:58,585:INFO:Defining folds
2024-05-31 14:26:58,585:INFO:Declaring metric variables
2024-05-31 14:26:58,607:INFO:Importing untrained model
2024-05-31 14:26:58,618:INFO:Random Forest Classifier Imported successfully
2024-05-31 14:26:58,633:INFO:Starting cross validation
2024-05-31 14:26:58,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:01,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,368:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,536:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,541:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,546:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,549:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,554:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,554:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,519:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,555:INFO:Calculating mean and std
2024-05-31 14:27:02,555:INFO:Creating metrics dataframe
2024-05-31 14:27:02,562:INFO:Uploading results into container
2024-05-31 14:27:02,562:INFO:Uploading model into container now
2024-05-31 14:27:02,562:INFO:_master_model_container: 7
2024-05-31 14:27:02,562:INFO:_display_container: 2
2024-05-31 14:27:02,562:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:27:02,562:INFO:create_model() successfully completed......................................
2024-05-31 14:27:02,728:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:02,728:INFO:Creating metrics dataframe
2024-05-31 14:27:02,738:INFO:Initializing Quadratic Discriminant Analysis
2024-05-31 14:27:02,738:INFO:Total runtime is 0.5690000573794046 minutes
2024-05-31 14:27:02,757:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:02,757:INFO:Initializing create_model()
2024-05-31 14:27:02,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:02,757:INFO:Checking exceptions
2024-05-31 14:27:02,757:INFO:Importing libraries
2024-05-31 14:27:02,757:INFO:Copying training dataset
2024-05-31 14:27:02,785:INFO:Defining folds
2024-05-31 14:27:02,785:INFO:Declaring metric variables
2024-05-31 14:27:02,785:INFO:Importing untrained model
2024-05-31 14:27:02,801:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-31 14:27:02,817:INFO:Starting cross validation
2024-05-31 14:27:02,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:03,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,472:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,480:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,496:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:03,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,695:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,695:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:03,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,746:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,755:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,981:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:04,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:04,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:04,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,115:INFO:Calculating mean and std
2024-05-31 14:27:04,115:INFO:Creating metrics dataframe
2024-05-31 14:27:04,115:INFO:Uploading results into container
2024-05-31 14:27:04,115:INFO:Uploading model into container now
2024-05-31 14:27:04,115:INFO:_master_model_container: 8
2024-05-31 14:27:04,115:INFO:_display_container: 2
2024-05-31 14:27:04,115:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-31 14:27:04,115:INFO:create_model() successfully completed......................................
2024-05-31 14:27:04,286:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:04,286:INFO:Creating metrics dataframe
2024-05-31 14:27:04,303:INFO:Initializing Ada Boost Classifier
2024-05-31 14:27:04,303:INFO:Total runtime is 0.5950902620951334 minutes
2024-05-31 14:27:04,303:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:04,303:INFO:Initializing create_model()
2024-05-31 14:27:04,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:04,303:INFO:Checking exceptions
2024-05-31 14:27:04,303:INFO:Importing libraries
2024-05-31 14:27:04,303:INFO:Copying training dataset
2024-05-31 14:27:04,350:INFO:Defining folds
2024-05-31 14:27:04,350:INFO:Declaring metric variables
2024-05-31 14:27:04,360:INFO:Importing untrained model
2024-05-31 14:27:04,366:INFO:Ada Boost Classifier Imported successfully
2024-05-31 14:27:04,382:INFO:Starting cross validation
2024-05-31 14:27:04,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:04,904:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:04,966:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:04,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:04,998:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:05,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:05,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:05,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:05,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:06,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,095:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,103:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,103:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,120:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,202:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,202:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,218:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,248:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,266:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,268:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,274:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,277:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,314:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,314:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:06,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:07,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,462:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,538:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,554:INFO:Calculating mean and std
2024-05-31 14:27:07,562:INFO:Creating metrics dataframe
2024-05-31 14:27:07,570:INFO:Uploading results into container
2024-05-31 14:27:07,570:INFO:Uploading model into container now
2024-05-31 14:27:07,570:INFO:_master_model_container: 9
2024-05-31 14:27:07,570:INFO:_display_container: 2
2024-05-31 14:27:07,570:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 14:27:07,570:INFO:create_model() successfully completed......................................
2024-05-31 14:27:07,762:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:07,762:INFO:Creating metrics dataframe
2024-05-31 14:27:07,790:INFO:Initializing Gradient Boosting Classifier
2024-05-31 14:27:07,790:INFO:Total runtime is 0.6532055179278055 minutes
2024-05-31 14:27:07,806:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:07,806:INFO:Initializing create_model()
2024-05-31 14:27:07,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:07,806:INFO:Checking exceptions
2024-05-31 14:27:07,806:INFO:Importing libraries
2024-05-31 14:27:07,806:INFO:Copying training dataset
2024-05-31 14:27:07,837:INFO:Defining folds
2024-05-31 14:27:07,837:INFO:Declaring metric variables
2024-05-31 14:27:07,853:INFO:Importing untrained model
2024-05-31 14:27:07,856:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 14:27:07,869:INFO:Starting cross validation
2024-05-31 14:27:07,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:12,089:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,143:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,267:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,316:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,332:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,345:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,720:INFO:Calculating mean and std
2024-05-31 14:27:15,720:INFO:Creating metrics dataframe
2024-05-31 14:27:15,725:INFO:Uploading results into container
2024-05-31 14:27:15,725:INFO:Uploading model into container now
2024-05-31 14:27:15,728:INFO:_master_model_container: 10
2024-05-31 14:27:15,728:INFO:_display_container: 2
2024-05-31 14:27:15,730:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:27:15,730:INFO:create_model() successfully completed......................................
2024-05-31 14:27:15,900:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:15,900:INFO:Creating metrics dataframe
2024-05-31 14:27:15,919:INFO:Initializing Linear Discriminant Analysis
2024-05-31 14:27:15,919:INFO:Total runtime is 0.7886926253636677 minutes
2024-05-31 14:27:15,935:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:15,935:INFO:Initializing create_model()
2024-05-31 14:27:15,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:15,935:INFO:Checking exceptions
2024-05-31 14:27:15,935:INFO:Importing libraries
2024-05-31 14:27:15,935:INFO:Copying training dataset
2024-05-31 14:27:15,959:INFO:Defining folds
2024-05-31 14:27:15,959:INFO:Declaring metric variables
2024-05-31 14:27:15,971:INFO:Importing untrained model
2024-05-31 14:27:15,976:INFO:Linear Discriminant Analysis Imported successfully
2024-05-31 14:27:15,989:INFO:Starting cross validation
2024-05-31 14:27:15,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:16,743:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,759:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,759:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,775:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,775:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,859:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,859:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,859:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,871:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,871:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,885:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,885:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,893:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,893:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,933:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,213:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,250:INFO:Calculating mean and std
2024-05-31 14:27:17,250:INFO:Creating metrics dataframe
2024-05-31 14:27:17,250:INFO:Uploading results into container
2024-05-31 14:27:17,250:INFO:Uploading model into container now
2024-05-31 14:27:17,250:INFO:_master_model_container: 11
2024-05-31 14:27:17,250:INFO:_display_container: 2
2024-05-31 14:27:17,250:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-31 14:27:17,250:INFO:create_model() successfully completed......................................
2024-05-31 14:27:17,407:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:17,407:INFO:Creating metrics dataframe
2024-05-31 14:27:17,445:INFO:Initializing Extra Trees Classifier
2024-05-31 14:27:17,445:INFO:Total runtime is 0.8141204237937926 minutes
2024-05-31 14:27:17,454:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:17,455:INFO:Initializing create_model()
2024-05-31 14:27:17,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:17,455:INFO:Checking exceptions
2024-05-31 14:27:17,455:INFO:Importing libraries
2024-05-31 14:27:17,455:INFO:Copying training dataset
2024-05-31 14:27:17,472:INFO:Defining folds
2024-05-31 14:27:17,472:INFO:Declaring metric variables
2024-05-31 14:27:17,486:INFO:Importing untrained model
2024-05-31 14:27:17,486:INFO:Extra Trees Classifier Imported successfully
2024-05-31 14:27:17,502:INFO:Starting cross validation
2024-05-31 14:27:17,502:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:19,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,511:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,521:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,527:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,527:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,543:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,599:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,606:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,716:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,395:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,397:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,411:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,458:INFO:Calculating mean and std
2024-05-31 14:27:20,474:INFO:Creating metrics dataframe
2024-05-31 14:27:20,474:INFO:Uploading results into container
2024-05-31 14:27:20,474:INFO:Uploading model into container now
2024-05-31 14:27:20,474:INFO:_master_model_container: 12
2024-05-31 14:27:20,474:INFO:_display_container: 2
2024-05-31 14:27:20,474:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-31 14:27:20,474:INFO:create_model() successfully completed......................................
2024-05-31 14:27:20,678:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:20,678:INFO:Creating metrics dataframe
2024-05-31 14:27:20,709:INFO:Initializing Light Gradient Boosting Machine
2024-05-31 14:27:20,709:INFO:Total runtime is 0.8685209910074868 minutes
2024-05-31 14:27:20,725:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:20,725:INFO:Initializing create_model()
2024-05-31 14:27:20,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:20,725:INFO:Checking exceptions
2024-05-31 14:27:20,725:INFO:Importing libraries
2024-05-31 14:27:20,725:INFO:Copying training dataset
2024-05-31 14:27:20,763:INFO:Defining folds
2024-05-31 14:27:20,766:INFO:Declaring metric variables
2024-05-31 14:27:20,774:INFO:Importing untrained model
2024-05-31 14:27:20,788:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-31 14:27:20,803:INFO:Starting cross validation
2024-05-31 14:27:20,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:24,452:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,459:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,474:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,002:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,018:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,061:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,084:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,114:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,219:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,350:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,361:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,369:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,033:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,033:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,143:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,171:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,185:INFO:Calculating mean and std
2024-05-31 14:27:26,191:INFO:Creating metrics dataframe
2024-05-31 14:27:26,191:INFO:Uploading results into container
2024-05-31 14:27:26,191:INFO:Uploading model into container now
2024-05-31 14:27:26,201:INFO:_master_model_container: 13
2024-05-31 14:27:26,201:INFO:_display_container: 2
2024-05-31 14:27:26,201:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-31 14:27:26,201:INFO:create_model() successfully completed......................................
2024-05-31 14:27:26,364:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:26,364:INFO:Creating metrics dataframe
2024-05-31 14:27:26,380:INFO:Initializing Dummy Classifier
2024-05-31 14:27:26,380:INFO:Total runtime is 0.9630411585172016 minutes
2024-05-31 14:27:26,396:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:26,396:INFO:Initializing create_model()
2024-05-31 14:27:26,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:26,396:INFO:Checking exceptions
2024-05-31 14:27:26,396:INFO:Importing libraries
2024-05-31 14:27:26,396:INFO:Copying training dataset
2024-05-31 14:27:26,427:INFO:Defining folds
2024-05-31 14:27:26,427:INFO:Declaring metric variables
2024-05-31 14:27:26,427:INFO:Importing untrained model
2024-05-31 14:27:26,443:INFO:Dummy Classifier Imported successfully
2024-05-31 14:27:26,459:INFO:Starting cross validation
2024-05-31 14:27:26,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:27,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,137:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,781:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,783:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,783:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,797:INFO:Calculating mean and std
2024-05-31 14:27:27,797:INFO:Creating metrics dataframe
2024-05-31 14:27:27,797:INFO:Uploading results into container
2024-05-31 14:27:27,797:INFO:Uploading model into container now
2024-05-31 14:27:27,814:INFO:_master_model_container: 14
2024-05-31 14:27:27,814:INFO:_display_container: 2
2024-05-31 14:27:27,814:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 14:27:27,814:INFO:create_model() successfully completed......................................
2024-05-31 14:27:27,969:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:27,969:INFO:Creating metrics dataframe
2024-05-31 14:27:28,017:INFO:Initializing create_model()
2024-05-31 14:27:28,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:28,017:INFO:Checking exceptions
2024-05-31 14:27:28,017:INFO:Importing libraries
2024-05-31 14:27:28,017:INFO:Copying training dataset
2024-05-31 14:27:28,048:INFO:Defining folds
2024-05-31 14:27:28,048:INFO:Declaring metric variables
2024-05-31 14:27:28,048:INFO:Importing untrained model
2024-05-31 14:27:28,048:INFO:Declaring custom model
2024-05-31 14:27:28,048:INFO:Dummy Classifier Imported successfully
2024-05-31 14:27:28,048:INFO:Cross validation set to False
2024-05-31 14:27:28,048:INFO:Fitting Model
2024-05-31 14:27:28,885:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 14:27:28,885:INFO:create_model() successfully completed......................................
2024-05-31 14:27:29,167:INFO:_master_model_container: 14
2024-05-31 14:27:29,167:INFO:_display_container: 2
2024-05-31 14:27:29,167:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 14:27:29,167:INFO:compare_models() successfully completed......................................
2024-05-31 14:34:40,302:INFO:Initializing create_model()
2024-05-31 14:34:40,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:34:40,302:INFO:Checking exceptions
2024-05-31 14:34:40,349:INFO:Importing libraries
2024-05-31 14:34:40,349:INFO:Copying training dataset
2024-05-31 14:34:40,368:INFO:Defining folds
2024-05-31 14:34:40,376:INFO:Declaring metric variables
2024-05-31 14:34:40,386:INFO:Importing untrained model
2024-05-31 14:34:40,396:INFO:Random Forest Classifier Imported successfully
2024-05-31 14:34:40,413:INFO:Starting cross validation
2024-05-31 14:34:40,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:34:58,254:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,276:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,285:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,330:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,427:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,427:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,585:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,585:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,695:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,722:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,779:INFO:Calculating mean and std
2024-05-31 14:34:59,779:INFO:Creating metrics dataframe
2024-05-31 14:34:59,794:INFO:Finalizing model
2024-05-31 14:35:00,525:INFO:Uploading results into container
2024-05-31 14:35:00,525:INFO:Uploading model into container now
2024-05-31 14:35:00,556:INFO:_master_model_container: 15
2024-05-31 14:35:00,556:INFO:_display_container: 3
2024-05-31 14:35:00,556:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:35:00,556:INFO:create_model() successfully completed......................................
2024-05-31 14:40:54,166:INFO:Initializing create_model()
2024-05-31 14:40:54,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:40:54,166:INFO:Checking exceptions
2024-05-31 14:40:54,319:INFO:Importing libraries
2024-05-31 14:40:54,319:INFO:Copying training dataset
2024-05-31 14:40:54,365:INFO:Defining folds
2024-05-31 14:40:54,365:INFO:Declaring metric variables
2024-05-31 14:40:54,373:INFO:Importing untrained model
2024-05-31 14:40:54,384:INFO:Decision Tree Classifier Imported successfully
2024-05-31 14:40:54,404:INFO:Starting cross validation
2024-05-31 14:40:54,426:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:41:11,711:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,728:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,728:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,728:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,772:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,773:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,534:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,542:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,555:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,555:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,587:INFO:Calculating mean and std
2024-05-31 14:41:12,587:INFO:Creating metrics dataframe
2024-05-31 14:41:12,628:INFO:Finalizing model
2024-05-31 14:41:13,447:INFO:Uploading results into container
2024-05-31 14:41:13,450:INFO:Uploading model into container now
2024-05-31 14:41:13,515:INFO:_master_model_container: 16
2024-05-31 14:41:13,515:INFO:_display_container: 4
2024-05-31 14:41:13,527:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 14:41:13,527:INFO:create_model() successfully completed......................................
2024-05-31 14:43:05,396:INFO:Initializing create_model()
2024-05-31 14:43:05,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:43:05,398:INFO:Checking exceptions
2024-05-31 14:43:05,446:INFO:Importing libraries
2024-05-31 14:43:05,447:INFO:Copying training dataset
2024-05-31 14:43:05,482:INFO:Defining folds
2024-05-31 14:43:05,482:INFO:Declaring metric variables
2024-05-31 14:43:05,490:INFO:Importing untrained model
2024-05-31 14:43:05,503:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 14:43:05,525:INFO:Starting cross validation
2024-05-31 14:43:05,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:43:08,735:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,752:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,756:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,772:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,788:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,808:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,973:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,102:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,116:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,116:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,152:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,161:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,514:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,514:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,529:INFO:Calculating mean and std
2024-05-31 14:43:11,529:INFO:Creating metrics dataframe
2024-05-31 14:43:11,543:INFO:Finalizing model
2024-05-31 14:43:14,105:INFO:Uploading results into container
2024-05-31 14:43:14,105:INFO:Uploading model into container now
2024-05-31 14:43:14,123:INFO:_master_model_container: 17
2024-05-31 14:43:14,123:INFO:_display_container: 5
2024-05-31 14:43:14,123:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:43:14,123:INFO:create_model() successfully completed......................................
2024-05-31 14:43:28,114:INFO:Initializing create_model()
2024-05-31 14:43:28,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:43:28,114:INFO:Checking exceptions
2024-05-31 14:43:28,165:INFO:Importing libraries
2024-05-31 14:43:28,167:INFO:Copying training dataset
2024-05-31 14:43:28,199:INFO:Defining folds
2024-05-31 14:43:28,199:INFO:Declaring metric variables
2024-05-31 14:43:28,211:INFO:Importing untrained model
2024-05-31 14:43:28,215:INFO:Ada Boost Classifier Imported successfully
2024-05-31 14:43:28,240:INFO:Starting cross validation
2024-05-31 14:43:28,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:43:28,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,888:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,891:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,891:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:29,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,664:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,707:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,755:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,770:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,770:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,793:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,794:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:29,950:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:30,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,630:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,635:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,703:INFO:Calculating mean and std
2024-05-31 14:43:30,704:INFO:Creating metrics dataframe
2024-05-31 14:43:30,714:INFO:Finalizing model
2024-05-31 14:43:31,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:32,057:INFO:Uploading results into container
2024-05-31 14:43:32,057:INFO:Uploading model into container now
2024-05-31 14:43:32,093:INFO:_master_model_container: 18
2024-05-31 14:43:32,093:INFO:_display_container: 6
2024-05-31 14:43:32,094:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 14:43:32,094:INFO:create_model() successfully completed......................................
2024-05-31 14:46:02,398:INFO:Initializing tune_model()
2024-05-31 14:46:02,398:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-31 14:46:02,398:INFO:Checking exceptions
2024-05-31 14:46:02,488:INFO:Copying training dataset
2024-05-31 14:46:02,499:INFO:Checking base model
2024-05-31 14:46:02,499:INFO:Base model : Random Forest Classifier
2024-05-31 14:46:02,516:INFO:Declaring metric variables
2024-05-31 14:46:02,523:INFO:Defining Hyperparameters
2024-05-31 14:46:02,717:INFO:Tuning with n_jobs=-1
2024-05-31 14:46:02,717:INFO:Initializing RandomizedSearchCV
2024-05-31 14:46:58,209:INFO:best_params: {'actual_estimator__n_estimators': 10, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 2, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': False}
2024-05-31 14:46:58,209:INFO:Hyperparameter search completed
2024-05-31 14:46:58,209:INFO:SubProcess create_model() called ==================================
2024-05-31 14:46:58,209:INFO:Initializing create_model()
2024-05-31 14:46:58,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6B4916D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 10, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.1, 'max_features': 'log2', 'max_depth': 2, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': False})
2024-05-31 14:46:58,209:INFO:Checking exceptions
2024-05-31 14:46:58,209:INFO:Importing libraries
2024-05-31 14:46:58,209:INFO:Copying training dataset
2024-05-31 14:46:58,243:INFO:Defining folds
2024-05-31 14:46:58,244:INFO:Declaring metric variables
2024-05-31 14:46:58,244:INFO:Importing untrained model
2024-05-31 14:46:58,244:INFO:Declaring custom model
2024-05-31 14:46:58,265:INFO:Random Forest Classifier Imported successfully
2024-05-31 14:46:58,270:INFO:Starting cross validation
2024-05-31 14:46:58,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:46:59,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,511:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,518:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,534:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,544:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,571:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,571:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,713:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,718:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,722:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,087:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:47:00,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:47:00,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,126:INFO:Calculating mean and std
2024-05-31 14:47:00,126:INFO:Creating metrics dataframe
2024-05-31 14:47:00,150:INFO:Finalizing model
2024-05-31 14:47:00,538:INFO:Uploading results into container
2024-05-31 14:47:00,538:INFO:Uploading model into container now
2024-05-31 14:47:00,538:INFO:_master_model_container: 19
2024-05-31 14:47:00,545:INFO:_display_container: 7
2024-05-31 14:47:00,545:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:47:00,549:INFO:create_model() successfully completed......................................
2024-05-31 14:47:00,768:INFO:SubProcess create_model() end ==================================
2024-05-31 14:47:00,768:INFO:choose_better activated
2024-05-31 14:47:00,776:INFO:SubProcess create_model() called ==================================
2024-05-31 14:47:00,776:INFO:Initializing create_model()
2024-05-31 14:47:00,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:47:00,776:INFO:Checking exceptions
2024-05-31 14:47:00,786:INFO:Importing libraries
2024-05-31 14:47:00,786:INFO:Copying training dataset
2024-05-31 14:47:00,817:INFO:Defining folds
2024-05-31 14:47:00,817:INFO:Declaring metric variables
2024-05-31 14:47:00,817:INFO:Importing untrained model
2024-05-31 14:47:00,817:INFO:Declaring custom model
2024-05-31 14:47:00,817:INFO:Random Forest Classifier Imported successfully
2024-05-31 14:47:00,817:INFO:Starting cross validation
2024-05-31 14:47:00,825:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:47:03,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,449:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,451:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,527:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,541:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,542:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,550:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,550:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,550:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,612:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,390:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,409:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,409:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,421:INFO:Calculating mean and std
2024-05-31 14:47:04,421:INFO:Creating metrics dataframe
2024-05-31 14:47:04,437:INFO:Finalizing model
2024-05-31 14:47:05,372:INFO:Uploading results into container
2024-05-31 14:47:05,372:INFO:Uploading model into container now
2024-05-31 14:47:05,372:INFO:_master_model_container: 20
2024-05-31 14:47:05,372:INFO:_display_container: 8
2024-05-31 14:47:05,372:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:47:05,372:INFO:create_model() successfully completed......................................
2024-05-31 14:47:05,576:INFO:SubProcess create_model() end ==================================
2024-05-31 14:47:05,576:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8126
2024-05-31 14:47:05,576:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8305
2024-05-31 14:47:05,576:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-05-31 14:47:05,592:INFO:choose_better completed
2024-05-31 14:47:05,649:INFO:_master_model_container: 20
2024-05-31 14:47:05,649:INFO:_display_container: 7
2024-05-31 14:47:05,649:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:47:05,655:INFO:tune_model() successfully completed......................................
2024-05-31 14:50:44,060:INFO:Initializing tune_model()
2024-05-31 14:50:44,060:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-31 14:50:44,060:INFO:Checking exceptions
2024-05-31 14:50:44,118:INFO:Copying training dataset
2024-05-31 14:50:44,131:INFO:Checking base model
2024-05-31 14:50:44,133:INFO:Base model : Gradient Boosting Classifier
2024-05-31 14:50:44,141:INFO:Declaring metric variables
2024-05-31 14:50:44,147:INFO:Defining Hyperparameters
2024-05-31 14:50:44,426:INFO:Tuning with n_jobs=-1
2024-05-31 14:50:44,426:INFO:Initializing RandomizedSearchCV
2024-05-31 14:51:30,968:INFO:best_params: {'actual_estimator__subsample': 0.75, 'actual_estimator__n_estimators': 180, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__learning_rate': 0.0001}
2024-05-31 14:51:30,970:INFO:Hyperparameter search completed
2024-05-31 14:51:30,970:INFO:SubProcess create_model() called ==================================
2024-05-31 14:51:30,974:INFO:Initializing create_model()
2024-05-31 14:51:30,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE1ED90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.75, 'n_estimators': 180, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 9, 'learning_rate': 0.0001})
2024-05-31 14:51:30,974:INFO:Checking exceptions
2024-05-31 14:51:30,975:INFO:Importing libraries
2024-05-31 14:51:30,975:INFO:Copying training dataset
2024-05-31 14:51:30,995:INFO:Defining folds
2024-05-31 14:51:30,995:INFO:Declaring metric variables
2024-05-31 14:51:31,001:INFO:Importing untrained model
2024-05-31 14:51:31,001:INFO:Declaring custom model
2024-05-31 14:51:31,013:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 14:51:31,029:INFO:Starting cross validation
2024-05-31 14:51:31,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:51:36,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,776:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,784:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,810:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,825:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,841:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,849:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,040:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,079:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,087:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,096:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,275:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,407:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,414:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,422:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,427:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,501:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,506:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,511:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,594:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,601:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,609:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,622:INFO:Calculating mean and std
2024-05-31 14:51:40,625:INFO:Creating metrics dataframe
2024-05-31 14:51:40,638:INFO:Finalizing model
2024-05-31 14:51:45,329:INFO:Uploading results into container
2024-05-31 14:51:45,332:INFO:Uploading model into container now
2024-05-31 14:51:45,333:INFO:_master_model_container: 21
2024-05-31 14:51:45,333:INFO:_display_container: 8
2024-05-31 14:51:45,334:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:51:45,334:INFO:create_model() successfully completed......................................
2024-05-31 14:51:45,510:INFO:SubProcess create_model() end ==================================
2024-05-31 14:51:45,510:INFO:choose_better activated
2024-05-31 14:51:45,517:INFO:SubProcess create_model() called ==================================
2024-05-31 14:51:45,518:INFO:Initializing create_model()
2024-05-31 14:51:45,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:51:45,519:INFO:Checking exceptions
2024-05-31 14:51:45,521:INFO:Importing libraries
2024-05-31 14:51:45,522:INFO:Copying training dataset
2024-05-31 14:51:45,546:INFO:Defining folds
2024-05-31 14:51:45,547:INFO:Declaring metric variables
2024-05-31 14:51:45,547:INFO:Importing untrained model
2024-05-31 14:51:45,547:INFO:Declaring custom model
2024-05-31 14:51:45,549:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 14:51:45,549:INFO:Starting cross validation
2024-05-31 14:51:45,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:51:48,961:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:48,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:48,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,066:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,082:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,211:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,214:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,218:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,222:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,230:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,245:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,252:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,294:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,746:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,808:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:52,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:52,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:52,978:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:53,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:53,050:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:53,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:53,070:INFO:Calculating mean and std
2024-05-31 14:51:53,076:INFO:Creating metrics dataframe
2024-05-31 14:51:53,078:INFO:Finalizing model
2024-05-31 14:51:56,240:INFO:Uploading results into container
2024-05-31 14:51:56,255:INFO:Uploading model into container now
2024-05-31 14:51:56,256:INFO:_master_model_container: 22
2024-05-31 14:51:56,256:INFO:_display_container: 9
2024-05-31 14:51:56,256:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:51:56,256:INFO:create_model() successfully completed......................................
2024-05-31 14:51:56,467:INFO:SubProcess create_model() end ==================================
2024-05-31 14:51:56,476:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.7861
2024-05-31 14:51:56,477:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.7921
2024-05-31 14:51:56,480:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-05-31 14:51:56,480:INFO:choose_better completed
2024-05-31 14:51:56,515:INFO:_master_model_container: 22
2024-05-31 14:51:56,515:INFO:_display_container: 8
2024-05-31 14:51:56,515:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:51:56,515:INFO:tune_model() successfully completed......................................
2024-05-31 14:58:35,877:INFO:Initializing tune_model()
2024-05-31 14:58:35,892:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-31 14:58:35,895:INFO:Checking exceptions
2024-05-31 14:58:36,734:INFO:Copying training dataset
2024-05-31 14:58:36,770:INFO:Checking base model
2024-05-31 14:58:36,792:INFO:Base model : Ada Boost Classifier
2024-05-31 14:58:36,816:INFO:Declaring metric variables
2024-05-31 14:58:36,828:INFO:Defining Hyperparameters
2024-05-31 14:58:39,450:INFO:Tuning with n_jobs=-1
2024-05-31 14:58:39,450:INFO:Initializing RandomizedSearchCV
2024-05-31 14:59:43,684:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__algorithm': 'SAMME'}
2024-05-31 14:59:43,699:INFO:Hyperparameter search completed
2024-05-31 14:59:43,699:INFO:SubProcess create_model() called ==================================
2024-05-31 14:59:43,699:INFO:Initializing create_model()
2024-05-31 14:59:43,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE30A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'learning_rate': 0.4, 'algorithm': 'SAMME'})
2024-05-31 14:59:43,699:INFO:Checking exceptions
2024-05-31 14:59:43,699:INFO:Importing libraries
2024-05-31 14:59:43,699:INFO:Copying training dataset
2024-05-31 14:59:43,746:INFO:Defining folds
2024-05-31 14:59:43,746:INFO:Declaring metric variables
2024-05-31 14:59:43,762:INFO:Importing untrained model
2024-05-31 14:59:43,762:INFO:Declaring custom model
2024-05-31 14:59:43,778:INFO:Ada Boost Classifier Imported successfully
2024-05-31 14:59:43,810:INFO:Starting cross validation
2024-05-31 14:59:43,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:59:48,899:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,923:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,976:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,007:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,019:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,021:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,039:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,039:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,052:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,084:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,089:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,089:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,101:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,121:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,411:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,422:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,479:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,500:INFO:Calculating mean and std
2024-05-31 14:59:52,516:INFO:Creating metrics dataframe
2024-05-31 14:59:52,532:INFO:Finalizing model
2024-05-31 14:59:56,554:INFO:Uploading results into container
2024-05-31 14:59:56,554:INFO:Uploading model into container now
2024-05-31 14:59:56,561:INFO:_master_model_container: 23
2024-05-31 14:59:56,561:INFO:_display_container: 9
2024-05-31 14:59:56,563:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123)
2024-05-31 14:59:56,563:INFO:create_model() successfully completed......................................
2024-05-31 14:59:56,794:INFO:SubProcess create_model() end ==================================
2024-05-31 14:59:56,794:INFO:choose_better activated
2024-05-31 14:59:56,807:INFO:SubProcess create_model() called ==================================
2024-05-31 14:59:56,808:INFO:Initializing create_model()
2024-05-31 14:59:56,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:59:56,810:INFO:Checking exceptions
2024-05-31 14:59:56,813:INFO:Importing libraries
2024-05-31 14:59:56,813:INFO:Copying training dataset
2024-05-31 14:59:56,849:INFO:Defining folds
2024-05-31 14:59:56,849:INFO:Declaring metric variables
2024-05-31 14:59:56,849:INFO:Importing untrained model
2024-05-31 14:59:56,849:INFO:Declaring custom model
2024-05-31 14:59:56,856:INFO:Ada Boost Classifier Imported successfully
2024-05-31 14:59:56,858:INFO:Starting cross validation
2024-05-31 14:59:56,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:59:57,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,434:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:58,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,487:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,495:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,545:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,564:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,621:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,626:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,636:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,642:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,642:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,689:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,697:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:58,877:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:59,718:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,777:INFO:Calculating mean and std
2024-05-31 14:59:59,777:INFO:Creating metrics dataframe
2024-05-31 14:59:59,777:INFO:Finalizing model
2024-05-31 15:00:00,108:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:00:00,865:INFO:Uploading results into container
2024-05-31 15:00:00,865:INFO:Uploading model into container now
2024-05-31 15:00:00,865:INFO:_master_model_container: 24
2024-05-31 15:00:00,865:INFO:_display_container: 10
2024-05-31 15:00:00,865:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 15:00:00,865:INFO:create_model() successfully completed......................................
2024-05-31 15:00:01,023:INFO:SubProcess create_model() end ==================================
2024-05-31 15:00:01,023:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123) result for Accuracy is 0.7525
2024-05-31 15:00:01,038:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123) result for Accuracy is 0.744
2024-05-31 15:00:01,038:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123) is best model
2024-05-31 15:00:01,038:INFO:choose_better completed
2024-05-31 15:00:01,038:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-31 15:00:01,070:INFO:_master_model_container: 24
2024-05-31 15:00:01,070:INFO:_display_container: 9
2024-05-31 15:00:01,070:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 15:00:01,070:INFO:tune_model() successfully completed......................................
2024-05-31 15:00:01,375:INFO:Initializing tune_model()
2024-05-31 15:00:01,375:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-31 15:00:01,377:INFO:Checking exceptions
2024-05-31 15:00:01,435:INFO:Copying training dataset
2024-05-31 15:00:01,459:INFO:Checking base model
2024-05-31 15:00:01,467:INFO:Base model : Decision Tree Classifier
2024-05-31 15:00:01,475:INFO:Declaring metric variables
2024-05-31 15:00:01,490:INFO:Defining Hyperparameters
2024-05-31 15:00:01,767:INFO:Tuning with n_jobs=-1
2024-05-31 15:00:01,767:INFO:Initializing RandomizedSearchCV
2024-05-31 15:00:09,891:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy'}
2024-05-31 15:00:09,893:INFO:Hyperparameter search completed
2024-05-31 15:00:09,893:INFO:SubProcess create_model() called ==================================
2024-05-31 15:00:09,893:INFO:Initializing create_model()
2024-05-31 15:00:09,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A606112D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.2, 'max_features': 'sqrt', 'max_depth': 5, 'criterion': 'entropy'})
2024-05-31 15:00:09,897:INFO:Checking exceptions
2024-05-31 15:00:09,897:INFO:Importing libraries
2024-05-31 15:00:09,897:INFO:Copying training dataset
2024-05-31 15:00:09,922:INFO:Defining folds
2024-05-31 15:00:09,922:INFO:Declaring metric variables
2024-05-31 15:00:09,922:INFO:Importing untrained model
2024-05-31 15:00:09,922:INFO:Declaring custom model
2024-05-31 15:00:09,938:INFO:Decision Tree Classifier Imported successfully
2024-05-31 15:00:09,969:INFO:Starting cross validation
2024-05-31 15:00:09,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:00:10,798:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,811:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,813:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,828:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,845:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,845:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,860:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,881:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,313:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:11,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:11,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,366:INFO:Calculating mean and std
2024-05-31 15:00:11,366:INFO:Creating metrics dataframe
2024-05-31 15:00:11,382:INFO:Finalizing model
2024-05-31 15:00:11,829:INFO:Uploading results into container
2024-05-31 15:00:11,829:INFO:Uploading model into container now
2024-05-31 15:00:11,829:INFO:_master_model_container: 25
2024-05-31 15:00:11,829:INFO:_display_container: 10
2024-05-31 15:00:11,829:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 15:00:11,829:INFO:create_model() successfully completed......................................
2024-05-31 15:00:12,015:INFO:SubProcess create_model() end ==================================
2024-05-31 15:00:12,015:INFO:choose_better activated
2024-05-31 15:00:12,029:INFO:SubProcess create_model() called ==================================
2024-05-31 15:00:12,029:INFO:Initializing create_model()
2024-05-31 15:00:12,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:00:12,029:INFO:Checking exceptions
2024-05-31 15:00:12,029:INFO:Importing libraries
2024-05-31 15:00:12,029:INFO:Copying training dataset
2024-05-31 15:00:12,064:INFO:Defining folds
2024-05-31 15:00:12,064:INFO:Declaring metric variables
2024-05-31 15:00:12,064:INFO:Importing untrained model
2024-05-31 15:00:12,064:INFO:Declaring custom model
2024-05-31 15:00:12,064:INFO:Decision Tree Classifier Imported successfully
2024-05-31 15:00:12,064:INFO:Starting cross validation
2024-05-31 15:00:12,076:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:00:12,883:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,883:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,885:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,897:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,899:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,899:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,918:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,933:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,947:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,517:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,564:INFO:Calculating mean and std
2024-05-31 15:00:13,564:INFO:Creating metrics dataframe
2024-05-31 15:00:13,580:INFO:Finalizing model
2024-05-31 15:00:13,992:INFO:Uploading results into container
2024-05-31 15:00:13,992:INFO:Uploading model into container now
2024-05-31 15:00:13,992:INFO:_master_model_container: 26
2024-05-31 15:00:13,992:INFO:_display_container: 11
2024-05-31 15:00:14,001:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 15:00:14,001:INFO:create_model() successfully completed......................................
2024-05-31 15:00:14,181:INFO:SubProcess create_model() end ==================================
2024-05-31 15:00:14,181:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.7272
2024-05-31 15:00:14,181:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.8305
2024-05-31 15:00:14,181:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') is best model
2024-05-31 15:00:14,181:INFO:choose_better completed
2024-05-31 15:00:14,201:INFO:_master_model_container: 26
2024-05-31 15:00:14,201:INFO:_display_container: 10
2024-05-31 15:00:14,213:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 15:00:14,213:INFO:tune_model() successfully completed......................................
2024-05-31 15:07:08,899:INFO:Initializing compare_models()
2024-05-31 15:07:08,904:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-31 15:07:08,904:INFO:Checking exceptions
2024-05-31 15:07:08,956:INFO:Preparing display monitor
2024-05-31 15:07:09,212:INFO:Initializing Logistic Regression
2024-05-31 15:07:09,212:INFO:Total runtime is 0.0 minutes
2024-05-31 15:07:09,239:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:09,254:INFO:Initializing create_model()
2024-05-31 15:07:09,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:09,257:INFO:Checking exceptions
2024-05-31 15:07:09,258:INFO:Importing libraries
2024-05-31 15:07:09,258:INFO:Copying training dataset
2024-05-31 15:07:09,317:INFO:Defining folds
2024-05-31 15:07:09,317:INFO:Declaring metric variables
2024-05-31 15:07:09,325:INFO:Importing untrained model
2024-05-31 15:07:09,341:INFO:Logistic Regression Imported successfully
2024-05-31 15:07:09,359:INFO:Starting cross validation
2024-05-31 15:07:09,375:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:25,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:25,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,008:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,139:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,141:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,184:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,205:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,213:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,355:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,359:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,375:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,383:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,392:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,399:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,408:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,190:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:27,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:27,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,300:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,340:INFO:Calculating mean and std
2024-05-31 15:07:27,342:INFO:Creating metrics dataframe
2024-05-31 15:07:27,354:INFO:Uploading results into container
2024-05-31 15:07:27,356:INFO:Uploading model into container now
2024-05-31 15:07:27,363:INFO:_master_model_container: 27
2024-05-31 15:07:27,363:INFO:_display_container: 11
2024-05-31 15:07:27,369:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-31 15:07:27,369:INFO:create_model() successfully completed......................................
2024-05-31 15:07:29,071:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:29,071:INFO:Creating metrics dataframe
2024-05-31 15:07:29,092:INFO:Initializing K Neighbors Classifier
2024-05-31 15:07:29,092:INFO:Total runtime is 0.3313332398732503 minutes
2024-05-31 15:07:29,101:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:29,104:INFO:Initializing create_model()
2024-05-31 15:07:29,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:29,104:INFO:Checking exceptions
2024-05-31 15:07:29,104:INFO:Importing libraries
2024-05-31 15:07:29,104:INFO:Copying training dataset
2024-05-31 15:07:29,128:INFO:Defining folds
2024-05-31 15:07:29,128:INFO:Declaring metric variables
2024-05-31 15:07:29,136:INFO:Importing untrained model
2024-05-31 15:07:29,144:INFO:K Neighbors Classifier Imported successfully
2024-05-31 15:07:29,167:INFO:Starting cross validation
2024-05-31 15:07:29,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:30,014:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,043:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,089:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,092:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,137:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,156:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,163:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,571:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,585:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,593:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,598:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,606:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,618:INFO:Calculating mean and std
2024-05-31 15:07:30,621:INFO:Creating metrics dataframe
2024-05-31 15:07:30,621:INFO:Uploading results into container
2024-05-31 15:07:30,621:INFO:Uploading model into container now
2024-05-31 15:07:30,621:INFO:_master_model_container: 28
2024-05-31 15:07:30,621:INFO:_display_container: 11
2024-05-31 15:07:30,621:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-31 15:07:30,626:INFO:create_model() successfully completed......................................
2024-05-31 15:07:30,768:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:30,768:INFO:Creating metrics dataframe
2024-05-31 15:07:30,804:INFO:Initializing Naive Bayes
2024-05-31 15:07:30,804:INFO:Total runtime is 0.3598727265993754 minutes
2024-05-31 15:07:30,815:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:30,815:INFO:Initializing create_model()
2024-05-31 15:07:30,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:30,815:INFO:Checking exceptions
2024-05-31 15:07:30,815:INFO:Importing libraries
2024-05-31 15:07:30,815:INFO:Copying training dataset
2024-05-31 15:07:30,851:INFO:Defining folds
2024-05-31 15:07:30,851:INFO:Declaring metric variables
2024-05-31 15:07:30,860:INFO:Importing untrained model
2024-05-31 15:07:30,870:INFO:Naive Bayes Imported successfully
2024-05-31 15:07:30,890:INFO:Starting cross validation
2024-05-31 15:07:30,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:31,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,627:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,627:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,627:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,660:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,660:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,676:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,093:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,109:INFO:Calculating mean and std
2024-05-31 15:07:32,111:INFO:Creating metrics dataframe
2024-05-31 15:07:32,115:INFO:Uploading results into container
2024-05-31 15:07:32,115:INFO:Uploading model into container now
2024-05-31 15:07:32,117:INFO:_master_model_container: 29
2024-05-31 15:07:32,117:INFO:_display_container: 11
2024-05-31 15:07:32,117:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-31 15:07:32,117:INFO:create_model() successfully completed......................................
2024-05-31 15:07:32,293:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:32,294:INFO:Creating metrics dataframe
2024-05-31 15:07:32,311:INFO:Initializing Decision Tree Classifier
2024-05-31 15:07:32,311:INFO:Total runtime is 0.3849760373433431 minutes
2024-05-31 15:07:32,318:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:32,322:INFO:Initializing create_model()
2024-05-31 15:07:32,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:32,322:INFO:Checking exceptions
2024-05-31 15:07:32,322:INFO:Importing libraries
2024-05-31 15:07:32,322:INFO:Copying training dataset
2024-05-31 15:07:32,353:INFO:Defining folds
2024-05-31 15:07:32,353:INFO:Declaring metric variables
2024-05-31 15:07:32,368:INFO:Importing untrained model
2024-05-31 15:07:32,376:INFO:Decision Tree Classifier Imported successfully
2024-05-31 15:07:32,402:INFO:Starting cross validation
2024-05-31 15:07:32,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:33,260:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,260:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,339:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,339:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,363:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,394:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,394:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,410:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,441:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,502:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,510:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,915:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,915:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,931:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,931:INFO:Calculating mean and std
2024-05-31 15:07:33,944:INFO:Creating metrics dataframe
2024-05-31 15:07:33,947:INFO:Uploading results into container
2024-05-31 15:07:33,947:INFO:Uploading model into container now
2024-05-31 15:07:33,947:INFO:_master_model_container: 30
2024-05-31 15:07:33,947:INFO:_display_container: 11
2024-05-31 15:07:33,947:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 15:07:33,947:INFO:create_model() successfully completed......................................
2024-05-31 15:07:34,128:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:34,128:INFO:Creating metrics dataframe
2024-05-31 15:07:34,152:INFO:Initializing SVM - Linear Kernel
2024-05-31 15:07:34,153:INFO:Total runtime is 0.41568924585978195 minutes
2024-05-31 15:07:34,160:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:34,161:INFO:Initializing create_model()
2024-05-31 15:07:34,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:34,161:INFO:Checking exceptions
2024-05-31 15:07:34,161:INFO:Importing libraries
2024-05-31 15:07:34,163:INFO:Copying training dataset
2024-05-31 15:07:34,181:INFO:Defining folds
2024-05-31 15:07:34,181:INFO:Declaring metric variables
2024-05-31 15:07:34,200:INFO:Importing untrained model
2024-05-31 15:07:34,211:INFO:SVM - Linear Kernel Imported successfully
2024-05-31 15:07:34,227:INFO:Starting cross validation
2024-05-31 15:07:34,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:34,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,993:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:34,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:35,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,047:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,480:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,485:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,494:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,494:INFO:Calculating mean and std
2024-05-31 15:07:35,509:INFO:Creating metrics dataframe
2024-05-31 15:07:35,512:INFO:Uploading results into container
2024-05-31 15:07:35,512:INFO:Uploading model into container now
2024-05-31 15:07:35,516:INFO:_master_model_container: 31
2024-05-31 15:07:35,516:INFO:_display_container: 11
2024-05-31 15:07:35,518:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-31 15:07:35,518:INFO:create_model() successfully completed......................................
2024-05-31 15:07:35,686:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:35,686:INFO:Creating metrics dataframe
2024-05-31 15:07:35,705:INFO:Initializing Ridge Classifier
2024-05-31 15:07:35,705:INFO:Total runtime is 0.44154143333435064 minutes
2024-05-31 15:07:35,711:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:35,717:INFO:Initializing create_model()
2024-05-31 15:07:35,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:35,717:INFO:Checking exceptions
2024-05-31 15:07:35,717:INFO:Importing libraries
2024-05-31 15:07:35,717:INFO:Copying training dataset
2024-05-31 15:07:35,744:INFO:Defining folds
2024-05-31 15:07:35,744:INFO:Declaring metric variables
2024-05-31 15:07:35,754:INFO:Importing untrained model
2024-05-31 15:07:35,761:INFO:Ridge Classifier Imported successfully
2024-05-31 15:07:35,790:INFO:Starting cross validation
2024-05-31 15:07:35,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:36,528:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,628:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,040:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,091:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,099:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,118:INFO:Calculating mean and std
2024-05-31 15:07:37,120:INFO:Creating metrics dataframe
2024-05-31 15:07:37,126:INFO:Uploading results into container
2024-05-31 15:07:37,126:INFO:Uploading model into container now
2024-05-31 15:07:37,128:INFO:_master_model_container: 32
2024-05-31 15:07:37,128:INFO:_display_container: 11
2024-05-31 15:07:37,128:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-31 15:07:37,131:INFO:create_model() successfully completed......................................
2024-05-31 15:07:37,283:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:37,283:INFO:Creating metrics dataframe
2024-05-31 15:07:37,310:INFO:Initializing Random Forest Classifier
2024-05-31 15:07:37,310:INFO:Total runtime is 0.4683024684588115 minutes
2024-05-31 15:07:37,316:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:37,316:INFO:Initializing create_model()
2024-05-31 15:07:37,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:37,323:INFO:Checking exceptions
2024-05-31 15:07:37,323:INFO:Importing libraries
2024-05-31 15:07:37,323:INFO:Copying training dataset
2024-05-31 15:07:37,366:INFO:Defining folds
2024-05-31 15:07:37,366:INFO:Declaring metric variables
2024-05-31 15:07:37,379:INFO:Importing untrained model
2024-05-31 15:07:37,387:INFO:Random Forest Classifier Imported successfully
2024-05-31 15:07:37,413:INFO:Starting cross validation
2024-05-31 15:07:37,422:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:39,350:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,358:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,358:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,373:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,382:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,387:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,391:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,398:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,558:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,563:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,563:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,579:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,257:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,261:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,261:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,279:INFO:Calculating mean and std
2024-05-31 15:07:40,279:INFO:Creating metrics dataframe
2024-05-31 15:07:40,279:INFO:Uploading results into container
2024-05-31 15:07:40,279:INFO:Uploading model into container now
2024-05-31 15:07:40,279:INFO:_master_model_container: 33
2024-05-31 15:07:40,279:INFO:_display_container: 11
2024-05-31 15:07:40,279:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 15:07:40,279:INFO:create_model() successfully completed......................................
2024-05-31 15:07:40,440:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:40,440:INFO:Creating metrics dataframe
2024-05-31 15:07:40,468:INFO:Initializing Quadratic Discriminant Analysis
2024-05-31 15:07:40,468:INFO:Total runtime is 0.5209313432375591 minutes
2024-05-31 15:07:40,469:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:40,477:INFO:Initializing create_model()
2024-05-31 15:07:40,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:40,477:INFO:Checking exceptions
2024-05-31 15:07:40,477:INFO:Importing libraries
2024-05-31 15:07:40,477:INFO:Copying training dataset
2024-05-31 15:07:40,500:INFO:Defining folds
2024-05-31 15:07:40,500:INFO:Declaring metric variables
2024-05-31 15:07:40,512:INFO:Importing untrained model
2024-05-31 15:07:40,522:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-31 15:07:40,543:INFO:Starting cross validation
2024-05-31 15:07:40,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,177:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,195:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,196:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,196:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,196:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,396:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,397:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,482:INFO:Calculating mean and std
2024-05-31 15:07:41,482:INFO:Creating metrics dataframe
2024-05-31 15:07:41,482:INFO:Uploading results into container
2024-05-31 15:07:41,482:INFO:Uploading model into container now
2024-05-31 15:07:41,488:INFO:_master_model_container: 34
2024-05-31 15:07:41,488:INFO:_display_container: 11
2024-05-31 15:07:41,488:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-31 15:07:41,488:INFO:create_model() successfully completed......................................
2024-05-31 15:07:41,647:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:41,647:INFO:Creating metrics dataframe
2024-05-31 15:07:41,682:INFO:Initializing Ada Boost Classifier
2024-05-31 15:07:41,683:INFO:Total runtime is 0.5411746144294739 minutes
2024-05-31 15:07:41,691:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:41,691:INFO:Initializing create_model()
2024-05-31 15:07:41,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:41,692:INFO:Checking exceptions
2024-05-31 15:07:41,692:INFO:Importing libraries
2024-05-31 15:07:41,692:INFO:Copying training dataset
2024-05-31 15:07:41,721:INFO:Defining folds
2024-05-31 15:07:41,722:INFO:Declaring metric variables
2024-05-31 15:07:41,733:INFO:Importing untrained model
2024-05-31 15:07:41,741:INFO:Ada Boost Classifier Imported successfully
2024-05-31 15:07:41,756:INFO:Starting cross validation
2024-05-31 15:07:41,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:42,258:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,273:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,273:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:43,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,100:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,107:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,107:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,134:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,134:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,134:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,146:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,146:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,273:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:43,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:43,936:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,936:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,947:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,947:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,962:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,962:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,977:INFO:Calculating mean and std
2024-05-31 15:07:43,980:INFO:Creating metrics dataframe
2024-05-31 15:07:43,980:INFO:Uploading results into container
2024-05-31 15:07:43,980:INFO:Uploading model into container now
2024-05-31 15:07:43,980:INFO:_master_model_container: 35
2024-05-31 15:07:43,980:INFO:_display_container: 11
2024-05-31 15:07:43,980:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 15:07:43,980:INFO:create_model() successfully completed......................................
2024-05-31 15:07:44,146:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:44,148:INFO:Creating metrics dataframe
2024-05-31 15:07:44,184:INFO:Initializing Gradient Boosting Classifier
2024-05-31 15:07:44,184:INFO:Total runtime is 0.5828637878100078 minutes
2024-05-31 15:07:44,194:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:44,195:INFO:Initializing create_model()
2024-05-31 15:07:44,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:44,195:INFO:Checking exceptions
2024-05-31 15:07:44,196:INFO:Importing libraries
2024-05-31 15:07:44,197:INFO:Copying training dataset
2024-05-31 15:07:44,230:INFO:Defining folds
2024-05-31 15:07:44,230:INFO:Declaring metric variables
2024-05-31 15:07:44,246:INFO:Importing untrained model
2024-05-31 15:07:44,254:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 15:07:44,287:INFO:Starting cross validation
2024-05-31 15:07:44,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:47,415:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,442:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,481:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,551:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,551:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,593:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,593:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,564:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,564:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,573:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,584:INFO:Calculating mean and std
2024-05-31 15:07:49,584:INFO:Creating metrics dataframe
2024-05-31 15:07:49,584:INFO:Uploading results into container
2024-05-31 15:07:49,584:INFO:Uploading model into container now
2024-05-31 15:07:49,584:INFO:_master_model_container: 36
2024-05-31 15:07:49,584:INFO:_display_container: 11
2024-05-31 15:07:49,584:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 15:07:49,584:INFO:create_model() successfully completed......................................
2024-05-31 15:07:49,811:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:49,811:INFO:Creating metrics dataframe
2024-05-31 15:07:49,868:INFO:Initializing Linear Discriminant Analysis
2024-05-31 15:07:49,868:INFO:Total runtime is 0.6776059349377951 minutes
2024-05-31 15:07:49,887:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:49,887:INFO:Initializing create_model()
2024-05-31 15:07:49,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:49,887:INFO:Checking exceptions
2024-05-31 15:07:49,887:INFO:Importing libraries
2024-05-31 15:07:49,887:INFO:Copying training dataset
2024-05-31 15:07:49,925:INFO:Defining folds
2024-05-31 15:07:49,925:INFO:Declaring metric variables
2024-05-31 15:07:49,938:INFO:Importing untrained model
2024-05-31 15:07:49,954:INFO:Linear Discriminant Analysis Imported successfully
2024-05-31 15:07:49,991:INFO:Starting cross validation
2024-05-31 15:07:50,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:50,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,664:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,699:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,715:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,745:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,998:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:51,002:INFO:Calculating mean and std
2024-05-31 15:07:51,008:INFO:Creating metrics dataframe
2024-05-31 15:07:51,010:INFO:Uploading results into container
2024-05-31 15:07:51,010:INFO:Uploading model into container now
2024-05-31 15:07:51,010:INFO:_master_model_container: 37
2024-05-31 15:07:51,010:INFO:_display_container: 11
2024-05-31 15:07:51,010:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-31 15:07:51,010:INFO:create_model() successfully completed......................................
2024-05-31 15:07:51,166:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:51,166:INFO:Creating metrics dataframe
2024-05-31 15:07:51,199:INFO:Initializing Extra Trees Classifier
2024-05-31 15:07:51,199:INFO:Total runtime is 0.6997761964797975 minutes
2024-05-31 15:07:51,210:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:51,210:INFO:Initializing create_model()
2024-05-31 15:07:51,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:51,210:INFO:Checking exceptions
2024-05-31 15:07:51,210:INFO:Importing libraries
2024-05-31 15:07:51,210:INFO:Copying training dataset
2024-05-31 15:07:51,238:INFO:Defining folds
2024-05-31 15:07:51,238:INFO:Declaring metric variables
2024-05-31 15:07:51,248:INFO:Importing untrained model
2024-05-31 15:07:51,258:INFO:Extra Trees Classifier Imported successfully
2024-05-31 15:07:51,278:INFO:Starting cross validation
2024-05-31 15:07:51,283:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:52,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,555:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,662:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,662:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,715:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,780:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,227:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,236:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,236:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,241:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,253:INFO:Calculating mean and std
2024-05-31 15:07:53,253:INFO:Creating metrics dataframe
2024-05-31 15:07:53,260:INFO:Uploading results into container
2024-05-31 15:07:53,261:INFO:Uploading model into container now
2024-05-31 15:07:53,261:INFO:_master_model_container: 38
2024-05-31 15:07:53,261:INFO:_display_container: 11
2024-05-31 15:07:53,262:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-31 15:07:53,270:INFO:create_model() successfully completed......................................
2024-05-31 15:07:53,432:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:53,432:INFO:Creating metrics dataframe
2024-05-31 15:07:53,482:INFO:Initializing Light Gradient Boosting Machine
2024-05-31 15:07:53,482:INFO:Total runtime is 0.7378291726112367 minutes
2024-05-31 15:07:53,496:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:53,497:INFO:Initializing create_model()
2024-05-31 15:07:53,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:53,498:INFO:Checking exceptions
2024-05-31 15:07:53,498:INFO:Importing libraries
2024-05-31 15:07:53,498:INFO:Copying training dataset
2024-05-31 15:07:53,537:INFO:Defining folds
2024-05-31 15:07:53,538:INFO:Declaring metric variables
2024-05-31 15:07:53,550:INFO:Importing untrained model
2024-05-31 15:07:53,573:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-31 15:07:53,610:INFO:Starting cross validation
2024-05-31 15:07:53,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:55,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,665:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,924:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,932:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,096:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,549:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,581:INFO:Calculating mean and std
2024-05-31 15:07:56,596:INFO:Creating metrics dataframe
2024-05-31 15:07:56,600:INFO:Uploading results into container
2024-05-31 15:07:56,600:INFO:Uploading model into container now
2024-05-31 15:07:56,604:INFO:_master_model_container: 39
2024-05-31 15:07:56,604:INFO:_display_container: 11
2024-05-31 15:07:56,604:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-31 15:07:56,604:INFO:create_model() successfully completed......................................
2024-05-31 15:07:56,755:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:56,755:INFO:Creating metrics dataframe
2024-05-31 15:07:56,779:INFO:Initializing Dummy Classifier
2024-05-31 15:07:56,779:INFO:Total runtime is 0.7927869160970054 minutes
2024-05-31 15:07:56,789:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:56,790:INFO:Initializing create_model()
2024-05-31 15:07:56,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:56,790:INFO:Checking exceptions
2024-05-31 15:07:56,790:INFO:Importing libraries
2024-05-31 15:07:56,790:INFO:Copying training dataset
2024-05-31 15:07:56,811:INFO:Defining folds
2024-05-31 15:07:56,811:INFO:Declaring metric variables
2024-05-31 15:07:56,828:INFO:Importing untrained model
2024-05-31 15:07:56,846:INFO:Dummy Classifier Imported successfully
2024-05-31 15:07:56,881:INFO:Starting cross validation
2024-05-31 15:07:56,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:57,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,674:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,676:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,014:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:58,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:58,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,067:INFO:Calculating mean and std
2024-05-31 15:07:58,074:INFO:Creating metrics dataframe
2024-05-31 15:07:58,078:INFO:Uploading results into container
2024-05-31 15:07:58,080:INFO:Uploading model into container now
2024-05-31 15:07:58,080:INFO:_master_model_container: 40
2024-05-31 15:07:58,080:INFO:_display_container: 11
2024-05-31 15:07:58,080:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 15:07:58,081:INFO:create_model() successfully completed......................................
2024-05-31 15:07:58,236:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:58,236:INFO:Creating metrics dataframe
2024-05-31 15:07:58,300:INFO:Initializing create_model()
2024-05-31 15:07:58,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:58,300:INFO:Checking exceptions
2024-05-31 15:07:58,307:INFO:Importing libraries
2024-05-31 15:07:58,308:INFO:Copying training dataset
2024-05-31 15:07:58,341:INFO:Defining folds
2024-05-31 15:07:58,341:INFO:Declaring metric variables
2024-05-31 15:07:58,343:INFO:Importing untrained model
2024-05-31 15:07:58,343:INFO:Declaring custom model
2024-05-31 15:07:58,343:INFO:Dummy Classifier Imported successfully
2024-05-31 15:07:58,349:INFO:Cross validation set to False
2024-05-31 15:07:58,350:INFO:Fitting Model
2024-05-31 15:07:58,707:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 15:07:58,707:INFO:create_model() successfully completed......................................
2024-05-31 15:07:58,956:INFO:_master_model_container: 40
2024-05-31 15:07:58,956:INFO:_display_container: 11
2024-05-31 15:07:58,956:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 15:07:58,956:INFO:compare_models() successfully completed......................................
