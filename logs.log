2024-05-24 15:42:29,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 15:42:29,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 15:42:29,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 15:42:29,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 15:57:10,050:INFO:PyCaret ClassificationExperiment
2024-05-24 15:57:10,050:INFO:Logging name: clf-default-name
2024-05-24 15:57:10,050:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-24 15:57:10,050:INFO:version 3.3.2
2024-05-24 15:57:10,053:INFO:Initializing setup()
2024-05-24 15:57:10,053:INFO:self.USI: 0598
2024-05-24 15:57:10,053:INFO:self._variable_keys: {'seed', 'X', 'is_multiclass', 'USI', 'X_test', 'target_param', 'memory', 'html_param', 'gpu_param', 'X_train', 'pipeline', 'fix_imbalance', 'y_train', '_available_plots', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'y', 'n_jobs_param', 'idx', 'fold_generator', 'log_plots_param', 'fold_groups_param', 'fold_shuffle_param', 'y_test', 'logging_param', 'data', '_ml_usecase'}
2024-05-24 15:57:10,053:INFO:Checking environment
2024-05-24 15:57:10,053:INFO:python_version: 3.11.5
2024-05-24 15:57:10,053:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-24 15:57:10,053:INFO:machine: AMD64
2024-05-24 15:57:10,053:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-24 15:57:10,058:INFO:Memory: svmem(total=8395403264, available=917250048, percent=89.1, used=7478153216, free=917250048)
2024-05-24 15:57:10,058:INFO:Physical Core: 4
2024-05-24 15:57:10,058:INFO:Logical Core: 8
2024-05-24 15:57:10,063:INFO:Checking libraries
2024-05-24 15:57:10,063:INFO:System:
2024-05-24 15:57:10,063:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-24 15:57:10,063:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-24 15:57:10,063:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-24 15:57:10,063:INFO:PyCaret required dependencies:
2024-05-24 15:57:13,706:INFO:                 pip: 23.2.1
2024-05-24 15:57:13,706:INFO:          setuptools: 68.0.0
2024-05-24 15:57:13,706:INFO:             pycaret: 3.3.2
2024-05-24 15:57:13,706:INFO:             IPython: 8.15.0
2024-05-24 15:57:13,706:INFO:          ipywidgets: 8.0.4
2024-05-24 15:57:13,706:INFO:                tqdm: 4.65.0
2024-05-24 15:57:13,706:INFO:               numpy: 1.24.3
2024-05-24 15:57:13,706:INFO:              pandas: 2.0.3
2024-05-24 15:57:13,706:INFO:              jinja2: 3.1.2
2024-05-24 15:57:13,706:INFO:               scipy: 1.11.1
2024-05-24 15:57:13,706:INFO:              joblib: 1.2.0
2024-05-24 15:57:13,706:INFO:             sklearn: 1.4.2
2024-05-24 15:57:13,706:INFO:                pyod: 1.1.3
2024-05-24 15:57:13,706:INFO:            imblearn: 0.12.2
2024-05-24 15:57:13,706:INFO:   category_encoders: 2.6.3
2024-05-24 15:57:13,706:INFO:            lightgbm: 4.3.0
2024-05-24 15:57:13,706:INFO:               numba: 0.57.1
2024-05-24 15:57:13,706:INFO:            requests: 2.31.0
2024-05-24 15:57:13,706:INFO:          matplotlib: 3.7.2
2024-05-24 15:57:13,706:INFO:          scikitplot: 0.3.7
2024-05-24 15:57:13,706:INFO:         yellowbrick: 1.5
2024-05-24 15:57:13,706:INFO:              plotly: 5.22.0
2024-05-24 15:57:13,706:INFO:    plotly-resampler: Not installed
2024-05-24 15:57:13,706:INFO:             kaleido: 0.2.1
2024-05-24 15:57:13,706:INFO:           schemdraw: 0.15
2024-05-24 15:57:13,706:INFO:         statsmodels: 0.14.0
2024-05-24 15:57:13,706:INFO:              sktime: 0.26.0
2024-05-24 15:57:13,706:INFO:               tbats: 1.1.3
2024-05-24 15:57:13,706:INFO:            pmdarima: 2.0.4
2024-05-24 15:57:13,706:INFO:              psutil: 5.9.0
2024-05-24 15:57:13,706:INFO:          markupsafe: 2.1.1
2024-05-24 15:57:13,706:INFO:             pickle5: Not installed
2024-05-24 15:57:13,706:INFO:         cloudpickle: 2.2.1
2024-05-24 15:57:13,706:INFO:         deprecation: 2.1.0
2024-05-24 15:57:13,706:INFO:              xxhash: 2.0.2
2024-05-24 15:57:13,706:INFO:           wurlitzer: Not installed
2024-05-24 15:57:13,706:INFO:PyCaret optional dependencies:
2024-05-24 15:57:13,743:INFO:                shap: Not installed
2024-05-24 15:57:13,743:INFO:           interpret: Not installed
2024-05-24 15:57:13,743:INFO:                umap: Not installed
2024-05-24 15:57:13,743:INFO:     ydata_profiling: Not installed
2024-05-24 15:57:13,743:INFO:  explainerdashboard: Not installed
2024-05-24 15:57:13,743:INFO:             autoviz: Not installed
2024-05-24 15:57:13,743:INFO:           fairlearn: Not installed
2024-05-24 15:57:13,743:INFO:          deepchecks: Not installed
2024-05-24 15:57:13,743:INFO:             xgboost: Not installed
2024-05-24 15:57:13,743:INFO:            catboost: Not installed
2024-05-24 15:57:13,743:INFO:              kmodes: Not installed
2024-05-24 15:57:13,743:INFO:             mlxtend: Not installed
2024-05-24 15:57:13,743:INFO:       statsforecast: Not installed
2024-05-24 15:57:13,743:INFO:        tune_sklearn: Not installed
2024-05-24 15:57:13,743:INFO:                 ray: Not installed
2024-05-24 15:57:13,743:INFO:            hyperopt: Not installed
2024-05-24 15:57:13,743:INFO:              optuna: Not installed
2024-05-24 15:57:13,743:INFO:               skopt: Not installed
2024-05-24 15:57:13,743:INFO:              mlflow: Not installed
2024-05-24 15:57:13,743:INFO:              gradio: Not installed
2024-05-24 15:57:13,743:INFO:             fastapi: Not installed
2024-05-24 15:57:13,743:INFO:             uvicorn: Not installed
2024-05-24 15:57:13,743:INFO:              m2cgen: Not installed
2024-05-24 15:57:13,743:INFO:           evidently: Not installed
2024-05-24 15:57:13,743:INFO:               fugue: Not installed
2024-05-24 15:57:13,743:INFO:           streamlit: Not installed
2024-05-24 15:57:13,743:INFO:             prophet: Not installed
2024-05-24 15:57:13,743:INFO:None
2024-05-24 15:57:13,743:INFO:Set up data.
2024-05-24 15:57:13,762:INFO:Set up folding strategy.
2024-05-24 15:57:13,762:INFO:Set up train/test split.
2024-05-24 15:57:13,803:INFO:Set up index.
2024-05-24 15:57:13,803:INFO:Assigning column types.
2024-05-24 15:57:13,818:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-24 15:57:13,926:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:13,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:13,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:13,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:14,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:14,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,090:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-24 15:57:14,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:14,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,288:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:14,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,336:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-24 15:57:14,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:14,525:INFO:Preparing preprocessing pipeline...
2024-05-24 15:57:14,534:INFO:Set up simple imputation.
2024-05-24 15:57:14,543:INFO:Set up encoding of ordinal features.
2024-05-24 15:57:14,552:INFO:Set up encoding of categorical features.
2024-05-24 15:57:14,552:INFO:Set up imbalanced handling.
2024-05-24 15:57:14,553:INFO:Set up feature normalization.
2024-05-24 15:57:31,906:INFO:PyCaret ClassificationExperiment
2024-05-24 15:57:31,906:INFO:Logging name: clf-default-name
2024-05-24 15:57:31,906:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-24 15:57:31,906:INFO:version 3.3.2
2024-05-24 15:57:31,906:INFO:Initializing setup()
2024-05-24 15:57:31,906:INFO:self.USI: c7ed
2024-05-24 15:57:31,906:INFO:self._variable_keys: {'seed', 'X', 'is_multiclass', 'USI', 'X_test', 'target_param', 'memory', 'html_param', 'gpu_param', 'X_train', 'pipeline', 'fix_imbalance', 'y_train', '_available_plots', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'y', 'n_jobs_param', 'idx', 'fold_generator', 'log_plots_param', 'fold_groups_param', 'fold_shuffle_param', 'y_test', 'logging_param', 'data', '_ml_usecase'}
2024-05-24 15:57:31,906:INFO:Checking environment
2024-05-24 15:57:31,906:INFO:python_version: 3.11.5
2024-05-24 15:57:31,906:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-24 15:57:31,906:INFO:machine: AMD64
2024-05-24 15:57:31,906:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-24 15:57:31,912:INFO:Memory: svmem(total=8395403264, available=1868824576, percent=77.7, used=6526578688, free=1868824576)
2024-05-24 15:57:31,912:INFO:Physical Core: 4
2024-05-24 15:57:31,912:INFO:Logical Core: 8
2024-05-24 15:57:31,912:INFO:Checking libraries
2024-05-24 15:57:31,912:INFO:System:
2024-05-24 15:57:31,912:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-24 15:57:31,912:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-24 15:57:31,912:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-24 15:57:31,912:INFO:PyCaret required dependencies:
2024-05-24 15:57:31,912:INFO:                 pip: 23.2.1
2024-05-24 15:57:31,912:INFO:          setuptools: 68.0.0
2024-05-24 15:57:31,912:INFO:             pycaret: 3.3.2
2024-05-24 15:57:31,912:INFO:             IPython: 8.15.0
2024-05-24 15:57:31,912:INFO:          ipywidgets: 8.0.4
2024-05-24 15:57:31,912:INFO:                tqdm: 4.65.0
2024-05-24 15:57:31,912:INFO:               numpy: 1.24.3
2024-05-24 15:57:31,912:INFO:              pandas: 2.0.3
2024-05-24 15:57:31,912:INFO:              jinja2: 3.1.2
2024-05-24 15:57:31,912:INFO:               scipy: 1.11.1
2024-05-24 15:57:31,912:INFO:              joblib: 1.2.0
2024-05-24 15:57:31,912:INFO:             sklearn: 1.4.2
2024-05-24 15:57:31,912:INFO:                pyod: 1.1.3
2024-05-24 15:57:31,912:INFO:            imblearn: 0.12.2
2024-05-24 15:57:31,912:INFO:   category_encoders: 2.6.3
2024-05-24 15:57:31,912:INFO:            lightgbm: 4.3.0
2024-05-24 15:57:31,912:INFO:               numba: 0.57.1
2024-05-24 15:57:31,912:INFO:            requests: 2.31.0
2024-05-24 15:57:31,912:INFO:          matplotlib: 3.7.2
2024-05-24 15:57:31,912:INFO:          scikitplot: 0.3.7
2024-05-24 15:57:31,912:INFO:         yellowbrick: 1.5
2024-05-24 15:57:31,912:INFO:              plotly: 5.22.0
2024-05-24 15:57:31,919:INFO:    plotly-resampler: Not installed
2024-05-24 15:57:31,919:INFO:             kaleido: 0.2.1
2024-05-24 15:57:31,919:INFO:           schemdraw: 0.15
2024-05-24 15:57:31,919:INFO:         statsmodels: 0.14.0
2024-05-24 15:57:31,919:INFO:              sktime: 0.26.0
2024-05-24 15:57:31,919:INFO:               tbats: 1.1.3
2024-05-24 15:57:31,919:INFO:            pmdarima: 2.0.4
2024-05-24 15:57:31,919:INFO:              psutil: 5.9.0
2024-05-24 15:57:31,919:INFO:          markupsafe: 2.1.1
2024-05-24 15:57:31,919:INFO:             pickle5: Not installed
2024-05-24 15:57:31,919:INFO:         cloudpickle: 2.2.1
2024-05-24 15:57:31,919:INFO:         deprecation: 2.1.0
2024-05-24 15:57:31,919:INFO:              xxhash: 2.0.2
2024-05-24 15:57:31,919:INFO:           wurlitzer: Not installed
2024-05-24 15:57:31,919:INFO:PyCaret optional dependencies:
2024-05-24 15:57:31,921:INFO:                shap: Not installed
2024-05-24 15:57:31,921:INFO:           interpret: Not installed
2024-05-24 15:57:31,921:INFO:                umap: Not installed
2024-05-24 15:57:31,922:INFO:     ydata_profiling: Not installed
2024-05-24 15:57:31,922:INFO:  explainerdashboard: Not installed
2024-05-24 15:57:31,922:INFO:             autoviz: Not installed
2024-05-24 15:57:31,922:INFO:           fairlearn: Not installed
2024-05-24 15:57:31,922:INFO:          deepchecks: Not installed
2024-05-24 15:57:31,922:INFO:             xgboost: Not installed
2024-05-24 15:57:31,922:INFO:            catboost: Not installed
2024-05-24 15:57:31,922:INFO:              kmodes: Not installed
2024-05-24 15:57:31,922:INFO:             mlxtend: Not installed
2024-05-24 15:57:31,922:INFO:       statsforecast: Not installed
2024-05-24 15:57:31,922:INFO:        tune_sklearn: Not installed
2024-05-24 15:57:31,922:INFO:                 ray: Not installed
2024-05-24 15:57:31,922:INFO:            hyperopt: Not installed
2024-05-24 15:57:31,922:INFO:              optuna: Not installed
2024-05-24 15:57:31,922:INFO:               skopt: Not installed
2024-05-24 15:57:31,922:INFO:              mlflow: Not installed
2024-05-24 15:57:31,922:INFO:              gradio: Not installed
2024-05-24 15:57:31,922:INFO:             fastapi: Not installed
2024-05-24 15:57:31,922:INFO:             uvicorn: Not installed
2024-05-24 15:57:31,922:INFO:              m2cgen: Not installed
2024-05-24 15:57:31,922:INFO:           evidently: Not installed
2024-05-24 15:57:31,922:INFO:               fugue: Not installed
2024-05-24 15:57:31,922:INFO:           streamlit: Not installed
2024-05-24 15:57:31,922:INFO:             prophet: Not installed
2024-05-24 15:57:31,922:INFO:None
2024-05-24 15:57:31,922:INFO:Set up data.
2024-05-24 15:57:31,941:INFO:Set up folding strategy.
2024-05-24 15:57:31,941:INFO:Set up train/test split.
2024-05-24 15:57:31,964:INFO:Set up index.
2024-05-24 15:57:31,964:INFO:Assigning column types.
2024-05-24 15:57:31,984:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-24 15:57:32,076:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,079:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,209:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,244:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-24 15:57:32,384:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,497:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:32,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,549:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-24 15:57:32,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:32,858:INFO:Preparing preprocessing pipeline...
2024-05-24 15:57:32,873:INFO:Set up simple imputation.
2024-05-24 15:57:32,898:INFO:Set up encoding of ordinal features.
2024-05-24 15:57:32,936:INFO:Set up encoding of categorical features.
2024-05-24 15:57:32,938:INFO:Set up imbalanced handling.
2024-05-24 15:57:56,781:INFO:PyCaret ClassificationExperiment
2024-05-24 15:57:56,781:INFO:Logging name: clf-default-name
2024-05-24 15:57:56,781:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-24 15:57:56,781:INFO:version 3.3.2
2024-05-24 15:57:56,781:INFO:Initializing setup()
2024-05-24 15:57:56,781:INFO:self.USI: e2f2
2024-05-24 15:57:56,781:INFO:self._variable_keys: {'seed', 'X', 'is_multiclass', 'USI', 'X_test', 'target_param', 'memory', 'html_param', 'gpu_param', 'X_train', 'pipeline', 'fix_imbalance', 'y_train', '_available_plots', 'exp_name_log', 'exp_id', 'gpu_n_jobs_param', 'y', 'n_jobs_param', 'idx', 'fold_generator', 'log_plots_param', 'fold_groups_param', 'fold_shuffle_param', 'y_test', 'logging_param', 'data', '_ml_usecase'}
2024-05-24 15:57:56,781:INFO:Checking environment
2024-05-24 15:57:56,781:INFO:python_version: 3.11.5
2024-05-24 15:57:56,781:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-24 15:57:56,781:INFO:machine: AMD64
2024-05-24 15:57:56,781:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-24 15:57:56,781:INFO:Memory: svmem(total=8395403264, available=1959620608, percent=76.7, used=6435782656, free=1959620608)
2024-05-24 15:57:56,781:INFO:Physical Core: 4
2024-05-24 15:57:56,781:INFO:Logical Core: 8
2024-05-24 15:57:56,781:INFO:Checking libraries
2024-05-24 15:57:56,781:INFO:System:
2024-05-24 15:57:56,781:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-24 15:57:56,781:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-24 15:57:56,781:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-24 15:57:56,781:INFO:PyCaret required dependencies:
2024-05-24 15:57:56,781:INFO:                 pip: 23.2.1
2024-05-24 15:57:56,781:INFO:          setuptools: 68.0.0
2024-05-24 15:57:56,781:INFO:             pycaret: 3.3.2
2024-05-24 15:57:56,781:INFO:             IPython: 8.15.0
2024-05-24 15:57:56,781:INFO:          ipywidgets: 8.0.4
2024-05-24 15:57:56,781:INFO:                tqdm: 4.65.0
2024-05-24 15:57:56,781:INFO:               numpy: 1.24.3
2024-05-24 15:57:56,781:INFO:              pandas: 2.0.3
2024-05-24 15:57:56,781:INFO:              jinja2: 3.1.2
2024-05-24 15:57:56,781:INFO:               scipy: 1.11.1
2024-05-24 15:57:56,781:INFO:              joblib: 1.2.0
2024-05-24 15:57:56,781:INFO:             sklearn: 1.4.2
2024-05-24 15:57:56,781:INFO:                pyod: 1.1.3
2024-05-24 15:57:56,781:INFO:            imblearn: 0.12.2
2024-05-24 15:57:56,781:INFO:   category_encoders: 2.6.3
2024-05-24 15:57:56,781:INFO:            lightgbm: 4.3.0
2024-05-24 15:57:56,781:INFO:               numba: 0.57.1
2024-05-24 15:57:56,781:INFO:            requests: 2.31.0
2024-05-24 15:57:56,781:INFO:          matplotlib: 3.7.2
2024-05-24 15:57:56,781:INFO:          scikitplot: 0.3.7
2024-05-24 15:57:56,781:INFO:         yellowbrick: 1.5
2024-05-24 15:57:56,781:INFO:              plotly: 5.22.0
2024-05-24 15:57:56,790:INFO:    plotly-resampler: Not installed
2024-05-24 15:57:56,790:INFO:             kaleido: 0.2.1
2024-05-24 15:57:56,790:INFO:           schemdraw: 0.15
2024-05-24 15:57:56,790:INFO:         statsmodels: 0.14.0
2024-05-24 15:57:56,790:INFO:              sktime: 0.26.0
2024-05-24 15:57:56,790:INFO:               tbats: 1.1.3
2024-05-24 15:57:56,791:INFO:            pmdarima: 2.0.4
2024-05-24 15:57:56,791:INFO:              psutil: 5.9.0
2024-05-24 15:57:56,791:INFO:          markupsafe: 2.1.1
2024-05-24 15:57:56,791:INFO:             pickle5: Not installed
2024-05-24 15:57:56,791:INFO:         cloudpickle: 2.2.1
2024-05-24 15:57:56,792:INFO:         deprecation: 2.1.0
2024-05-24 15:57:56,792:INFO:              xxhash: 2.0.2
2024-05-24 15:57:56,792:INFO:           wurlitzer: Not installed
2024-05-24 15:57:56,792:INFO:PyCaret optional dependencies:
2024-05-24 15:57:56,792:INFO:                shap: Not installed
2024-05-24 15:57:56,792:INFO:           interpret: Not installed
2024-05-24 15:57:56,792:INFO:                umap: Not installed
2024-05-24 15:57:56,792:INFO:     ydata_profiling: Not installed
2024-05-24 15:57:56,792:INFO:  explainerdashboard: Not installed
2024-05-24 15:57:56,792:INFO:             autoviz: Not installed
2024-05-24 15:57:56,792:INFO:           fairlearn: Not installed
2024-05-24 15:57:56,792:INFO:          deepchecks: Not installed
2024-05-24 15:57:56,792:INFO:             xgboost: Not installed
2024-05-24 15:57:56,792:INFO:            catboost: Not installed
2024-05-24 15:57:56,792:INFO:              kmodes: Not installed
2024-05-24 15:57:56,792:INFO:             mlxtend: Not installed
2024-05-24 15:57:56,792:INFO:       statsforecast: Not installed
2024-05-24 15:57:56,792:INFO:        tune_sklearn: Not installed
2024-05-24 15:57:56,792:INFO:                 ray: Not installed
2024-05-24 15:57:56,792:INFO:            hyperopt: Not installed
2024-05-24 15:57:56,792:INFO:              optuna: Not installed
2024-05-24 15:57:56,792:INFO:               skopt: Not installed
2024-05-24 15:57:56,792:INFO:              mlflow: Not installed
2024-05-24 15:57:56,792:INFO:              gradio: Not installed
2024-05-24 15:57:56,792:INFO:             fastapi: Not installed
2024-05-24 15:57:56,792:INFO:             uvicorn: Not installed
2024-05-24 15:57:56,792:INFO:              m2cgen: Not installed
2024-05-24 15:57:56,792:INFO:           evidently: Not installed
2024-05-24 15:57:56,792:INFO:               fugue: Not installed
2024-05-24 15:57:56,792:INFO:           streamlit: Not installed
2024-05-24 15:57:56,792:INFO:             prophet: Not installed
2024-05-24 15:57:56,792:INFO:None
2024-05-24 15:57:56,792:INFO:Set up data.
2024-05-24 15:57:56,807:INFO:Set up folding strategy.
2024-05-24 15:57:56,807:INFO:Set up train/test split.
2024-05-24 15:57:56,814:INFO:Set up index.
2024-05-24 15:57:56,814:INFO:Assigning column types.
2024-05-24 15:57:56,831:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-24 15:57:56,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:56,903:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:56,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:56,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 15:57:57,026:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:57,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,067:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-24 15:57:57,130:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:57,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,238:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 15:57:57,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,286:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-24 15:57:57,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 15:57:57,528:INFO:Preparing preprocessing pipeline...
2024-05-24 15:57:57,532:INFO:Set up simple imputation.
2024-05-24 15:57:57,541:INFO:Set up encoding of ordinal features.
2024-05-24 15:57:57,553:INFO:Set up encoding of categorical features.
2024-05-24 15:57:57,553:INFO:Set up imbalanced handling.
2024-05-24 16:39:36,637:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 16:39:36,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 16:39:36,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 16:39:36,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-24 16:39:40,701:INFO:PyCaret ClassificationExperiment
2024-05-24 16:39:40,701:INFO:Logging name: clf-default-name
2024-05-24 16:39:40,701:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-24 16:39:40,701:INFO:version 3.2.0
2024-05-24 16:39:40,701:INFO:Initializing setup()
2024-05-24 16:39:40,701:INFO:self.USI: 16ab
2024-05-24 16:39:40,701:INFO:self._variable_keys: {'html_param', 'memory', 'fold_generator', 'idx', 'log_plots_param', 'data', 'X_train', 'is_multiclass', '_ml_usecase', 'fix_imbalance', 'logging_param', 'gpu_param', 'exp_name_log', 'pipeline', 'y', 'X_test', 'gpu_n_jobs_param', 'n_jobs_param', 'target_param', 'seed', 'X', 'fold_shuffle_param', 'exp_id', 'y_train', '_available_plots', 'y_test', 'USI', 'fold_groups_param'}
2024-05-24 16:39:40,701:INFO:Checking environment
2024-05-24 16:39:40,701:INFO:python_version: 3.11.5
2024-05-24 16:39:40,701:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-24 16:39:40,701:INFO:machine: AMD64
2024-05-24 16:39:40,701:INFO:platform: Windows-10-10.0.19045-SP0
2024-05-24 16:39:40,701:INFO:Memory: svmem(total=8471379968, available=1535717376, percent=81.9, used=6935662592, free=1535717376)
2024-05-24 16:39:40,701:INFO:Physical Core: 2
2024-05-24 16:39:40,701:INFO:Logical Core: 4
2024-05-24 16:39:40,701:INFO:Checking libraries
2024-05-24 16:39:40,701:INFO:System:
2024-05-24 16:39:40,701:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-24 16:39:40,701:INFO:executable: c:\Users\clemc\anaconda3\python.exe
2024-05-24 16:39:40,701:INFO:   machine: Windows-10-10.0.19045-SP0
2024-05-24 16:39:40,701:INFO:PyCaret required dependencies:
2024-05-24 16:39:43,299:INFO:                 pip: 23.2.1
2024-05-24 16:39:43,299:INFO:          setuptools: 68.0.0
2024-05-24 16:39:43,299:INFO:             pycaret: 3.2.0
2024-05-24 16:39:43,299:INFO:             IPython: 8.15.0
2024-05-24 16:39:43,299:INFO:          ipywidgets: 8.0.4
2024-05-24 16:39:43,299:INFO:                tqdm: 4.65.0
2024-05-24 16:39:43,299:INFO:               numpy: 1.24.3
2024-05-24 16:39:43,299:INFO:              pandas: 1.5.3
2024-05-24 16:39:43,299:INFO:              jinja2: 3.1.2
2024-05-24 16:39:43,299:INFO:               scipy: 1.10.1
2024-05-24 16:39:43,299:INFO:              joblib: 1.2.0
2024-05-24 16:39:43,299:INFO:             sklearn: 1.2.2
2024-05-24 16:39:43,299:INFO:                pyod: 1.1.2
2024-05-24 16:39:43,299:INFO:            imblearn: 0.10.1
2024-05-24 16:39:43,299:INFO:   category_encoders: 2.6.3
2024-05-24 16:39:43,299:INFO:            lightgbm: 4.2.0
2024-05-24 16:39:43,299:INFO:               numba: 0.57.1
2024-05-24 16:39:43,310:INFO:            requests: 2.31.0
2024-05-24 16:39:43,311:INFO:          matplotlib: 3.6.0
2024-05-24 16:39:43,311:INFO:          scikitplot: 0.3.7
2024-05-24 16:39:43,311:INFO:         yellowbrick: 1.5
2024-05-24 16:39:43,312:INFO:              plotly: 5.9.0
2024-05-24 16:39:43,312:INFO:    plotly-resampler: Not installed
2024-05-24 16:39:43,312:INFO:             kaleido: 0.2.1
2024-05-24 16:39:43,312:INFO:           schemdraw: 0.15
2024-05-24 16:39:43,312:INFO:         statsmodels: 0.14.0
2024-05-24 16:39:43,312:INFO:              sktime: 0.21.1
2024-05-24 16:39:43,314:INFO:               tbats: 1.1.3
2024-05-24 16:39:43,314:INFO:            pmdarima: 2.0.4
2024-05-24 16:39:43,314:INFO:              psutil: 5.9.0
2024-05-24 16:39:43,314:INFO:          markupsafe: 2.1.1
2024-05-24 16:39:43,315:INFO:             pickle5: Not installed
2024-05-24 16:39:43,315:INFO:         cloudpickle: 2.2.1
2024-05-24 16:39:43,316:INFO:         deprecation: 2.1.0
2024-05-24 16:39:43,316:INFO:              xxhash: 2.0.2
2024-05-24 16:39:43,316:INFO:           wurlitzer: Not installed
2024-05-24 16:39:43,316:INFO:PyCaret optional dependencies:
2024-05-24 16:39:43,335:INFO:                shap: Not installed
2024-05-24 16:39:43,342:INFO:           interpret: Not installed
2024-05-24 16:39:43,343:INFO:                umap: Not installed
2024-05-24 16:39:43,344:INFO:     ydata_profiling: Not installed
2024-05-24 16:39:43,344:INFO:  explainerdashboard: Not installed
2024-05-24 16:39:43,344:INFO:             autoviz: Not installed
2024-05-24 16:39:43,344:INFO:           fairlearn: Not installed
2024-05-24 16:39:43,344:INFO:          deepchecks: Not installed
2024-05-24 16:39:43,345:INFO:             xgboost: Not installed
2024-05-24 16:39:43,345:INFO:            catboost: Not installed
2024-05-24 16:39:43,345:INFO:              kmodes: Not installed
2024-05-24 16:39:43,345:INFO:             mlxtend: Not installed
2024-05-24 16:39:43,345:INFO:       statsforecast: Not installed
2024-05-24 16:39:43,345:INFO:        tune_sklearn: Not installed
2024-05-24 16:39:43,345:INFO:                 ray: Not installed
2024-05-24 16:39:43,345:INFO:            hyperopt: Not installed
2024-05-24 16:39:43,345:INFO:              optuna: Not installed
2024-05-24 16:39:43,345:INFO:               skopt: Not installed
2024-05-24 16:39:43,345:INFO:              mlflow: 2.13.0
2024-05-24 16:39:43,345:INFO:              gradio: Not installed
2024-05-24 16:39:43,345:INFO:             fastapi: Not installed
2024-05-24 16:39:43,345:INFO:             uvicorn: Not installed
2024-05-24 16:39:43,345:INFO:              m2cgen: Not installed
2024-05-24 16:39:43,345:INFO:           evidently: Not installed
2024-05-24 16:39:43,345:INFO:               fugue: Not installed
2024-05-24 16:39:43,345:INFO:           streamlit: Not installed
2024-05-24 16:39:43,345:INFO:             prophet: Not installed
2024-05-24 16:39:43,349:INFO:None
2024-05-24 16:39:43,349:INFO:Set up data.
2024-05-24 16:39:43,360:INFO:Set up folding strategy.
2024-05-24 16:39:43,360:INFO:Set up train/test split.
2024-05-24 16:39:43,413:INFO:Set up index.
2024-05-24 16:39:43,413:INFO:Assigning column types.
2024-05-24 16:39:43,413:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-24 16:39:43,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,661:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-24 16:39:43,713:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,814:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-24 16:39:43,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,858:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-24 16:39:43,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:43,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:44,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:44,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-24 16:39:44,072:INFO:Preparing preprocessing pipeline...
2024-05-24 16:39:44,076:INFO:Set up simple imputation.
2024-05-24 16:39:44,077:INFO:Set up encoding of ordinal features.
2024-05-24 16:39:44,077:INFO:Set up encoding of categorical features.
2024-05-24 16:39:44,077:INFO:Set up imbalanced handling.
2024-05-27 18:14:22,736:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-27 18:14:22,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-27 18:14:22,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-27 18:14:22,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-27 18:20:58,612:INFO:PyCaret ClassificationExperiment
2024-05-27 18:20:58,614:INFO:Logging name: clf-default-name
2024-05-27 18:20:58,614:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-27 18:20:58,614:INFO:version 3.3.2
2024-05-27 18:20:58,614:INFO:Initializing setup()
2024-05-27 18:20:58,614:INFO:self.USI: 6f71
2024-05-27 18:20:58,614:INFO:self._variable_keys: {'y', 'is_multiclass', '_ml_usecase', 'logging_param', 'fold_groups_param', 'X_train', 'USI', '_available_plots', 'X_test', 'y_train', 'seed', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'memory', 'n_jobs_param', 'exp_id', 'html_param', 'X', 'data', 'fold_generator', 'idx', 'gpu_param', 'y_test', 'fix_imbalance', 'fold_shuffle_param', 'target_param', 'pipeline'}
2024-05-27 18:20:58,614:INFO:Checking environment
2024-05-27 18:20:58,615:INFO:python_version: 3.11.5
2024-05-27 18:20:58,615:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-27 18:20:58,615:INFO:machine: AMD64
2024-05-27 18:20:58,615:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-27 18:20:58,619:INFO:Memory: svmem(total=8395403264, available=1115701248, percent=86.7, used=7279702016, free=1115701248)
2024-05-27 18:20:58,619:INFO:Physical Core: 4
2024-05-27 18:20:58,619:INFO:Logical Core: 8
2024-05-27 18:20:58,619:INFO:Checking libraries
2024-05-27 18:20:58,619:INFO:System:
2024-05-27 18:20:58,619:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-27 18:20:58,619:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-27 18:20:58,619:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-27 18:20:58,619:INFO:PyCaret required dependencies:
2024-05-27 18:21:02,672:INFO:                 pip: 23.2.1
2024-05-27 18:21:02,673:INFO:          setuptools: 68.0.0
2024-05-27 18:21:02,673:INFO:             pycaret: 3.3.2
2024-05-27 18:21:02,673:INFO:             IPython: 8.15.0
2024-05-27 18:21:02,673:INFO:          ipywidgets: 8.0.4
2024-05-27 18:21:02,674:INFO:                tqdm: 4.65.0
2024-05-27 18:21:02,674:INFO:               numpy: 1.24.3
2024-05-27 18:21:02,674:INFO:              pandas: 2.0.3
2024-05-27 18:21:02,674:INFO:              jinja2: 3.1.2
2024-05-27 18:21:02,675:INFO:               scipy: 1.11.1
2024-05-27 18:21:02,675:INFO:              joblib: 1.2.0
2024-05-27 18:21:02,675:INFO:             sklearn: 1.4.2
2024-05-27 18:21:02,675:INFO:                pyod: 1.1.3
2024-05-27 18:21:02,675:INFO:            imblearn: 0.12.2
2024-05-27 18:21:02,676:INFO:   category_encoders: 2.6.3
2024-05-27 18:21:02,676:INFO:            lightgbm: 4.3.0
2024-05-27 18:21:02,676:INFO:               numba: 0.57.1
2024-05-27 18:21:02,676:INFO:            requests: 2.31.0
2024-05-27 18:21:02,677:INFO:          matplotlib: 3.7.2
2024-05-27 18:21:02,677:INFO:          scikitplot: 0.3.7
2024-05-27 18:21:02,677:INFO:         yellowbrick: 1.5
2024-05-27 18:21:02,677:INFO:              plotly: 5.22.0
2024-05-27 18:21:02,677:INFO:    plotly-resampler: Not installed
2024-05-27 18:21:02,677:INFO:             kaleido: 0.2.1
2024-05-27 18:21:02,677:INFO:           schemdraw: 0.15
2024-05-27 18:21:02,678:INFO:         statsmodels: 0.14.0
2024-05-27 18:21:02,678:INFO:              sktime: 0.26.0
2024-05-27 18:21:02,678:INFO:               tbats: 1.1.3
2024-05-27 18:21:02,679:INFO:            pmdarima: 2.0.4
2024-05-27 18:21:02,679:INFO:              psutil: 5.9.0
2024-05-27 18:21:02,679:INFO:          markupsafe: 2.1.1
2024-05-27 18:21:02,679:INFO:             pickle5: Not installed
2024-05-27 18:21:02,680:INFO:         cloudpickle: 2.2.1
2024-05-27 18:21:02,680:INFO:         deprecation: 2.1.0
2024-05-27 18:21:02,680:INFO:              xxhash: 2.0.2
2024-05-27 18:21:02,680:INFO:           wurlitzer: Not installed
2024-05-27 18:21:02,681:INFO:PyCaret optional dependencies:
2024-05-27 18:21:02,740:INFO:                shap: Not installed
2024-05-27 18:21:02,740:INFO:           interpret: Not installed
2024-05-27 18:21:02,740:INFO:                umap: Not installed
2024-05-27 18:21:02,740:INFO:     ydata_profiling: Not installed
2024-05-27 18:21:02,740:INFO:  explainerdashboard: Not installed
2024-05-27 18:21:02,740:INFO:             autoviz: Not installed
2024-05-27 18:21:02,740:INFO:           fairlearn: Not installed
2024-05-27 18:21:02,740:INFO:          deepchecks: Not installed
2024-05-27 18:21:02,740:INFO:             xgboost: Not installed
2024-05-27 18:21:02,741:INFO:            catboost: Not installed
2024-05-27 18:21:02,741:INFO:              kmodes: Not installed
2024-05-27 18:21:02,741:INFO:             mlxtend: Not installed
2024-05-27 18:21:02,741:INFO:       statsforecast: Not installed
2024-05-27 18:21:02,741:INFO:        tune_sklearn: Not installed
2024-05-27 18:21:02,742:INFO:                 ray: Not installed
2024-05-27 18:21:02,742:INFO:            hyperopt: Not installed
2024-05-27 18:21:02,742:INFO:              optuna: Not installed
2024-05-27 18:21:02,742:INFO:               skopt: Not installed
2024-05-27 18:21:02,742:INFO:              mlflow: 2.13.0
2024-05-27 18:21:02,742:INFO:              gradio: Not installed
2024-05-27 18:21:02,742:INFO:             fastapi: Not installed
2024-05-27 18:21:02,742:INFO:             uvicorn: Not installed
2024-05-27 18:21:02,742:INFO:              m2cgen: Not installed
2024-05-27 18:21:02,742:INFO:           evidently: Not installed
2024-05-27 18:21:02,743:INFO:               fugue: Not installed
2024-05-27 18:21:02,743:INFO:           streamlit: Not installed
2024-05-27 18:21:02,743:INFO:             prophet: Not installed
2024-05-27 18:21:02,743:INFO:None
2024-05-27 18:21:02,743:INFO:Set up data.
2024-05-27 18:21:02,768:INFO:Set up folding strategy.
2024-05-27 18:21:02,769:INFO:Set up train/test split.
2024-05-27 18:21:02,795:INFO:Set up index.
2024-05-27 18:21:02,795:INFO:Assigning column types.
2024-05-27 18:21:02,813:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-27 18:21:02,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-27 18:21:02,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:21:02,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:02,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-27 18:21:03,067:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:21:03,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,103:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-27 18:21:03,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:21:03,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,264:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:21:03,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,325:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-27 18:21:03,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:21:03,523:INFO:Preparing preprocessing pipeline...
2024-05-27 18:21:03,527:INFO:Set up simple imputation.
2024-05-27 18:21:03,540:INFO:Set up encoding of ordinal features.
2024-05-27 18:21:03,557:INFO:Set up encoding of categorical features.
2024-05-27 18:21:03,557:INFO:Set up imbalanced handling.
2024-05-27 18:26:19,818:INFO:PyCaret ClassificationExperiment
2024-05-27 18:26:19,818:INFO:Logging name: clf-default-name
2024-05-27 18:26:19,818:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-27 18:26:19,818:INFO:version 3.3.2
2024-05-27 18:26:19,818:INFO:Initializing setup()
2024-05-27 18:26:19,819:INFO:self.USI: ac56
2024-05-27 18:26:19,819:INFO:self._variable_keys: {'y', 'is_multiclass', '_ml_usecase', 'logging_param', 'fold_groups_param', 'X_train', 'USI', '_available_plots', 'X_test', 'y_train', 'seed', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'memory', 'n_jobs_param', 'exp_id', 'html_param', 'X', 'data', 'fold_generator', 'idx', 'gpu_param', 'y_test', 'fix_imbalance', 'fold_shuffle_param', 'target_param', 'pipeline'}
2024-05-27 18:26:19,819:INFO:Checking environment
2024-05-27 18:26:19,819:INFO:python_version: 3.11.5
2024-05-27 18:26:19,819:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-27 18:26:19,819:INFO:machine: AMD64
2024-05-27 18:26:19,819:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-27 18:26:19,819:INFO:Memory: svmem(total=8395403264, available=459862016, percent=94.5, used=7935541248, free=459862016)
2024-05-27 18:26:19,819:INFO:Physical Core: 4
2024-05-27 18:26:19,819:INFO:Logical Core: 8
2024-05-27 18:26:19,819:INFO:Checking libraries
2024-05-27 18:26:19,819:INFO:System:
2024-05-27 18:26:19,819:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-27 18:26:19,819:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-27 18:26:19,819:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-27 18:26:19,819:INFO:PyCaret required dependencies:
2024-05-27 18:26:19,819:INFO:                 pip: 23.2.1
2024-05-27 18:26:19,819:INFO:          setuptools: 68.0.0
2024-05-27 18:26:19,819:INFO:             pycaret: 3.3.2
2024-05-27 18:26:19,819:INFO:             IPython: 8.15.0
2024-05-27 18:26:19,819:INFO:          ipywidgets: 8.0.4
2024-05-27 18:26:19,819:INFO:                tqdm: 4.65.0
2024-05-27 18:26:19,819:INFO:               numpy: 1.24.3
2024-05-27 18:26:19,819:INFO:              pandas: 2.0.3
2024-05-27 18:26:19,819:INFO:              jinja2: 3.1.2
2024-05-27 18:26:19,819:INFO:               scipy: 1.11.1
2024-05-27 18:26:19,819:INFO:              joblib: 1.2.0
2024-05-27 18:26:19,819:INFO:             sklearn: 1.4.2
2024-05-27 18:26:19,819:INFO:                pyod: 1.1.3
2024-05-27 18:26:19,819:INFO:            imblearn: 0.12.2
2024-05-27 18:26:19,819:INFO:   category_encoders: 2.6.3
2024-05-27 18:26:19,819:INFO:            lightgbm: 4.3.0
2024-05-27 18:26:19,819:INFO:               numba: 0.57.1
2024-05-27 18:26:19,819:INFO:            requests: 2.31.0
2024-05-27 18:26:19,819:INFO:          matplotlib: 3.7.2
2024-05-27 18:26:19,819:INFO:          scikitplot: 0.3.7
2024-05-27 18:26:19,819:INFO:         yellowbrick: 1.5
2024-05-27 18:26:19,819:INFO:              plotly: 5.22.0
2024-05-27 18:26:19,819:INFO:    plotly-resampler: Not installed
2024-05-27 18:26:19,819:INFO:             kaleido: 0.2.1
2024-05-27 18:26:19,819:INFO:           schemdraw: 0.15
2024-05-27 18:26:19,819:INFO:         statsmodels: 0.14.0
2024-05-27 18:26:19,819:INFO:              sktime: 0.26.0
2024-05-27 18:26:19,819:INFO:               tbats: 1.1.3
2024-05-27 18:26:19,819:INFO:            pmdarima: 2.0.4
2024-05-27 18:26:19,819:INFO:              psutil: 5.9.0
2024-05-27 18:26:19,819:INFO:          markupsafe: 2.1.1
2024-05-27 18:26:19,819:INFO:             pickle5: Not installed
2024-05-27 18:26:19,829:INFO:         cloudpickle: 2.2.1
2024-05-27 18:26:19,829:INFO:         deprecation: 2.1.0
2024-05-27 18:26:19,829:INFO:              xxhash: 2.0.2
2024-05-27 18:26:19,829:INFO:           wurlitzer: Not installed
2024-05-27 18:26:19,829:INFO:PyCaret optional dependencies:
2024-05-27 18:26:19,830:INFO:                shap: Not installed
2024-05-27 18:26:19,830:INFO:           interpret: Not installed
2024-05-27 18:26:19,830:INFO:                umap: Not installed
2024-05-27 18:26:19,830:INFO:     ydata_profiling: Not installed
2024-05-27 18:26:19,830:INFO:  explainerdashboard: Not installed
2024-05-27 18:26:19,830:INFO:             autoviz: Not installed
2024-05-27 18:26:19,830:INFO:           fairlearn: Not installed
2024-05-27 18:26:19,830:INFO:          deepchecks: Not installed
2024-05-27 18:26:19,830:INFO:             xgboost: Not installed
2024-05-27 18:26:19,830:INFO:            catboost: Not installed
2024-05-27 18:26:19,830:INFO:              kmodes: Not installed
2024-05-27 18:26:19,830:INFO:             mlxtend: Not installed
2024-05-27 18:26:19,830:INFO:       statsforecast: Not installed
2024-05-27 18:26:19,831:INFO:        tune_sklearn: Not installed
2024-05-27 18:26:19,831:INFO:                 ray: Not installed
2024-05-27 18:26:19,831:INFO:            hyperopt: Not installed
2024-05-27 18:26:19,831:INFO:              optuna: Not installed
2024-05-27 18:26:19,831:INFO:               skopt: Not installed
2024-05-27 18:26:19,831:INFO:              mlflow: 2.13.0
2024-05-27 18:26:19,832:INFO:              gradio: Not installed
2024-05-27 18:26:19,832:INFO:             fastapi: Not installed
2024-05-27 18:26:19,832:INFO:             uvicorn: Not installed
2024-05-27 18:26:19,832:INFO:              m2cgen: Not installed
2024-05-27 18:26:19,832:INFO:           evidently: Not installed
2024-05-27 18:26:19,832:INFO:               fugue: Not installed
2024-05-27 18:26:19,832:INFO:           streamlit: Not installed
2024-05-27 18:26:19,832:INFO:             prophet: Not installed
2024-05-27 18:26:19,832:INFO:None
2024-05-27 18:26:19,832:INFO:Set up data.
2024-05-27 18:26:19,855:INFO:Set up folding strategy.
2024-05-27 18:26:19,855:INFO:Set up train/test split.
2024-05-27 18:26:19,879:INFO:Set up index.
2024-05-27 18:26:19,879:INFO:Assigning column types.
2024-05-27 18:26:19,895:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-27 18:26:19,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-27 18:26:19,965:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,058:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,060:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,107:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-27 18:26:20,196:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-27 18:26:20,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,437:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-27 18:26:20,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:20,680:INFO:Preparing preprocessing pipeline...
2024-05-27 18:26:20,682:INFO:Set up label encoding.
2024-05-27 18:26:20,682:INFO:Set up simple imputation.
2024-05-27 18:26:20,698:INFO:Set up encoding of ordinal features.
2024-05-27 18:26:20,712:INFO:Set up encoding of categorical features.
2024-05-27 18:26:20,712:INFO:Set up imbalanced handling.
2024-05-27 18:26:21,066:INFO:Finished creating preprocessing pipeline.
2024-05-27 18:26:21,126:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['moyenne_conso_agri_hab',
                                             'moyenne_conso_indus_hab',
                                             'moyenne_conso_tertiaire_hab',
                                             'moyenne_conso_resid...
                                    transformer=TargetEncoder(cols=['CSP_maire'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-05-27 18:26:21,126:INFO:Creating final display dataframe.
2024-05-27 18:26:22,217:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target  beneficiaire_trans_eco
2                   Target type                  Binary
3                Target mapping              0: 0, 1: 1
4           Original data shape              (1189, 32)
5        Transformed data shape              (1739, 41)
6   Transformed train set shape              (1382, 41)
7    Transformed test set shape               (357, 41)
8              Numeric features                      22
9          Categorical features                       6
10                   Preprocess                    True
11              Imputation type                  simple
12           Numeric imputation                    mean
13       Categorical imputation                    mode
14     Maximum one-hot encoding                      25
15              Encoding method                    None
16                Fix imbalance                    True
17         Fix imbalance method                   smote
18               Fold Generator         StratifiedKFold
19                  Fold Number                      10
20                     CPU Jobs                      -1
21                      Use GPU                   False
22               Log Experiment                   False
23              Experiment Name        clf-default-name
24                          USI                    ac56
2024-05-27 18:26:22,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:22,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:22,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:22,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-27 18:26:22,566:INFO:setup() successfully completed in 2.75s...............
2024-05-27 18:28:09,933:INFO:Initializing compare_models()
2024-05-27 18:28:09,934:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-27 18:28:09,934:INFO:Checking exceptions
2024-05-27 18:28:09,947:INFO:Preparing display monitor
2024-05-27 18:28:09,995:INFO:Initializing Logistic Regression
2024-05-27 18:28:09,995:INFO:Total runtime is 0.0 minutes
2024-05-27 18:28:10,006:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:10,006:INFO:Initializing create_model()
2024-05-27 18:28:10,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:10,006:INFO:Checking exceptions
2024-05-27 18:28:10,007:INFO:Importing libraries
2024-05-27 18:28:10,007:INFO:Copying training dataset
2024-05-27 18:28:10,022:INFO:Defining folds
2024-05-27 18:28:10,023:INFO:Declaring metric variables
2024-05-27 18:28:10,030:INFO:Importing untrained model
2024-05-27 18:28:10,036:INFO:Logistic Regression Imported successfully
2024-05-27 18:28:10,050:INFO:Starting cross validation
2024-05-27 18:28:10,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:32,857:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,939:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,947:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,987:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:32,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,035:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,047:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,071:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,071:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,099:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,116:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,140:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,152:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,165:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,756:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:33,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-27 18:28:33,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,831:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,835:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:33,857:INFO:Calculating mean and std
2024-05-27 18:28:33,860:INFO:Creating metrics dataframe
2024-05-27 18:28:33,875:INFO:Uploading results into container
2024-05-27 18:28:33,875:INFO:Uploading model into container now
2024-05-27 18:28:33,882:INFO:_master_model_container: 1
2024-05-27 18:28:33,882:INFO:_display_container: 2
2024-05-27 18:28:33,884:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-27 18:28:33,884:INFO:create_model() successfully completed......................................
2024-05-27 18:28:34,986:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:34,986:INFO:Creating metrics dataframe
2024-05-27 18:28:35,016:INFO:Initializing K Neighbors Classifier
2024-05-27 18:28:35,016:INFO:Total runtime is 0.41701706250508624 minutes
2024-05-27 18:28:35,020:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:35,020:INFO:Initializing create_model()
2024-05-27 18:28:35,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:35,020:INFO:Checking exceptions
2024-05-27 18:28:35,020:INFO:Importing libraries
2024-05-27 18:28:35,020:INFO:Copying training dataset
2024-05-27 18:28:35,052:INFO:Defining folds
2024-05-27 18:28:35,052:INFO:Declaring metric variables
2024-05-27 18:28:35,090:INFO:Importing untrained model
2024-05-27 18:28:35,107:INFO:K Neighbors Classifier Imported successfully
2024-05-27 18:28:35,134:INFO:Starting cross validation
2024-05-27 18:28:35,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:35,821:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,830:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,866:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,866:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,878:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,957:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:35,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,272:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,320:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:36,330:INFO:Calculating mean and std
2024-05-27 18:28:36,333:INFO:Creating metrics dataframe
2024-05-27 18:28:36,339:INFO:Uploading results into container
2024-05-27 18:28:36,339:INFO:Uploading model into container now
2024-05-27 18:28:36,341:INFO:_master_model_container: 2
2024-05-27 18:28:36,341:INFO:_display_container: 2
2024-05-27 18:28:36,341:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-27 18:28:36,341:INFO:create_model() successfully completed......................................
2024-05-27 18:28:36,554:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:36,554:INFO:Creating metrics dataframe
2024-05-27 18:28:36,577:INFO:Initializing Naive Bayes
2024-05-27 18:28:36,577:INFO:Total runtime is 0.44303940534591674 minutes
2024-05-27 18:28:36,584:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:36,584:INFO:Initializing create_model()
2024-05-27 18:28:36,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:36,584:INFO:Checking exceptions
2024-05-27 18:28:36,584:INFO:Importing libraries
2024-05-27 18:28:36,584:INFO:Copying training dataset
2024-05-27 18:28:36,604:INFO:Defining folds
2024-05-27 18:28:36,604:INFO:Declaring metric variables
2024-05-27 18:28:36,612:INFO:Importing untrained model
2024-05-27 18:28:36,622:INFO:Naive Bayes Imported successfully
2024-05-27 18:28:36,643:INFO:Starting cross validation
2024-05-27 18:28:36,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:37,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,215:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,227:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,272:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:37,552:INFO:Calculating mean and std
2024-05-27 18:28:37,552:INFO:Creating metrics dataframe
2024-05-27 18:28:37,560:INFO:Uploading results into container
2024-05-27 18:28:37,562:INFO:Uploading model into container now
2024-05-27 18:28:37,563:INFO:_master_model_container: 3
2024-05-27 18:28:37,563:INFO:_display_container: 2
2024-05-27 18:28:37,563:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-27 18:28:37,563:INFO:create_model() successfully completed......................................
2024-05-27 18:28:37,782:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:37,782:INFO:Creating metrics dataframe
2024-05-27 18:28:37,802:INFO:Initializing Decision Tree Classifier
2024-05-27 18:28:37,802:INFO:Total runtime is 0.46345565319061277 minutes
2024-05-27 18:28:37,815:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:37,815:INFO:Initializing create_model()
2024-05-27 18:28:37,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:37,815:INFO:Checking exceptions
2024-05-27 18:28:37,815:INFO:Importing libraries
2024-05-27 18:28:37,815:INFO:Copying training dataset
2024-05-27 18:28:37,860:INFO:Defining folds
2024-05-27 18:28:37,860:INFO:Declaring metric variables
2024-05-27 18:28:37,882:INFO:Importing untrained model
2024-05-27 18:28:37,907:INFO:Decision Tree Classifier Imported successfully
2024-05-27 18:28:37,956:INFO:Starting cross validation
2024-05-27 18:28:37,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:38,584:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,639:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,639:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,656:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,668:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,716:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,964:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:38,996:INFO:Calculating mean and std
2024-05-27 18:28:38,996:INFO:Creating metrics dataframe
2024-05-27 18:28:39,008:INFO:Uploading results into container
2024-05-27 18:28:39,008:INFO:Uploading model into container now
2024-05-27 18:28:39,008:INFO:_master_model_container: 4
2024-05-27 18:28:39,008:INFO:_display_container: 2
2024-05-27 18:28:39,008:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-27 18:28:39,008:INFO:create_model() successfully completed......................................
2024-05-27 18:28:39,366:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:39,366:INFO:Creating metrics dataframe
2024-05-27 18:28:39,382:INFO:Initializing SVM - Linear Kernel
2024-05-27 18:28:39,382:INFO:Total runtime is 0.4897916555404663 minutes
2024-05-27 18:28:39,387:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:39,388:INFO:Initializing create_model()
2024-05-27 18:28:39,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:39,389:INFO:Checking exceptions
2024-05-27 18:28:39,389:INFO:Importing libraries
2024-05-27 18:28:39,389:INFO:Copying training dataset
2024-05-27 18:28:39,412:INFO:Defining folds
2024-05-27 18:28:39,412:INFO:Declaring metric variables
2024-05-27 18:28:39,419:INFO:Importing untrained model
2024-05-27 18:28:39,427:INFO:SVM - Linear Kernel Imported successfully
2024-05-27 18:28:39,439:INFO:Starting cross validation
2024-05-27 18:28:39,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:40,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:40,054:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,054:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,054:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,066:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,066:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:40,066:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,078:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,084:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:40,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,228:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,228:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,245:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,259:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,423:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,435:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,435:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,447:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,459:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:40,459:INFO:Calculating mean and std
2024-05-27 18:28:40,459:INFO:Creating metrics dataframe
2024-05-27 18:28:40,473:INFO:Uploading results into container
2024-05-27 18:28:40,473:INFO:Uploading model into container now
2024-05-27 18:28:40,473:INFO:_master_model_container: 5
2024-05-27 18:28:40,473:INFO:_display_container: 2
2024-05-27 18:28:40,473:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-27 18:28:40,473:INFO:create_model() successfully completed......................................
2024-05-27 18:28:40,765:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:40,765:INFO:Creating metrics dataframe
2024-05-27 18:28:40,808:INFO:Initializing Ridge Classifier
2024-05-27 18:28:40,808:INFO:Total runtime is 0.5135610818862915 minutes
2024-05-27 18:28:40,821:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:40,821:INFO:Initializing create_model()
2024-05-27 18:28:40,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:40,821:INFO:Checking exceptions
2024-05-27 18:28:40,821:INFO:Importing libraries
2024-05-27 18:28:40,821:INFO:Copying training dataset
2024-05-27 18:28:40,898:INFO:Defining folds
2024-05-27 18:28:40,899:INFO:Declaring metric variables
2024-05-27 18:28:40,924:INFO:Importing untrained model
2024-05-27 18:28:40,938:INFO:Ridge Classifier Imported successfully
2024-05-27 18:28:40,957:INFO:Starting cross validation
2024-05-27 18:28:40,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:41,815:INFO:Calculating mean and std
2024-05-27 18:28:41,819:INFO:Creating metrics dataframe
2024-05-27 18:28:41,824:INFO:Uploading results into container
2024-05-27 18:28:41,825:INFO:Uploading model into container now
2024-05-27 18:28:41,825:INFO:_master_model_container: 6
2024-05-27 18:28:41,827:INFO:_display_container: 2
2024-05-27 18:28:41,828:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-27 18:28:41,828:INFO:create_model() successfully completed......................................
2024-05-27 18:28:42,089:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:42,089:INFO:Creating metrics dataframe
2024-05-27 18:28:42,120:INFO:Initializing Random Forest Classifier
2024-05-27 18:28:42,120:INFO:Total runtime is 0.5354231874148051 minutes
2024-05-27 18:28:42,131:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:42,131:INFO:Initializing create_model()
2024-05-27 18:28:42,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:42,131:INFO:Checking exceptions
2024-05-27 18:28:42,131:INFO:Importing libraries
2024-05-27 18:28:42,131:INFO:Copying training dataset
2024-05-27 18:28:42,153:INFO:Defining folds
2024-05-27 18:28:42,153:INFO:Declaring metric variables
2024-05-27 18:28:42,158:INFO:Importing untrained model
2024-05-27 18:28:42,170:INFO:Random Forest Classifier Imported successfully
2024-05-27 18:28:42,188:INFO:Starting cross validation
2024-05-27 18:28:42,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:43,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,735:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,750:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,792:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,840:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,855:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,855:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,961:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,961:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:43,971:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,462:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,473:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,480:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:44,480:INFO:Calculating mean and std
2024-05-27 18:28:44,493:INFO:Creating metrics dataframe
2024-05-27 18:28:44,494:INFO:Uploading results into container
2024-05-27 18:28:44,494:INFO:Uploading model into container now
2024-05-27 18:28:44,494:INFO:_master_model_container: 7
2024-05-27 18:28:44,494:INFO:_display_container: 2
2024-05-27 18:28:44,494:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-27 18:28:44,494:INFO:create_model() successfully completed......................................
2024-05-27 18:28:44,798:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:44,798:INFO:Creating metrics dataframe
2024-05-27 18:28:44,821:INFO:Initializing Quadratic Discriminant Analysis
2024-05-27 18:28:44,821:INFO:Total runtime is 0.5804411331812541 minutes
2024-05-27 18:28:44,836:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:44,840:INFO:Initializing create_model()
2024-05-27 18:28:44,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:44,840:INFO:Checking exceptions
2024-05-27 18:28:44,840:INFO:Importing libraries
2024-05-27 18:28:44,840:INFO:Copying training dataset
2024-05-27 18:28:44,860:INFO:Defining folds
2024-05-27 18:28:44,860:INFO:Declaring metric variables
2024-05-27 18:28:44,869:INFO:Importing untrained model
2024-05-27 18:28:44,876:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-27 18:28:44,886:INFO:Starting cross validation
2024-05-27 18:28:44,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:45,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,351:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,506:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-27 18:28:45,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:28:45,775:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:45,789:INFO:Calculating mean and std
2024-05-27 18:28:45,789:INFO:Creating metrics dataframe
2024-05-27 18:28:45,794:INFO:Uploading results into container
2024-05-27 18:28:45,794:INFO:Uploading model into container now
2024-05-27 18:28:45,797:INFO:_master_model_container: 8
2024-05-27 18:28:45,797:INFO:_display_container: 2
2024-05-27 18:28:45,799:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-27 18:28:45,799:INFO:create_model() successfully completed......................................
2024-05-27 18:28:46,090:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:46,090:INFO:Creating metrics dataframe
2024-05-27 18:28:46,112:INFO:Initializing Ada Boost Classifier
2024-05-27 18:28:46,112:INFO:Total runtime is 0.6019523739814758 minutes
2024-05-27 18:28:46,119:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:46,119:INFO:Initializing create_model()
2024-05-27 18:28:46,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:46,119:INFO:Checking exceptions
2024-05-27 18:28:46,119:INFO:Importing libraries
2024-05-27 18:28:46,119:INFO:Copying training dataset
2024-05-27 18:28:46,143:INFO:Defining folds
2024-05-27 18:28:46,143:INFO:Declaring metric variables
2024-05-27 18:28:46,156:INFO:Importing untrained model
2024-05-27 18:28:46,163:INFO:Ada Boost Classifier Imported successfully
2024-05-27 18:28:46,186:INFO:Starting cross validation
2024-05-27 18:28:46,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:46,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,626:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,626:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,737:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:46,803:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:47,631:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,636:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,637:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,637:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,646:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,646:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,687:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,687:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,720:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,764:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,770:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,779:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,870:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,870:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,881:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,896:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,904:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:47,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-27 18:28:48,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,697:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,706:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:48,724:INFO:Calculating mean and std
2024-05-27 18:28:48,724:INFO:Creating metrics dataframe
2024-05-27 18:28:48,729:INFO:Uploading results into container
2024-05-27 18:28:48,730:INFO:Uploading model into container now
2024-05-27 18:28:48,733:INFO:_master_model_container: 9
2024-05-27 18:28:48,733:INFO:_display_container: 2
2024-05-27 18:28:48,733:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-27 18:28:48,733:INFO:create_model() successfully completed......................................
2024-05-27 18:28:48,981:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:48,981:INFO:Creating metrics dataframe
2024-05-27 18:28:49,003:INFO:Initializing Gradient Boosting Classifier
2024-05-27 18:28:49,007:INFO:Total runtime is 0.6501985788345337 minutes
2024-05-27 18:28:49,015:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:49,015:INFO:Initializing create_model()
2024-05-27 18:28:49,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:49,017:INFO:Checking exceptions
2024-05-27 18:28:49,017:INFO:Importing libraries
2024-05-27 18:28:49,017:INFO:Copying training dataset
2024-05-27 18:28:49,044:INFO:Defining folds
2024-05-27 18:28:49,044:INFO:Declaring metric variables
2024-05-27 18:28:49,054:INFO:Importing untrained model
2024-05-27 18:28:49,073:INFO:Gradient Boosting Classifier Imported successfully
2024-05-27 18:28:49,090:INFO:Starting cross validation
2024-05-27 18:28:49,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:53,133:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,133:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,226:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,576:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,614:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,676:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:53,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,225:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,239:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:56,334:INFO:Calculating mean and std
2024-05-27 18:28:56,337:INFO:Creating metrics dataframe
2024-05-27 18:28:56,342:INFO:Uploading results into container
2024-05-27 18:28:56,347:INFO:Uploading model into container now
2024-05-27 18:28:56,347:INFO:_master_model_container: 10
2024-05-27 18:28:56,347:INFO:_display_container: 2
2024-05-27 18:28:56,347:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-27 18:28:56,347:INFO:create_model() successfully completed......................................
2024-05-27 18:28:56,688:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:56,688:INFO:Creating metrics dataframe
2024-05-27 18:28:56,736:INFO:Initializing Linear Discriminant Analysis
2024-05-27 18:28:56,739:INFO:Total runtime is 0.7790737152099609 minutes
2024-05-27 18:28:56,744:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:56,752:INFO:Initializing create_model()
2024-05-27 18:28:56,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:56,752:INFO:Checking exceptions
2024-05-27 18:28:56,752:INFO:Importing libraries
2024-05-27 18:28:56,752:INFO:Copying training dataset
2024-05-27 18:28:56,794:INFO:Defining folds
2024-05-27 18:28:56,794:INFO:Declaring metric variables
2024-05-27 18:28:56,805:INFO:Importing untrained model
2024-05-27 18:28:56,817:INFO:Linear Discriminant Analysis Imported successfully
2024-05-27 18:28:56,849:INFO:Starting cross validation
2024-05-27 18:28:56,857:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:57,595:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,694:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:57,739:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,021:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,021:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,033:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,073:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:58,093:INFO:Calculating mean and std
2024-05-27 18:28:58,093:INFO:Creating metrics dataframe
2024-05-27 18:28:58,099:INFO:Uploading results into container
2024-05-27 18:28:58,100:INFO:Uploading model into container now
2024-05-27 18:28:58,100:INFO:_master_model_container: 11
2024-05-27 18:28:58,100:INFO:_display_container: 2
2024-05-27 18:28:58,100:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-27 18:28:58,100:INFO:create_model() successfully completed......................................
2024-05-27 18:28:58,334:INFO:SubProcess create_model() end ==================================
2024-05-27 18:28:58,334:INFO:Creating metrics dataframe
2024-05-27 18:28:58,361:INFO:Initializing Extra Trees Classifier
2024-05-27 18:28:58,361:INFO:Total runtime is 0.8061120748519898 minutes
2024-05-27 18:28:58,370:INFO:SubProcess create_model() called ==================================
2024-05-27 18:28:58,373:INFO:Initializing create_model()
2024-05-27 18:28:58,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:28:58,373:INFO:Checking exceptions
2024-05-27 18:28:58,373:INFO:Importing libraries
2024-05-27 18:28:58,373:INFO:Copying training dataset
2024-05-27 18:28:58,395:INFO:Defining folds
2024-05-27 18:28:58,395:INFO:Declaring metric variables
2024-05-27 18:28:58,405:INFO:Importing untrained model
2024-05-27 18:28:58,410:INFO:Extra Trees Classifier Imported successfully
2024-05-27 18:28:58,432:INFO:Starting cross validation
2024-05-27 18:28:58,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:28:59,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,713:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,773:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,773:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,881:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,960:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,962:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:28:59,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,482:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,497:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,512:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,512:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:00,526:INFO:Calculating mean and std
2024-05-27 18:29:00,526:INFO:Creating metrics dataframe
2024-05-27 18:29:00,526:INFO:Uploading results into container
2024-05-27 18:29:00,526:INFO:Uploading model into container now
2024-05-27 18:29:00,526:INFO:_master_model_container: 12
2024-05-27 18:29:00,526:INFO:_display_container: 2
2024-05-27 18:29:00,526:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-27 18:29:00,526:INFO:create_model() successfully completed......................................
2024-05-27 18:29:00,888:INFO:SubProcess create_model() end ==================================
2024-05-27 18:29:00,888:INFO:Creating metrics dataframe
2024-05-27 18:29:00,917:INFO:Initializing Light Gradient Boosting Machine
2024-05-27 18:29:00,917:INFO:Total runtime is 0.8487030227979024 minutes
2024-05-27 18:29:00,927:INFO:SubProcess create_model() called ==================================
2024-05-27 18:29:00,927:INFO:Initializing create_model()
2024-05-27 18:29:00,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:29:00,927:INFO:Checking exceptions
2024-05-27 18:29:00,928:INFO:Importing libraries
2024-05-27 18:29:00,929:INFO:Copying training dataset
2024-05-27 18:29:00,943:INFO:Defining folds
2024-05-27 18:29:00,943:INFO:Declaring metric variables
2024-05-27 18:29:00,956:INFO:Importing untrained model
2024-05-27 18:29:00,967:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-27 18:29:00,986:INFO:Starting cross validation
2024-05-27 18:29:00,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:29:03,003:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,036:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,036:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,352:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,376:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,412:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,428:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,529:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,529:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,529:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,576:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:03,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,046:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,118:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,118:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:04,130:INFO:Calculating mean and std
2024-05-27 18:29:04,142:INFO:Creating metrics dataframe
2024-05-27 18:29:04,144:INFO:Uploading results into container
2024-05-27 18:29:04,144:INFO:Uploading model into container now
2024-05-27 18:29:04,144:INFO:_master_model_container: 13
2024-05-27 18:29:04,144:INFO:_display_container: 2
2024-05-27 18:29:04,144:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-27 18:29:04,144:INFO:create_model() successfully completed......................................
2024-05-27 18:29:04,367:INFO:SubProcess create_model() end ==================================
2024-05-27 18:29:04,367:INFO:Creating metrics dataframe
2024-05-27 18:29:04,400:INFO:Initializing Dummy Classifier
2024-05-27 18:29:04,400:INFO:Total runtime is 0.9067627906799317 minutes
2024-05-27 18:29:04,400:INFO:SubProcess create_model() called ==================================
2024-05-27 18:29:04,413:INFO:Initializing create_model()
2024-05-27 18:29:04,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000231FC84AED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:29:04,414:INFO:Checking exceptions
2024-05-27 18:29:04,414:INFO:Importing libraries
2024-05-27 18:29:04,414:INFO:Copying training dataset
2024-05-27 18:29:04,437:INFO:Defining folds
2024-05-27 18:29:04,437:INFO:Declaring metric variables
2024-05-27 18:29:04,446:INFO:Importing untrained model
2024-05-27 18:29:04,455:INFO:Dummy Classifier Imported successfully
2024-05-27 18:29:04,472:INFO:Starting cross validation
2024-05-27 18:29:04,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-27 18:29:05,008:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,057:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,057:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,061:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,061:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,294:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-27 18:29:05,311:INFO:Calculating mean and std
2024-05-27 18:29:05,311:INFO:Creating metrics dataframe
2024-05-27 18:29:05,316:INFO:Uploading results into container
2024-05-27 18:29:05,316:INFO:Uploading model into container now
2024-05-27 18:29:05,317:INFO:_master_model_container: 14
2024-05-27 18:29:05,317:INFO:_display_container: 2
2024-05-27 18:29:05,317:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-27 18:29:05,317:INFO:create_model() successfully completed......................................
2024-05-27 18:29:05,532:INFO:SubProcess create_model() end ==================================
2024-05-27 18:29:05,532:INFO:Creating metrics dataframe
2024-05-27 18:29:05,620:INFO:Initializing create_model()
2024-05-27 18:29:05,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000231F8FF2490>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-27 18:29:05,620:INFO:Checking exceptions
2024-05-27 18:29:05,628:INFO:Importing libraries
2024-05-27 18:29:05,636:INFO:Copying training dataset
2024-05-27 18:29:05,661:INFO:Defining folds
2024-05-27 18:29:05,661:INFO:Declaring metric variables
2024-05-27 18:29:05,661:INFO:Importing untrained model
2024-05-27 18:29:05,661:INFO:Declaring custom model
2024-05-27 18:29:05,661:INFO:Dummy Classifier Imported successfully
2024-05-27 18:29:05,669:INFO:Cross validation set to False
2024-05-27 18:29:05,669:INFO:Fitting Model
2024-05-27 18:29:06,169:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-27 18:29:06,169:INFO:create_model() successfully completed......................................
2024-05-27 18:29:06,493:INFO:_master_model_container: 14
2024-05-27 18:29:06,493:INFO:_display_container: 2
2024-05-27 18:29:06,493:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-27 18:29:06,493:INFO:compare_models() successfully completed......................................
2024-05-31 14:26:02,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-31 14:26:02,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-31 14:26:02,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-31 14:26:02,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-31 14:26:22,281:INFO:PyCaret ClassificationExperiment
2024-05-31 14:26:22,281:INFO:Logging name: clf-default-name
2024-05-31 14:26:22,281:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-31 14:26:22,281:INFO:version 3.3.2
2024-05-31 14:26:22,281:INFO:Initializing setup()
2024-05-31 14:26:22,281:INFO:self.USI: c942
2024-05-31 14:26:22,296:INFO:self._variable_keys: {'idx', '_ml_usecase', 'gpu_n_jobs_param', 'y_test', 'fix_imbalance', 'data', 'target_param', 'fold_shuffle_param', 'X', 'log_plots_param', 'html_param', 'fold_generator', 'USI', 'seed', 'exp_name_log', 'pipeline', 'y', 'X_test', 'is_multiclass', '_available_plots', 'gpu_param', 'logging_param', 'fold_groups_param', 'memory', 'X_train', 'n_jobs_param', 'exp_id', 'y_train'}
2024-05-31 14:26:22,296:INFO:Checking environment
2024-05-31 14:26:22,296:INFO:python_version: 3.11.5
2024-05-31 14:26:22,296:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-31 14:26:22,296:INFO:machine: AMD64
2024-05-31 14:26:22,296:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-31 14:26:22,300:INFO:Memory: svmem(total=8395403264, available=588599296, percent=93.0, used=7806803968, free=588599296)
2024-05-31 14:26:22,300:INFO:Physical Core: 4
2024-05-31 14:26:22,300:INFO:Logical Core: 8
2024-05-31 14:26:22,300:INFO:Checking libraries
2024-05-31 14:26:22,300:INFO:System:
2024-05-31 14:26:22,300:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-31 14:26:22,300:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-05-31 14:26:22,300:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-31 14:26:22,300:INFO:PyCaret required dependencies:
2024-05-31 14:26:26,107:INFO:                 pip: 23.2.1
2024-05-31 14:26:26,109:INFO:          setuptools: 68.0.0
2024-05-31 14:26:26,109:INFO:             pycaret: 3.3.2
2024-05-31 14:26:26,109:INFO:             IPython: 8.15.0
2024-05-31 14:26:26,109:INFO:          ipywidgets: 8.0.4
2024-05-31 14:26:26,109:INFO:                tqdm: 4.65.0
2024-05-31 14:26:26,109:INFO:               numpy: 1.24.3
2024-05-31 14:26:26,109:INFO:              pandas: 2.0.3
2024-05-31 14:26:26,109:INFO:              jinja2: 3.1.2
2024-05-31 14:26:26,109:INFO:               scipy: 1.11.1
2024-05-31 14:26:26,109:INFO:              joblib: 1.2.0
2024-05-31 14:26:26,109:INFO:             sklearn: 1.4.2
2024-05-31 14:26:26,109:INFO:                pyod: 1.1.3
2024-05-31 14:26:26,109:INFO:            imblearn: 0.12.2
2024-05-31 14:26:26,109:INFO:   category_encoders: 2.6.3
2024-05-31 14:26:26,109:INFO:            lightgbm: 4.3.0
2024-05-31 14:26:26,109:INFO:               numba: 0.57.1
2024-05-31 14:26:26,109:INFO:            requests: 2.31.0
2024-05-31 14:26:26,109:INFO:          matplotlib: 3.7.2
2024-05-31 14:26:26,109:INFO:          scikitplot: 0.3.7
2024-05-31 14:26:26,109:INFO:         yellowbrick: 1.5
2024-05-31 14:26:26,109:INFO:              plotly: 5.22.0
2024-05-31 14:26:26,109:INFO:    plotly-resampler: Not installed
2024-05-31 14:26:26,109:INFO:             kaleido: 0.2.1
2024-05-31 14:26:26,109:INFO:           schemdraw: 0.15
2024-05-31 14:26:26,109:INFO:         statsmodels: 0.14.0
2024-05-31 14:26:26,109:INFO:              sktime: 0.26.0
2024-05-31 14:26:26,109:INFO:               tbats: 1.1.3
2024-05-31 14:26:26,109:INFO:            pmdarima: 2.0.4
2024-05-31 14:26:26,109:INFO:              psutil: 5.9.0
2024-05-31 14:26:26,109:INFO:          markupsafe: 2.1.1
2024-05-31 14:26:26,109:INFO:             pickle5: Not installed
2024-05-31 14:26:26,109:INFO:         cloudpickle: 2.2.1
2024-05-31 14:26:26,109:INFO:         deprecation: 2.1.0
2024-05-31 14:26:26,109:INFO:              xxhash: 2.0.2
2024-05-31 14:26:26,109:INFO:           wurlitzer: Not installed
2024-05-31 14:26:26,109:INFO:PyCaret optional dependencies:
2024-05-31 14:26:26,169:INFO:                shap: Not installed
2024-05-31 14:26:26,169:INFO:           interpret: Not installed
2024-05-31 14:26:26,169:INFO:                umap: Not installed
2024-05-31 14:26:26,169:INFO:     ydata_profiling: Not installed
2024-05-31 14:26:26,169:INFO:  explainerdashboard: Not installed
2024-05-31 14:26:26,169:INFO:             autoviz: Not installed
2024-05-31 14:26:26,169:INFO:           fairlearn: Not installed
2024-05-31 14:26:26,169:INFO:          deepchecks: Not installed
2024-05-31 14:26:26,169:INFO:             xgboost: Not installed
2024-05-31 14:26:26,169:INFO:            catboost: Not installed
2024-05-31 14:26:26,169:INFO:              kmodes: Not installed
2024-05-31 14:26:26,169:INFO:             mlxtend: Not installed
2024-05-31 14:26:26,169:INFO:       statsforecast: Not installed
2024-05-31 14:26:26,169:INFO:        tune_sklearn: Not installed
2024-05-31 14:26:26,169:INFO:                 ray: Not installed
2024-05-31 14:26:26,169:INFO:            hyperopt: Not installed
2024-05-31 14:26:26,169:INFO:              optuna: Not installed
2024-05-31 14:26:26,169:INFO:               skopt: Not installed
2024-05-31 14:26:26,169:INFO:              mlflow: 2.13.0
2024-05-31 14:26:26,169:INFO:              gradio: Not installed
2024-05-31 14:26:26,169:INFO:             fastapi: Not installed
2024-05-31 14:26:26,169:INFO:             uvicorn: Not installed
2024-05-31 14:26:26,169:INFO:              m2cgen: Not installed
2024-05-31 14:26:26,169:INFO:           evidently: Not installed
2024-05-31 14:26:26,169:INFO:               fugue: Not installed
2024-05-31 14:26:26,169:INFO:           streamlit: Not installed
2024-05-31 14:26:26,169:INFO:             prophet: Not installed
2024-05-31 14:26:26,169:INFO:None
2024-05-31 14:26:26,169:INFO:Set up data.
2024-05-31 14:26:26,186:INFO:Set up folding strategy.
2024-05-31 14:26:26,186:INFO:Set up train/test split.
2024-05-31 14:26:26,219:INFO:Set up index.
2024-05-31 14:26:26,219:INFO:Assigning column types.
2024-05-31 14:26:26,232:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-31 14:26:26,327:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,515:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,594:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-31 14:26:26,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,860:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-31 14:26:26,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:26,941:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-31 14:26:27,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:27,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:27,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:27,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:27,270:INFO:Preparing preprocessing pipeline...
2024-05-31 14:26:27,270:INFO:Set up label encoding.
2024-05-31 14:26:27,270:INFO:Set up simple imputation.
2024-05-31 14:26:27,286:INFO:Set up encoding of ordinal features.
2024-05-31 14:26:27,288:INFO:Set up encoding of categorical features.
2024-05-31 14:26:27,288:INFO:Set up imbalanced handling.
2024-05-31 14:26:27,651:INFO:Finished creating preprocessing pipeline.
2024-05-31 14:26:27,696:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['moyenne_conso_agri_hab',
                                             'moyenne_conso_indus_hab',
                                             'moyenne_conso_tertiaire_hab',
                                             'moyenne_conso_resid...
                                    transformer=TargetEncoder(cols=['CSP_maire'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-05-31 14:26:27,696:INFO:Creating final display dataframe.
2024-05-31 14:26:28,158:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target  beneficiaire_trans_eco
2                   Target type                  Binary
3                Target mapping              0: 0, 1: 1
4           Original data shape              (1189, 32)
5        Transformed data shape              (1739, 41)
6   Transformed train set shape              (1382, 41)
7    Transformed test set shape               (357, 41)
8              Numeric features                      22
9          Categorical features                       6
10                   Preprocess                    True
11              Imputation type                  simple
12           Numeric imputation                    mean
13       Categorical imputation                    mode
14     Maximum one-hot encoding                      25
15              Encoding method                    None
16                Fix imbalance                    True
17         Fix imbalance method                   smote
18               Fold Generator         StratifiedKFold
19                  Fold Number                      10
20                     CPU Jobs                      -1
21                      Use GPU                   False
22               Log Experiment                   False
23              Experiment Name        clf-default-name
24                          USI                    c942
2024-05-31 14:26:28,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:28,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:28,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:28,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-31 14:26:28,495:INFO:setup() successfully completed in 6.21s...............
2024-05-31 14:26:28,502:INFO:Initializing compare_models()
2024-05-31 14:26:28,502:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-31 14:26:28,502:INFO:Checking exceptions
2024-05-31 14:26:28,522:INFO:Preparing display monitor
2024-05-31 14:26:28,598:INFO:Initializing Logistic Regression
2024-05-31 14:26:28,598:INFO:Total runtime is 0.0 minutes
2024-05-31 14:26:28,611:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:28,612:INFO:Initializing create_model()
2024-05-31 14:26:28,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:28,612:INFO:Checking exceptions
2024-05-31 14:26:28,612:INFO:Importing libraries
2024-05-31 14:26:28,612:INFO:Copying training dataset
2024-05-31 14:26:28,644:INFO:Defining folds
2024-05-31 14:26:28,644:INFO:Declaring metric variables
2024-05-31 14:26:28,663:INFO:Importing untrained model
2024-05-31 14:26:28,675:INFO:Logistic Regression Imported successfully
2024-05-31 14:26:28,691:INFO:Starting cross validation
2024-05-31 14:26:28,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:44,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,474:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,479:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,496:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,517:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,601:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,621:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,629:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,629:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:44,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,648:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,656:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,668:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,694:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,711:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,727:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,759:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,774:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,822:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,891:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,900:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:44,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:45,755:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 14:26:45,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:45,929:INFO:Calculating mean and std
2024-05-31 14:26:45,931:INFO:Creating metrics dataframe
2024-05-31 14:26:45,934:INFO:Uploading results into container
2024-05-31 14:26:45,934:INFO:Uploading model into container now
2024-05-31 14:26:45,934:INFO:_master_model_container: 1
2024-05-31 14:26:45,934:INFO:_display_container: 2
2024-05-31 14:26:45,934:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-31 14:26:45,934:INFO:create_model() successfully completed......................................
2024-05-31 14:26:46,114:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:46,114:INFO:Creating metrics dataframe
2024-05-31 14:26:46,135:INFO:Initializing K Neighbors Classifier
2024-05-31 14:26:46,135:INFO:Total runtime is 0.29228389263153076 minutes
2024-05-31 14:26:46,135:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:46,135:INFO:Initializing create_model()
2024-05-31 14:26:46,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:46,135:INFO:Checking exceptions
2024-05-31 14:26:46,135:INFO:Importing libraries
2024-05-31 14:26:46,135:INFO:Copying training dataset
2024-05-31 14:26:46,182:INFO:Defining folds
2024-05-31 14:26:46,182:INFO:Declaring metric variables
2024-05-31 14:26:46,182:INFO:Importing untrained model
2024-05-31 14:26:46,198:INFO:K Neighbors Classifier Imported successfully
2024-05-31 14:26:46,214:INFO:Starting cross validation
2024-05-31 14:26:46,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:47,043:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,067:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,067:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,102:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,120:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,132:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,132:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:47,480:INFO:Calculating mean and std
2024-05-31 14:26:47,480:INFO:Creating metrics dataframe
2024-05-31 14:26:47,492:INFO:Uploading results into container
2024-05-31 14:26:47,492:INFO:Uploading model into container now
2024-05-31 14:26:47,492:INFO:_master_model_container: 2
2024-05-31 14:26:47,492:INFO:_display_container: 2
2024-05-31 14:26:47,492:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-31 14:26:47,492:INFO:create_model() successfully completed......................................
2024-05-31 14:26:47,650:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:47,650:INFO:Creating metrics dataframe
2024-05-31 14:26:47,683:INFO:Initializing Naive Bayes
2024-05-31 14:26:47,683:INFO:Total runtime is 0.31809472242991127 minutes
2024-05-31 14:26:47,690:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:47,690:INFO:Initializing create_model()
2024-05-31 14:26:47,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:47,698:INFO:Checking exceptions
2024-05-31 14:26:47,698:INFO:Importing libraries
2024-05-31 14:26:47,698:INFO:Copying training dataset
2024-05-31 14:26:47,729:INFO:Defining folds
2024-05-31 14:26:47,729:INFO:Declaring metric variables
2024-05-31 14:26:47,738:INFO:Importing untrained model
2024-05-31 14:26:47,752:INFO:Naive Bayes Imported successfully
2024-05-31 14:26:47,764:INFO:Starting cross validation
2024-05-31 14:26:47,778:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:48,330:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,334:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,334:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,362:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,362:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,362:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,362:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,378:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,415:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,425:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,445:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,445:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,472:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,475:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,900:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,934:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,934:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:48,963:INFO:Calculating mean and std
2024-05-31 14:26:48,963:INFO:Creating metrics dataframe
2024-05-31 14:26:48,963:INFO:Uploading results into container
2024-05-31 14:26:48,963:INFO:Uploading model into container now
2024-05-31 14:26:48,979:INFO:_master_model_container: 3
2024-05-31 14:26:48,979:INFO:_display_container: 2
2024-05-31 14:26:48,979:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-31 14:26:48,979:INFO:create_model() successfully completed......................................
2024-05-31 14:26:49,143:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:49,143:INFO:Creating metrics dataframe
2024-05-31 14:26:49,169:INFO:Initializing Decision Tree Classifier
2024-05-31 14:26:49,169:INFO:Total runtime is 0.3428561766942342 minutes
2024-05-31 14:26:49,169:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:49,169:INFO:Initializing create_model()
2024-05-31 14:26:49,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:49,169:INFO:Checking exceptions
2024-05-31 14:26:49,169:INFO:Importing libraries
2024-05-31 14:26:49,169:INFO:Copying training dataset
2024-05-31 14:26:49,200:INFO:Defining folds
2024-05-31 14:26:49,200:INFO:Declaring metric variables
2024-05-31 14:26:49,200:INFO:Importing untrained model
2024-05-31 14:26:49,216:INFO:Decision Tree Classifier Imported successfully
2024-05-31 14:26:49,235:INFO:Starting cross validation
2024-05-31 14:26:49,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:49,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:49,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,006:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,036:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,038:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,038:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,069:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,527:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:50,572:INFO:Calculating mean and std
2024-05-31 14:26:50,572:INFO:Creating metrics dataframe
2024-05-31 14:26:50,587:INFO:Uploading results into container
2024-05-31 14:26:50,587:INFO:Uploading model into container now
2024-05-31 14:26:50,587:INFO:_master_model_container: 4
2024-05-31 14:26:50,587:INFO:_display_container: 2
2024-05-31 14:26:50,587:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 14:26:50,587:INFO:create_model() successfully completed......................................
2024-05-31 14:26:50,752:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:50,753:INFO:Creating metrics dataframe
2024-05-31 14:26:50,761:INFO:Initializing SVM - Linear Kernel
2024-05-31 14:26:50,761:INFO:Total runtime is 0.36938510735829666 minutes
2024-05-31 14:26:50,776:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:50,776:INFO:Initializing create_model()
2024-05-31 14:26:50,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:50,776:INFO:Checking exceptions
2024-05-31 14:26:50,776:INFO:Importing libraries
2024-05-31 14:26:50,776:INFO:Copying training dataset
2024-05-31 14:26:50,808:INFO:Defining folds
2024-05-31 14:26:50,808:INFO:Declaring metric variables
2024-05-31 14:26:50,808:INFO:Importing untrained model
2024-05-31 14:26:50,823:INFO:SVM - Linear Kernel Imported successfully
2024-05-31 14:26:50,839:INFO:Starting cross validation
2024-05-31 14:26:50,855:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:51,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:26:51,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,603:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,603:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,612:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,612:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:26:51,612:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,631:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:51,663:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,219:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,219:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:52,240:INFO:Calculating mean and std
2024-05-31 14:26:52,240:INFO:Creating metrics dataframe
2024-05-31 14:26:52,251:INFO:Uploading results into container
2024-05-31 14:26:52,251:INFO:Uploading model into container now
2024-05-31 14:26:52,251:INFO:_master_model_container: 5
2024-05-31 14:26:52,251:INFO:_display_container: 2
2024-05-31 14:26:52,251:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-31 14:26:52,251:INFO:create_model() successfully completed......................................
2024-05-31 14:26:52,408:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:52,408:INFO:Creating metrics dataframe
2024-05-31 14:26:52,423:INFO:Initializing Ridge Classifier
2024-05-31 14:26:52,423:INFO:Total runtime is 0.397092056274414 minutes
2024-05-31 14:26:52,423:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:52,423:INFO:Initializing create_model()
2024-05-31 14:26:52,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:52,423:INFO:Checking exceptions
2024-05-31 14:26:52,423:INFO:Importing libraries
2024-05-31 14:26:52,439:INFO:Copying training dataset
2024-05-31 14:26:52,455:INFO:Defining folds
2024-05-31 14:26:52,455:INFO:Declaring metric variables
2024-05-31 14:26:52,471:INFO:Importing untrained model
2024-05-31 14:26:52,471:INFO:Ridge Classifier Imported successfully
2024-05-31 14:26:52,486:INFO:Starting cross validation
2024-05-31 14:26:52,502:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:26:55,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:55,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,000:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,000:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,503:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:56,503:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,285:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,312:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:26:58,352:INFO:Calculating mean and std
2024-05-31 14:26:58,355:INFO:Creating metrics dataframe
2024-05-31 14:26:58,359:INFO:Uploading results into container
2024-05-31 14:26:58,361:INFO:Uploading model into container now
2024-05-31 14:26:58,361:INFO:_master_model_container: 6
2024-05-31 14:26:58,361:INFO:_display_container: 2
2024-05-31 14:26:58,361:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-31 14:26:58,361:INFO:create_model() successfully completed......................................
2024-05-31 14:26:58,522:INFO:SubProcess create_model() end ==================================
2024-05-31 14:26:58,522:INFO:Creating metrics dataframe
2024-05-31 14:26:58,550:INFO:Initializing Random Forest Classifier
2024-05-31 14:26:58,550:INFO:Total runtime is 0.49920922120412187 minutes
2024-05-31 14:26:58,554:INFO:SubProcess create_model() called ==================================
2024-05-31 14:26:58,554:INFO:Initializing create_model()
2024-05-31 14:26:58,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:26:58,554:INFO:Checking exceptions
2024-05-31 14:26:58,554:INFO:Importing libraries
2024-05-31 14:26:58,554:INFO:Copying training dataset
2024-05-31 14:26:58,585:INFO:Defining folds
2024-05-31 14:26:58,585:INFO:Declaring metric variables
2024-05-31 14:26:58,607:INFO:Importing untrained model
2024-05-31 14:26:58,618:INFO:Random Forest Classifier Imported successfully
2024-05-31 14:26:58,633:INFO:Starting cross validation
2024-05-31 14:26:58,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:01,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,368:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,536:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,541:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,546:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,549:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,554:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,554:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:01,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,519:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:02,555:INFO:Calculating mean and std
2024-05-31 14:27:02,555:INFO:Creating metrics dataframe
2024-05-31 14:27:02,562:INFO:Uploading results into container
2024-05-31 14:27:02,562:INFO:Uploading model into container now
2024-05-31 14:27:02,562:INFO:_master_model_container: 7
2024-05-31 14:27:02,562:INFO:_display_container: 2
2024-05-31 14:27:02,562:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:27:02,562:INFO:create_model() successfully completed......................................
2024-05-31 14:27:02,728:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:02,728:INFO:Creating metrics dataframe
2024-05-31 14:27:02,738:INFO:Initializing Quadratic Discriminant Analysis
2024-05-31 14:27:02,738:INFO:Total runtime is 0.5690000573794046 minutes
2024-05-31 14:27:02,757:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:02,757:INFO:Initializing create_model()
2024-05-31 14:27:02,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:02,757:INFO:Checking exceptions
2024-05-31 14:27:02,757:INFO:Importing libraries
2024-05-31 14:27:02,757:INFO:Copying training dataset
2024-05-31 14:27:02,785:INFO:Defining folds
2024-05-31 14:27:02,785:INFO:Declaring metric variables
2024-05-31 14:27:02,785:INFO:Importing untrained model
2024-05-31 14:27:02,801:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-31 14:27:02,817:INFO:Starting cross validation
2024-05-31 14:27:02,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:03,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,472:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,480:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,496:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,607:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:03,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,695:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,695:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:03,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,746:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,755:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:03,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:03,981:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 14:27:04,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:04,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:04,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:04,115:INFO:Calculating mean and std
2024-05-31 14:27:04,115:INFO:Creating metrics dataframe
2024-05-31 14:27:04,115:INFO:Uploading results into container
2024-05-31 14:27:04,115:INFO:Uploading model into container now
2024-05-31 14:27:04,115:INFO:_master_model_container: 8
2024-05-31 14:27:04,115:INFO:_display_container: 2
2024-05-31 14:27:04,115:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-31 14:27:04,115:INFO:create_model() successfully completed......................................
2024-05-31 14:27:04,286:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:04,286:INFO:Creating metrics dataframe
2024-05-31 14:27:04,303:INFO:Initializing Ada Boost Classifier
2024-05-31 14:27:04,303:INFO:Total runtime is 0.5950902620951334 minutes
2024-05-31 14:27:04,303:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:04,303:INFO:Initializing create_model()
2024-05-31 14:27:04,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:04,303:INFO:Checking exceptions
2024-05-31 14:27:04,303:INFO:Importing libraries
2024-05-31 14:27:04,303:INFO:Copying training dataset
2024-05-31 14:27:04,350:INFO:Defining folds
2024-05-31 14:27:04,350:INFO:Declaring metric variables
2024-05-31 14:27:04,360:INFO:Importing untrained model
2024-05-31 14:27:04,366:INFO:Ada Boost Classifier Imported successfully
2024-05-31 14:27:04,382:INFO:Starting cross validation
2024-05-31 14:27:04,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:04,904:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:04,966:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:04,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:04,998:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:05,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:05,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:05,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:05,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:06,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,095:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,103:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,103:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,120:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,202:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,202:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,218:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,248:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,266:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,268:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,274:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,277:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,314:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,314:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:06,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:06,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:27:07,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,462:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,538:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:07,554:INFO:Calculating mean and std
2024-05-31 14:27:07,562:INFO:Creating metrics dataframe
2024-05-31 14:27:07,570:INFO:Uploading results into container
2024-05-31 14:27:07,570:INFO:Uploading model into container now
2024-05-31 14:27:07,570:INFO:_master_model_container: 9
2024-05-31 14:27:07,570:INFO:_display_container: 2
2024-05-31 14:27:07,570:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 14:27:07,570:INFO:create_model() successfully completed......................................
2024-05-31 14:27:07,762:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:07,762:INFO:Creating metrics dataframe
2024-05-31 14:27:07,790:INFO:Initializing Gradient Boosting Classifier
2024-05-31 14:27:07,790:INFO:Total runtime is 0.6532055179278055 minutes
2024-05-31 14:27:07,806:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:07,806:INFO:Initializing create_model()
2024-05-31 14:27:07,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:07,806:INFO:Checking exceptions
2024-05-31 14:27:07,806:INFO:Importing libraries
2024-05-31 14:27:07,806:INFO:Copying training dataset
2024-05-31 14:27:07,837:INFO:Defining folds
2024-05-31 14:27:07,837:INFO:Declaring metric variables
2024-05-31 14:27:07,853:INFO:Importing untrained model
2024-05-31 14:27:07,856:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 14:27:07,869:INFO:Starting cross validation
2024-05-31 14:27:07,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:12,089:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,143:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,267:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,316:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,332:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:12,345:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:15,720:INFO:Calculating mean and std
2024-05-31 14:27:15,720:INFO:Creating metrics dataframe
2024-05-31 14:27:15,725:INFO:Uploading results into container
2024-05-31 14:27:15,725:INFO:Uploading model into container now
2024-05-31 14:27:15,728:INFO:_master_model_container: 10
2024-05-31 14:27:15,728:INFO:_display_container: 2
2024-05-31 14:27:15,730:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:27:15,730:INFO:create_model() successfully completed......................................
2024-05-31 14:27:15,900:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:15,900:INFO:Creating metrics dataframe
2024-05-31 14:27:15,919:INFO:Initializing Linear Discriminant Analysis
2024-05-31 14:27:15,919:INFO:Total runtime is 0.7886926253636677 minutes
2024-05-31 14:27:15,935:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:15,935:INFO:Initializing create_model()
2024-05-31 14:27:15,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:15,935:INFO:Checking exceptions
2024-05-31 14:27:15,935:INFO:Importing libraries
2024-05-31 14:27:15,935:INFO:Copying training dataset
2024-05-31 14:27:15,959:INFO:Defining folds
2024-05-31 14:27:15,959:INFO:Declaring metric variables
2024-05-31 14:27:15,971:INFO:Importing untrained model
2024-05-31 14:27:15,976:INFO:Linear Discriminant Analysis Imported successfully
2024-05-31 14:27:15,989:INFO:Starting cross validation
2024-05-31 14:27:15,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:16,743:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,759:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,759:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,775:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,775:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,859:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,859:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,859:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,871:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,871:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,885:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,885:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,893:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,893:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:16,933:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,213:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:17,250:INFO:Calculating mean and std
2024-05-31 14:27:17,250:INFO:Creating metrics dataframe
2024-05-31 14:27:17,250:INFO:Uploading results into container
2024-05-31 14:27:17,250:INFO:Uploading model into container now
2024-05-31 14:27:17,250:INFO:_master_model_container: 11
2024-05-31 14:27:17,250:INFO:_display_container: 2
2024-05-31 14:27:17,250:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-31 14:27:17,250:INFO:create_model() successfully completed......................................
2024-05-31 14:27:17,407:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:17,407:INFO:Creating metrics dataframe
2024-05-31 14:27:17,445:INFO:Initializing Extra Trees Classifier
2024-05-31 14:27:17,445:INFO:Total runtime is 0.8141204237937926 minutes
2024-05-31 14:27:17,454:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:17,455:INFO:Initializing create_model()
2024-05-31 14:27:17,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:17,455:INFO:Checking exceptions
2024-05-31 14:27:17,455:INFO:Importing libraries
2024-05-31 14:27:17,455:INFO:Copying training dataset
2024-05-31 14:27:17,472:INFO:Defining folds
2024-05-31 14:27:17,472:INFO:Declaring metric variables
2024-05-31 14:27:17,486:INFO:Importing untrained model
2024-05-31 14:27:17,486:INFO:Extra Trees Classifier Imported successfully
2024-05-31 14:27:17,502:INFO:Starting cross validation
2024-05-31 14:27:17,502:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:19,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,511:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,521:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,527:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,527:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,543:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,599:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,606:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:19,716:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,395:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,397:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,411:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:20,458:INFO:Calculating mean and std
2024-05-31 14:27:20,474:INFO:Creating metrics dataframe
2024-05-31 14:27:20,474:INFO:Uploading results into container
2024-05-31 14:27:20,474:INFO:Uploading model into container now
2024-05-31 14:27:20,474:INFO:_master_model_container: 12
2024-05-31 14:27:20,474:INFO:_display_container: 2
2024-05-31 14:27:20,474:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-31 14:27:20,474:INFO:create_model() successfully completed......................................
2024-05-31 14:27:20,678:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:20,678:INFO:Creating metrics dataframe
2024-05-31 14:27:20,709:INFO:Initializing Light Gradient Boosting Machine
2024-05-31 14:27:20,709:INFO:Total runtime is 0.8685209910074868 minutes
2024-05-31 14:27:20,725:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:20,725:INFO:Initializing create_model()
2024-05-31 14:27:20,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:20,725:INFO:Checking exceptions
2024-05-31 14:27:20,725:INFO:Importing libraries
2024-05-31 14:27:20,725:INFO:Copying training dataset
2024-05-31 14:27:20,763:INFO:Defining folds
2024-05-31 14:27:20,766:INFO:Declaring metric variables
2024-05-31 14:27:20,774:INFO:Importing untrained model
2024-05-31 14:27:20,788:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-31 14:27:20,803:INFO:Starting cross validation
2024-05-31 14:27:20,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:24,452:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,459:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,474:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:24,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,002:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,018:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,061:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,084:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,114:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,219:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,350:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,361:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:25,369:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,033:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,033:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,143:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,171:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:26,185:INFO:Calculating mean and std
2024-05-31 14:27:26,191:INFO:Creating metrics dataframe
2024-05-31 14:27:26,191:INFO:Uploading results into container
2024-05-31 14:27:26,191:INFO:Uploading model into container now
2024-05-31 14:27:26,201:INFO:_master_model_container: 13
2024-05-31 14:27:26,201:INFO:_display_container: 2
2024-05-31 14:27:26,201:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-31 14:27:26,201:INFO:create_model() successfully completed......................................
2024-05-31 14:27:26,364:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:26,364:INFO:Creating metrics dataframe
2024-05-31 14:27:26,380:INFO:Initializing Dummy Classifier
2024-05-31 14:27:26,380:INFO:Total runtime is 0.9630411585172016 minutes
2024-05-31 14:27:26,396:INFO:SubProcess create_model() called ==================================
2024-05-31 14:27:26,396:INFO:Initializing create_model()
2024-05-31 14:27:26,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A61AD31D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:26,396:INFO:Checking exceptions
2024-05-31 14:27:26,396:INFO:Importing libraries
2024-05-31 14:27:26,396:INFO:Copying training dataset
2024-05-31 14:27:26,427:INFO:Defining folds
2024-05-31 14:27:26,427:INFO:Declaring metric variables
2024-05-31 14:27:26,427:INFO:Importing untrained model
2024-05-31 14:27:26,443:INFO:Dummy Classifier Imported successfully
2024-05-31 14:27:26,459:INFO:Starting cross validation
2024-05-31 14:27:26,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:27:27,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,137:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,781:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,783:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:27:27,783:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:27:27,797:INFO:Calculating mean and std
2024-05-31 14:27:27,797:INFO:Creating metrics dataframe
2024-05-31 14:27:27,797:INFO:Uploading results into container
2024-05-31 14:27:27,797:INFO:Uploading model into container now
2024-05-31 14:27:27,814:INFO:_master_model_container: 14
2024-05-31 14:27:27,814:INFO:_display_container: 2
2024-05-31 14:27:27,814:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 14:27:27,814:INFO:create_model() successfully completed......................................
2024-05-31 14:27:27,969:INFO:SubProcess create_model() end ==================================
2024-05-31 14:27:27,969:INFO:Creating metrics dataframe
2024-05-31 14:27:28,017:INFO:Initializing create_model()
2024-05-31 14:27:28,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:27:28,017:INFO:Checking exceptions
2024-05-31 14:27:28,017:INFO:Importing libraries
2024-05-31 14:27:28,017:INFO:Copying training dataset
2024-05-31 14:27:28,048:INFO:Defining folds
2024-05-31 14:27:28,048:INFO:Declaring metric variables
2024-05-31 14:27:28,048:INFO:Importing untrained model
2024-05-31 14:27:28,048:INFO:Declaring custom model
2024-05-31 14:27:28,048:INFO:Dummy Classifier Imported successfully
2024-05-31 14:27:28,048:INFO:Cross validation set to False
2024-05-31 14:27:28,048:INFO:Fitting Model
2024-05-31 14:27:28,885:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 14:27:28,885:INFO:create_model() successfully completed......................................
2024-05-31 14:27:29,167:INFO:_master_model_container: 14
2024-05-31 14:27:29,167:INFO:_display_container: 2
2024-05-31 14:27:29,167:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 14:27:29,167:INFO:compare_models() successfully completed......................................
2024-05-31 14:34:40,302:INFO:Initializing create_model()
2024-05-31 14:34:40,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:34:40,302:INFO:Checking exceptions
2024-05-31 14:34:40,349:INFO:Importing libraries
2024-05-31 14:34:40,349:INFO:Copying training dataset
2024-05-31 14:34:40,368:INFO:Defining folds
2024-05-31 14:34:40,376:INFO:Declaring metric variables
2024-05-31 14:34:40,386:INFO:Importing untrained model
2024-05-31 14:34:40,396:INFO:Random Forest Classifier Imported successfully
2024-05-31 14:34:40,413:INFO:Starting cross validation
2024-05-31 14:34:40,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:34:58,254:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,276:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,285:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,330:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,427:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,427:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,585:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,585:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,695:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,722:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:58,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:34:59,779:INFO:Calculating mean and std
2024-05-31 14:34:59,779:INFO:Creating metrics dataframe
2024-05-31 14:34:59,794:INFO:Finalizing model
2024-05-31 14:35:00,525:INFO:Uploading results into container
2024-05-31 14:35:00,525:INFO:Uploading model into container now
2024-05-31 14:35:00,556:INFO:_master_model_container: 15
2024-05-31 14:35:00,556:INFO:_display_container: 3
2024-05-31 14:35:00,556:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:35:00,556:INFO:create_model() successfully completed......................................
2024-05-31 14:40:54,166:INFO:Initializing create_model()
2024-05-31 14:40:54,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:40:54,166:INFO:Checking exceptions
2024-05-31 14:40:54,319:INFO:Importing libraries
2024-05-31 14:40:54,319:INFO:Copying training dataset
2024-05-31 14:40:54,365:INFO:Defining folds
2024-05-31 14:40:54,365:INFO:Declaring metric variables
2024-05-31 14:40:54,373:INFO:Importing untrained model
2024-05-31 14:40:54,384:INFO:Decision Tree Classifier Imported successfully
2024-05-31 14:40:54,404:INFO:Starting cross validation
2024-05-31 14:40:54,426:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:41:11,711:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,728:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,728:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,728:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,772:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:11,773:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,534:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,542:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,555:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,555:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:41:12,587:INFO:Calculating mean and std
2024-05-31 14:41:12,587:INFO:Creating metrics dataframe
2024-05-31 14:41:12,628:INFO:Finalizing model
2024-05-31 14:41:13,447:INFO:Uploading results into container
2024-05-31 14:41:13,450:INFO:Uploading model into container now
2024-05-31 14:41:13,515:INFO:_master_model_container: 16
2024-05-31 14:41:13,515:INFO:_display_container: 4
2024-05-31 14:41:13,527:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 14:41:13,527:INFO:create_model() successfully completed......................................
2024-05-31 14:43:05,396:INFO:Initializing create_model()
2024-05-31 14:43:05,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:43:05,398:INFO:Checking exceptions
2024-05-31 14:43:05,446:INFO:Importing libraries
2024-05-31 14:43:05,447:INFO:Copying training dataset
2024-05-31 14:43:05,482:INFO:Defining folds
2024-05-31 14:43:05,482:INFO:Declaring metric variables
2024-05-31 14:43:05,490:INFO:Importing untrained model
2024-05-31 14:43:05,503:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 14:43:05,525:INFO:Starting cross validation
2024-05-31 14:43:05,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:43:08,735:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,752:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,756:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,772:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,788:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,808:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,973:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:08,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,102:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,116:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,116:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,152:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,161:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:09,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,514:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,514:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:11,529:INFO:Calculating mean and std
2024-05-31 14:43:11,529:INFO:Creating metrics dataframe
2024-05-31 14:43:11,543:INFO:Finalizing model
2024-05-31 14:43:14,105:INFO:Uploading results into container
2024-05-31 14:43:14,105:INFO:Uploading model into container now
2024-05-31 14:43:14,123:INFO:_master_model_container: 17
2024-05-31 14:43:14,123:INFO:_display_container: 5
2024-05-31 14:43:14,123:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:43:14,123:INFO:create_model() successfully completed......................................
2024-05-31 14:43:28,114:INFO:Initializing create_model()
2024-05-31 14:43:28,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:43:28,114:INFO:Checking exceptions
2024-05-31 14:43:28,165:INFO:Importing libraries
2024-05-31 14:43:28,167:INFO:Copying training dataset
2024-05-31 14:43:28,199:INFO:Defining folds
2024-05-31 14:43:28,199:INFO:Declaring metric variables
2024-05-31 14:43:28,211:INFO:Importing untrained model
2024-05-31 14:43:28,215:INFO:Ada Boost Classifier Imported successfully
2024-05-31 14:43:28,240:INFO:Starting cross validation
2024-05-31 14:43:28,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:43:28,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,888:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,891:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,891:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:28,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:29,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,664:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,707:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,755:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,770:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,770:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,793:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,794:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:29,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:29,950:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:30,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,630:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,635:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:43:30,703:INFO:Calculating mean and std
2024-05-31 14:43:30,704:INFO:Creating metrics dataframe
2024-05-31 14:43:30,714:INFO:Finalizing model
2024-05-31 14:43:31,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:43:32,057:INFO:Uploading results into container
2024-05-31 14:43:32,057:INFO:Uploading model into container now
2024-05-31 14:43:32,093:INFO:_master_model_container: 18
2024-05-31 14:43:32,093:INFO:_display_container: 6
2024-05-31 14:43:32,094:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 14:43:32,094:INFO:create_model() successfully completed......................................
2024-05-31 14:46:02,398:INFO:Initializing tune_model()
2024-05-31 14:46:02,398:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-31 14:46:02,398:INFO:Checking exceptions
2024-05-31 14:46:02,488:INFO:Copying training dataset
2024-05-31 14:46:02,499:INFO:Checking base model
2024-05-31 14:46:02,499:INFO:Base model : Random Forest Classifier
2024-05-31 14:46:02,516:INFO:Declaring metric variables
2024-05-31 14:46:02,523:INFO:Defining Hyperparameters
2024-05-31 14:46:02,717:INFO:Tuning with n_jobs=-1
2024-05-31 14:46:02,717:INFO:Initializing RandomizedSearchCV
2024-05-31 14:46:58,209:INFO:best_params: {'actual_estimator__n_estimators': 10, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 2, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': False}
2024-05-31 14:46:58,209:INFO:Hyperparameter search completed
2024-05-31 14:46:58,209:INFO:SubProcess create_model() called ==================================
2024-05-31 14:46:58,209:INFO:Initializing create_model()
2024-05-31 14:46:58,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6B4916D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 10, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.1, 'max_features': 'log2', 'max_depth': 2, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': False})
2024-05-31 14:46:58,209:INFO:Checking exceptions
2024-05-31 14:46:58,209:INFO:Importing libraries
2024-05-31 14:46:58,209:INFO:Copying training dataset
2024-05-31 14:46:58,243:INFO:Defining folds
2024-05-31 14:46:58,244:INFO:Declaring metric variables
2024-05-31 14:46:58,244:INFO:Importing untrained model
2024-05-31 14:46:58,244:INFO:Declaring custom model
2024-05-31 14:46:58,265:INFO:Random Forest Classifier Imported successfully
2024-05-31 14:46:58,270:INFO:Starting cross validation
2024-05-31 14:46:58,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:46:59,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,511:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,518:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,534:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,544:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,571:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,571:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,713:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:46:59,718:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:46:59,722:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,087:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:47:00,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 14:47:00,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:00,126:INFO:Calculating mean and std
2024-05-31 14:47:00,126:INFO:Creating metrics dataframe
2024-05-31 14:47:00,150:INFO:Finalizing model
2024-05-31 14:47:00,538:INFO:Uploading results into container
2024-05-31 14:47:00,538:INFO:Uploading model into container now
2024-05-31 14:47:00,538:INFO:_master_model_container: 19
2024-05-31 14:47:00,545:INFO:_display_container: 7
2024-05-31 14:47:00,545:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:47:00,549:INFO:create_model() successfully completed......................................
2024-05-31 14:47:00,768:INFO:SubProcess create_model() end ==================================
2024-05-31 14:47:00,768:INFO:choose_better activated
2024-05-31 14:47:00,776:INFO:SubProcess create_model() called ==================================
2024-05-31 14:47:00,776:INFO:Initializing create_model()
2024-05-31 14:47:00,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:47:00,776:INFO:Checking exceptions
2024-05-31 14:47:00,786:INFO:Importing libraries
2024-05-31 14:47:00,786:INFO:Copying training dataset
2024-05-31 14:47:00,817:INFO:Defining folds
2024-05-31 14:47:00,817:INFO:Declaring metric variables
2024-05-31 14:47:00,817:INFO:Importing untrained model
2024-05-31 14:47:00,817:INFO:Declaring custom model
2024-05-31 14:47:00,817:INFO:Random Forest Classifier Imported successfully
2024-05-31 14:47:00,817:INFO:Starting cross validation
2024-05-31 14:47:00,825:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:47:03,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,449:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,451:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,527:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,541:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,542:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,550:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,550:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,550:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,612:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:03,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,390:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,409:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,409:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:47:04,421:INFO:Calculating mean and std
2024-05-31 14:47:04,421:INFO:Creating metrics dataframe
2024-05-31 14:47:04,437:INFO:Finalizing model
2024-05-31 14:47:05,372:INFO:Uploading results into container
2024-05-31 14:47:05,372:INFO:Uploading model into container now
2024-05-31 14:47:05,372:INFO:_master_model_container: 20
2024-05-31 14:47:05,372:INFO:_display_container: 8
2024-05-31 14:47:05,372:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:47:05,372:INFO:create_model() successfully completed......................................
2024-05-31 14:47:05,576:INFO:SubProcess create_model() end ==================================
2024-05-31 14:47:05,576:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8126
2024-05-31 14:47:05,576:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8305
2024-05-31 14:47:05,576:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-05-31 14:47:05,592:INFO:choose_better completed
2024-05-31 14:47:05,649:INFO:_master_model_container: 20
2024-05-31 14:47:05,649:INFO:_display_container: 7
2024-05-31 14:47:05,649:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 14:47:05,655:INFO:tune_model() successfully completed......................................
2024-05-31 14:50:44,060:INFO:Initializing tune_model()
2024-05-31 14:50:44,060:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-31 14:50:44,060:INFO:Checking exceptions
2024-05-31 14:50:44,118:INFO:Copying training dataset
2024-05-31 14:50:44,131:INFO:Checking base model
2024-05-31 14:50:44,133:INFO:Base model : Gradient Boosting Classifier
2024-05-31 14:50:44,141:INFO:Declaring metric variables
2024-05-31 14:50:44,147:INFO:Defining Hyperparameters
2024-05-31 14:50:44,426:INFO:Tuning with n_jobs=-1
2024-05-31 14:50:44,426:INFO:Initializing RandomizedSearchCV
2024-05-31 14:51:30,968:INFO:best_params: {'actual_estimator__subsample': 0.75, 'actual_estimator__n_estimators': 180, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__learning_rate': 0.0001}
2024-05-31 14:51:30,970:INFO:Hyperparameter search completed
2024-05-31 14:51:30,970:INFO:SubProcess create_model() called ==================================
2024-05-31 14:51:30,974:INFO:Initializing create_model()
2024-05-31 14:51:30,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE1ED90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.75, 'n_estimators': 180, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 9, 'learning_rate': 0.0001})
2024-05-31 14:51:30,974:INFO:Checking exceptions
2024-05-31 14:51:30,975:INFO:Importing libraries
2024-05-31 14:51:30,975:INFO:Copying training dataset
2024-05-31 14:51:30,995:INFO:Defining folds
2024-05-31 14:51:30,995:INFO:Declaring metric variables
2024-05-31 14:51:31,001:INFO:Importing untrained model
2024-05-31 14:51:31,001:INFO:Declaring custom model
2024-05-31 14:51:31,013:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 14:51:31,029:INFO:Starting cross validation
2024-05-31 14:51:31,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:51:36,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,776:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,784:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,810:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,825:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,841:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:36,849:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,040:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,079:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,087:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,096:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,275:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,407:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,414:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,422:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,427:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:37,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,501:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,506:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,511:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,594:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,601:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,609:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:40,622:INFO:Calculating mean and std
2024-05-31 14:51:40,625:INFO:Creating metrics dataframe
2024-05-31 14:51:40,638:INFO:Finalizing model
2024-05-31 14:51:45,329:INFO:Uploading results into container
2024-05-31 14:51:45,332:INFO:Uploading model into container now
2024-05-31 14:51:45,333:INFO:_master_model_container: 21
2024-05-31 14:51:45,333:INFO:_display_container: 8
2024-05-31 14:51:45,334:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:51:45,334:INFO:create_model() successfully completed......................................
2024-05-31 14:51:45,510:INFO:SubProcess create_model() end ==================================
2024-05-31 14:51:45,510:INFO:choose_better activated
2024-05-31 14:51:45,517:INFO:SubProcess create_model() called ==================================
2024-05-31 14:51:45,518:INFO:Initializing create_model()
2024-05-31 14:51:45,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:51:45,519:INFO:Checking exceptions
2024-05-31 14:51:45,521:INFO:Importing libraries
2024-05-31 14:51:45,522:INFO:Copying training dataset
2024-05-31 14:51:45,546:INFO:Defining folds
2024-05-31 14:51:45,547:INFO:Declaring metric variables
2024-05-31 14:51:45,547:INFO:Importing untrained model
2024-05-31 14:51:45,547:INFO:Declaring custom model
2024-05-31 14:51:45,549:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 14:51:45,549:INFO:Starting cross validation
2024-05-31 14:51:45,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:51:48,961:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:48,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:48,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,066:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,082:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,211:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,214:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,218:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,222:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,230:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,245:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,252:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,294:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,746:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:49,808:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:52,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:52,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:52,978:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:53,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:53,050:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:53,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:51:53,070:INFO:Calculating mean and std
2024-05-31 14:51:53,076:INFO:Creating metrics dataframe
2024-05-31 14:51:53,078:INFO:Finalizing model
2024-05-31 14:51:56,240:INFO:Uploading results into container
2024-05-31 14:51:56,255:INFO:Uploading model into container now
2024-05-31 14:51:56,256:INFO:_master_model_container: 22
2024-05-31 14:51:56,256:INFO:_display_container: 9
2024-05-31 14:51:56,256:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:51:56,256:INFO:create_model() successfully completed......................................
2024-05-31 14:51:56,467:INFO:SubProcess create_model() end ==================================
2024-05-31 14:51:56,476:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.7861
2024-05-31 14:51:56,477:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.7921
2024-05-31 14:51:56,480:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-05-31 14:51:56,480:INFO:choose_better completed
2024-05-31 14:51:56,515:INFO:_master_model_container: 22
2024-05-31 14:51:56,515:INFO:_display_container: 8
2024-05-31 14:51:56,515:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 14:51:56,515:INFO:tune_model() successfully completed......................................
2024-05-31 14:58:35,877:INFO:Initializing tune_model()
2024-05-31 14:58:35,892:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-31 14:58:35,895:INFO:Checking exceptions
2024-05-31 14:58:36,734:INFO:Copying training dataset
2024-05-31 14:58:36,770:INFO:Checking base model
2024-05-31 14:58:36,792:INFO:Base model : Ada Boost Classifier
2024-05-31 14:58:36,816:INFO:Declaring metric variables
2024-05-31 14:58:36,828:INFO:Defining Hyperparameters
2024-05-31 14:58:39,450:INFO:Tuning with n_jobs=-1
2024-05-31 14:58:39,450:INFO:Initializing RandomizedSearchCV
2024-05-31 14:59:43,684:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__algorithm': 'SAMME'}
2024-05-31 14:59:43,699:INFO:Hyperparameter search completed
2024-05-31 14:59:43,699:INFO:SubProcess create_model() called ==================================
2024-05-31 14:59:43,699:INFO:Initializing create_model()
2024-05-31 14:59:43,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE30A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'learning_rate': 0.4, 'algorithm': 'SAMME'})
2024-05-31 14:59:43,699:INFO:Checking exceptions
2024-05-31 14:59:43,699:INFO:Importing libraries
2024-05-31 14:59:43,699:INFO:Copying training dataset
2024-05-31 14:59:43,746:INFO:Defining folds
2024-05-31 14:59:43,746:INFO:Declaring metric variables
2024-05-31 14:59:43,762:INFO:Importing untrained model
2024-05-31 14:59:43,762:INFO:Declaring custom model
2024-05-31 14:59:43,778:INFO:Ada Boost Classifier Imported successfully
2024-05-31 14:59:43,810:INFO:Starting cross validation
2024-05-31 14:59:43,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:59:48,899:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,923:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,976:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:48,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,007:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,019:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,021:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,039:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,039:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,052:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,084:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,089:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,089:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,101:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,121:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:49,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,411:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,422:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,479:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:52,500:INFO:Calculating mean and std
2024-05-31 14:59:52,516:INFO:Creating metrics dataframe
2024-05-31 14:59:52,532:INFO:Finalizing model
2024-05-31 14:59:56,554:INFO:Uploading results into container
2024-05-31 14:59:56,554:INFO:Uploading model into container now
2024-05-31 14:59:56,561:INFO:_master_model_container: 23
2024-05-31 14:59:56,561:INFO:_display_container: 9
2024-05-31 14:59:56,563:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123)
2024-05-31 14:59:56,563:INFO:create_model() successfully completed......................................
2024-05-31 14:59:56,794:INFO:SubProcess create_model() end ==================================
2024-05-31 14:59:56,794:INFO:choose_better activated
2024-05-31 14:59:56,807:INFO:SubProcess create_model() called ==================================
2024-05-31 14:59:56,808:INFO:Initializing create_model()
2024-05-31 14:59:56,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 14:59:56,810:INFO:Checking exceptions
2024-05-31 14:59:56,813:INFO:Importing libraries
2024-05-31 14:59:56,813:INFO:Copying training dataset
2024-05-31 14:59:56,849:INFO:Defining folds
2024-05-31 14:59:56,849:INFO:Declaring metric variables
2024-05-31 14:59:56,849:INFO:Importing untrained model
2024-05-31 14:59:56,849:INFO:Declaring custom model
2024-05-31 14:59:56,856:INFO:Ada Boost Classifier Imported successfully
2024-05-31 14:59:56,858:INFO:Starting cross validation
2024-05-31 14:59:56,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 14:59:57,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,434:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:57,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:58,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,487:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,495:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,545:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,564:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,621:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,626:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,636:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,642:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,642:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,689:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,697:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:58,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:58,877:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 14:59:59,718:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 14:59:59,777:INFO:Calculating mean and std
2024-05-31 14:59:59,777:INFO:Creating metrics dataframe
2024-05-31 14:59:59,777:INFO:Finalizing model
2024-05-31 15:00:00,108:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:00:00,865:INFO:Uploading results into container
2024-05-31 15:00:00,865:INFO:Uploading model into container now
2024-05-31 15:00:00,865:INFO:_master_model_container: 24
2024-05-31 15:00:00,865:INFO:_display_container: 10
2024-05-31 15:00:00,865:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 15:00:00,865:INFO:create_model() successfully completed......................................
2024-05-31 15:00:01,023:INFO:SubProcess create_model() end ==================================
2024-05-31 15:00:01,023:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123) result for Accuracy is 0.7525
2024-05-31 15:00:01,038:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123) result for Accuracy is 0.744
2024-05-31 15:00:01,038:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123) is best model
2024-05-31 15:00:01,038:INFO:choose_better completed
2024-05-31 15:00:01,038:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-31 15:00:01,070:INFO:_master_model_container: 24
2024-05-31 15:00:01,070:INFO:_display_container: 9
2024-05-31 15:00:01,070:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 15:00:01,070:INFO:tune_model() successfully completed......................................
2024-05-31 15:00:01,375:INFO:Initializing tune_model()
2024-05-31 15:00:01,375:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-31 15:00:01,377:INFO:Checking exceptions
2024-05-31 15:00:01,435:INFO:Copying training dataset
2024-05-31 15:00:01,459:INFO:Checking base model
2024-05-31 15:00:01,467:INFO:Base model : Decision Tree Classifier
2024-05-31 15:00:01,475:INFO:Declaring metric variables
2024-05-31 15:00:01,490:INFO:Defining Hyperparameters
2024-05-31 15:00:01,767:INFO:Tuning with n_jobs=-1
2024-05-31 15:00:01,767:INFO:Initializing RandomizedSearchCV
2024-05-31 15:00:09,891:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy'}
2024-05-31 15:00:09,893:INFO:Hyperparameter search completed
2024-05-31 15:00:09,893:INFO:SubProcess create_model() called ==================================
2024-05-31 15:00:09,893:INFO:Initializing create_model()
2024-05-31 15:00:09,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A606112D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.2, 'max_features': 'sqrt', 'max_depth': 5, 'criterion': 'entropy'})
2024-05-31 15:00:09,897:INFO:Checking exceptions
2024-05-31 15:00:09,897:INFO:Importing libraries
2024-05-31 15:00:09,897:INFO:Copying training dataset
2024-05-31 15:00:09,922:INFO:Defining folds
2024-05-31 15:00:09,922:INFO:Declaring metric variables
2024-05-31 15:00:09,922:INFO:Importing untrained model
2024-05-31 15:00:09,922:INFO:Declaring custom model
2024-05-31 15:00:09,938:INFO:Decision Tree Classifier Imported successfully
2024-05-31 15:00:09,969:INFO:Starting cross validation
2024-05-31 15:00:09,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:00:10,798:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,811:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,813:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,828:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,845:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,845:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,860:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:10,881:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:10,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,313:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:11,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:00:11,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:11,366:INFO:Calculating mean and std
2024-05-31 15:00:11,366:INFO:Creating metrics dataframe
2024-05-31 15:00:11,382:INFO:Finalizing model
2024-05-31 15:00:11,829:INFO:Uploading results into container
2024-05-31 15:00:11,829:INFO:Uploading model into container now
2024-05-31 15:00:11,829:INFO:_master_model_container: 25
2024-05-31 15:00:11,829:INFO:_display_container: 10
2024-05-31 15:00:11,829:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 15:00:11,829:INFO:create_model() successfully completed......................................
2024-05-31 15:00:12,015:INFO:SubProcess create_model() end ==================================
2024-05-31 15:00:12,015:INFO:choose_better activated
2024-05-31 15:00:12,029:INFO:SubProcess create_model() called ==================================
2024-05-31 15:00:12,029:INFO:Initializing create_model()
2024-05-31 15:00:12,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:00:12,029:INFO:Checking exceptions
2024-05-31 15:00:12,029:INFO:Importing libraries
2024-05-31 15:00:12,029:INFO:Copying training dataset
2024-05-31 15:00:12,064:INFO:Defining folds
2024-05-31 15:00:12,064:INFO:Declaring metric variables
2024-05-31 15:00:12,064:INFO:Importing untrained model
2024-05-31 15:00:12,064:INFO:Declaring custom model
2024-05-31 15:00:12,064:INFO:Decision Tree Classifier Imported successfully
2024-05-31 15:00:12,064:INFO:Starting cross validation
2024-05-31 15:00:12,076:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:00:12,883:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,883:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,885:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,897:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,899:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,899:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,918:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,933:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,947:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:12,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,517:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,552:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:00:13,564:INFO:Calculating mean and std
2024-05-31 15:00:13,564:INFO:Creating metrics dataframe
2024-05-31 15:00:13,580:INFO:Finalizing model
2024-05-31 15:00:13,992:INFO:Uploading results into container
2024-05-31 15:00:13,992:INFO:Uploading model into container now
2024-05-31 15:00:13,992:INFO:_master_model_container: 26
2024-05-31 15:00:13,992:INFO:_display_container: 11
2024-05-31 15:00:14,001:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 15:00:14,001:INFO:create_model() successfully completed......................................
2024-05-31 15:00:14,181:INFO:SubProcess create_model() end ==================================
2024-05-31 15:00:14,181:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.7272
2024-05-31 15:00:14,181:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.8305
2024-05-31 15:00:14,181:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') is best model
2024-05-31 15:00:14,181:INFO:choose_better completed
2024-05-31 15:00:14,201:INFO:_master_model_container: 26
2024-05-31 15:00:14,201:INFO:_display_container: 10
2024-05-31 15:00:14,213:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 15:00:14,213:INFO:tune_model() successfully completed......................................
2024-05-31 15:07:08,899:INFO:Initializing compare_models()
2024-05-31 15:07:08,904:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-31 15:07:08,904:INFO:Checking exceptions
2024-05-31 15:07:08,956:INFO:Preparing display monitor
2024-05-31 15:07:09,212:INFO:Initializing Logistic Regression
2024-05-31 15:07:09,212:INFO:Total runtime is 0.0 minutes
2024-05-31 15:07:09,239:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:09,254:INFO:Initializing create_model()
2024-05-31 15:07:09,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:09,257:INFO:Checking exceptions
2024-05-31 15:07:09,258:INFO:Importing libraries
2024-05-31 15:07:09,258:INFO:Copying training dataset
2024-05-31 15:07:09,317:INFO:Defining folds
2024-05-31 15:07:09,317:INFO:Declaring metric variables
2024-05-31 15:07:09,325:INFO:Importing untrained model
2024-05-31 15:07:09,341:INFO:Logistic Regression Imported successfully
2024-05-31 15:07:09,359:INFO:Starting cross validation
2024-05-31 15:07:09,375:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:25,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:25,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,008:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,139:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,141:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:26,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,184:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,205:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,213:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,355:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,359:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,375:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,383:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,392:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,399:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:26,408:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,190:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:27,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-05-31 15:07:27,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,300:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:27,340:INFO:Calculating mean and std
2024-05-31 15:07:27,342:INFO:Creating metrics dataframe
2024-05-31 15:07:27,354:INFO:Uploading results into container
2024-05-31 15:07:27,356:INFO:Uploading model into container now
2024-05-31 15:07:27,363:INFO:_master_model_container: 27
2024-05-31 15:07:27,363:INFO:_display_container: 11
2024-05-31 15:07:27,369:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-31 15:07:27,369:INFO:create_model() successfully completed......................................
2024-05-31 15:07:29,071:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:29,071:INFO:Creating metrics dataframe
2024-05-31 15:07:29,092:INFO:Initializing K Neighbors Classifier
2024-05-31 15:07:29,092:INFO:Total runtime is 0.3313332398732503 minutes
2024-05-31 15:07:29,101:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:29,104:INFO:Initializing create_model()
2024-05-31 15:07:29,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:29,104:INFO:Checking exceptions
2024-05-31 15:07:29,104:INFO:Importing libraries
2024-05-31 15:07:29,104:INFO:Copying training dataset
2024-05-31 15:07:29,128:INFO:Defining folds
2024-05-31 15:07:29,128:INFO:Declaring metric variables
2024-05-31 15:07:29,136:INFO:Importing untrained model
2024-05-31 15:07:29,144:INFO:K Neighbors Classifier Imported successfully
2024-05-31 15:07:29,167:INFO:Starting cross validation
2024-05-31 15:07:29,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:30,014:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,043:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,089:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,092:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,097:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,137:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,156:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,163:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,571:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,585:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,593:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,598:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,606:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:30,618:INFO:Calculating mean and std
2024-05-31 15:07:30,621:INFO:Creating metrics dataframe
2024-05-31 15:07:30,621:INFO:Uploading results into container
2024-05-31 15:07:30,621:INFO:Uploading model into container now
2024-05-31 15:07:30,621:INFO:_master_model_container: 28
2024-05-31 15:07:30,621:INFO:_display_container: 11
2024-05-31 15:07:30,621:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-31 15:07:30,626:INFO:create_model() successfully completed......................................
2024-05-31 15:07:30,768:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:30,768:INFO:Creating metrics dataframe
2024-05-31 15:07:30,804:INFO:Initializing Naive Bayes
2024-05-31 15:07:30,804:INFO:Total runtime is 0.3598727265993754 minutes
2024-05-31 15:07:30,815:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:30,815:INFO:Initializing create_model()
2024-05-31 15:07:30,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:30,815:INFO:Checking exceptions
2024-05-31 15:07:30,815:INFO:Importing libraries
2024-05-31 15:07:30,815:INFO:Copying training dataset
2024-05-31 15:07:30,851:INFO:Defining folds
2024-05-31 15:07:30,851:INFO:Declaring metric variables
2024-05-31 15:07:30,860:INFO:Importing untrained model
2024-05-31 15:07:30,870:INFO:Naive Bayes Imported successfully
2024-05-31 15:07:30,890:INFO:Starting cross validation
2024-05-31 15:07:30,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:31,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,627:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,627:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,627:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,660:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,660:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,676:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:31,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,093:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:32,109:INFO:Calculating mean and std
2024-05-31 15:07:32,111:INFO:Creating metrics dataframe
2024-05-31 15:07:32,115:INFO:Uploading results into container
2024-05-31 15:07:32,115:INFO:Uploading model into container now
2024-05-31 15:07:32,117:INFO:_master_model_container: 29
2024-05-31 15:07:32,117:INFO:_display_container: 11
2024-05-31 15:07:32,117:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-31 15:07:32,117:INFO:create_model() successfully completed......................................
2024-05-31 15:07:32,293:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:32,294:INFO:Creating metrics dataframe
2024-05-31 15:07:32,311:INFO:Initializing Decision Tree Classifier
2024-05-31 15:07:32,311:INFO:Total runtime is 0.3849760373433431 minutes
2024-05-31 15:07:32,318:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:32,322:INFO:Initializing create_model()
2024-05-31 15:07:32,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:32,322:INFO:Checking exceptions
2024-05-31 15:07:32,322:INFO:Importing libraries
2024-05-31 15:07:32,322:INFO:Copying training dataset
2024-05-31 15:07:32,353:INFO:Defining folds
2024-05-31 15:07:32,353:INFO:Declaring metric variables
2024-05-31 15:07:32,368:INFO:Importing untrained model
2024-05-31 15:07:32,376:INFO:Decision Tree Classifier Imported successfully
2024-05-31 15:07:32,402:INFO:Starting cross validation
2024-05-31 15:07:32,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:33,260:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,260:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,339:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,339:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,363:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,394:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,394:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,410:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,441:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,502:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,510:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,915:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,915:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,931:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:33,931:INFO:Calculating mean and std
2024-05-31 15:07:33,944:INFO:Creating metrics dataframe
2024-05-31 15:07:33,947:INFO:Uploading results into container
2024-05-31 15:07:33,947:INFO:Uploading model into container now
2024-05-31 15:07:33,947:INFO:_master_model_container: 30
2024-05-31 15:07:33,947:INFO:_display_container: 11
2024-05-31 15:07:33,947:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-05-31 15:07:33,947:INFO:create_model() successfully completed......................................
2024-05-31 15:07:34,128:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:34,128:INFO:Creating metrics dataframe
2024-05-31 15:07:34,152:INFO:Initializing SVM - Linear Kernel
2024-05-31 15:07:34,153:INFO:Total runtime is 0.41568924585978195 minutes
2024-05-31 15:07:34,160:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:34,161:INFO:Initializing create_model()
2024-05-31 15:07:34,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:34,161:INFO:Checking exceptions
2024-05-31 15:07:34,161:INFO:Importing libraries
2024-05-31 15:07:34,163:INFO:Copying training dataset
2024-05-31 15:07:34,181:INFO:Defining folds
2024-05-31 15:07:34,181:INFO:Declaring metric variables
2024-05-31 15:07:34,200:INFO:Importing untrained model
2024-05-31 15:07:34,211:INFO:SVM - Linear Kernel Imported successfully
2024-05-31 15:07:34,227:INFO:Starting cross validation
2024-05-31 15:07:34,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:34,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,993:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:34,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:34,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:35,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,047:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,480:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,485:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,494:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:35,494:INFO:Calculating mean and std
2024-05-31 15:07:35,509:INFO:Creating metrics dataframe
2024-05-31 15:07:35,512:INFO:Uploading results into container
2024-05-31 15:07:35,512:INFO:Uploading model into container now
2024-05-31 15:07:35,516:INFO:_master_model_container: 31
2024-05-31 15:07:35,516:INFO:_display_container: 11
2024-05-31 15:07:35,518:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-31 15:07:35,518:INFO:create_model() successfully completed......................................
2024-05-31 15:07:35,686:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:35,686:INFO:Creating metrics dataframe
2024-05-31 15:07:35,705:INFO:Initializing Ridge Classifier
2024-05-31 15:07:35,705:INFO:Total runtime is 0.44154143333435064 minutes
2024-05-31 15:07:35,711:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:35,717:INFO:Initializing create_model()
2024-05-31 15:07:35,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:35,717:INFO:Checking exceptions
2024-05-31 15:07:35,717:INFO:Importing libraries
2024-05-31 15:07:35,717:INFO:Copying training dataset
2024-05-31 15:07:35,744:INFO:Defining folds
2024-05-31 15:07:35,744:INFO:Declaring metric variables
2024-05-31 15:07:35,754:INFO:Importing untrained model
2024-05-31 15:07:35,761:INFO:Ridge Classifier Imported successfully
2024-05-31 15:07:35,790:INFO:Starting cross validation
2024-05-31 15:07:35,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:36,528:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,533:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,596:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,628:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:36,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,040:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,081:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,091:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,099:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:37,118:INFO:Calculating mean and std
2024-05-31 15:07:37,120:INFO:Creating metrics dataframe
2024-05-31 15:07:37,126:INFO:Uploading results into container
2024-05-31 15:07:37,126:INFO:Uploading model into container now
2024-05-31 15:07:37,128:INFO:_master_model_container: 32
2024-05-31 15:07:37,128:INFO:_display_container: 11
2024-05-31 15:07:37,128:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-05-31 15:07:37,131:INFO:create_model() successfully completed......................................
2024-05-31 15:07:37,283:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:37,283:INFO:Creating metrics dataframe
2024-05-31 15:07:37,310:INFO:Initializing Random Forest Classifier
2024-05-31 15:07:37,310:INFO:Total runtime is 0.4683024684588115 minutes
2024-05-31 15:07:37,316:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:37,316:INFO:Initializing create_model()
2024-05-31 15:07:37,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:37,323:INFO:Checking exceptions
2024-05-31 15:07:37,323:INFO:Importing libraries
2024-05-31 15:07:37,323:INFO:Copying training dataset
2024-05-31 15:07:37,366:INFO:Defining folds
2024-05-31 15:07:37,366:INFO:Declaring metric variables
2024-05-31 15:07:37,379:INFO:Importing untrained model
2024-05-31 15:07:37,387:INFO:Random Forest Classifier Imported successfully
2024-05-31 15:07:37,413:INFO:Starting cross validation
2024-05-31 15:07:37,422:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:39,350:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,358:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,358:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,373:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,382:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,387:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,391:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,398:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,558:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,563:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,563:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,579:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:39,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,257:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,261:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,261:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:40,279:INFO:Calculating mean and std
2024-05-31 15:07:40,279:INFO:Creating metrics dataframe
2024-05-31 15:07:40,279:INFO:Uploading results into container
2024-05-31 15:07:40,279:INFO:Uploading model into container now
2024-05-31 15:07:40,279:INFO:_master_model_container: 33
2024-05-31 15:07:40,279:INFO:_display_container: 11
2024-05-31 15:07:40,279:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-05-31 15:07:40,279:INFO:create_model() successfully completed......................................
2024-05-31 15:07:40,440:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:40,440:INFO:Creating metrics dataframe
2024-05-31 15:07:40,468:INFO:Initializing Quadratic Discriminant Analysis
2024-05-31 15:07:40,468:INFO:Total runtime is 0.5209313432375591 minutes
2024-05-31 15:07:40,469:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:40,477:INFO:Initializing create_model()
2024-05-31 15:07:40,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:40,477:INFO:Checking exceptions
2024-05-31 15:07:40,477:INFO:Importing libraries
2024-05-31 15:07:40,477:INFO:Copying training dataset
2024-05-31 15:07:40,500:INFO:Defining folds
2024-05-31 15:07:40,500:INFO:Declaring metric variables
2024-05-31 15:07:40,512:INFO:Importing untrained model
2024-05-31 15:07:40,522:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-31 15:07:40,543:INFO:Starting cross validation
2024-05-31 15:07:40,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,177:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,195:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,196:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,196:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,196:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,396:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,397:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-05-31 15:07:41,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:41,482:INFO:Calculating mean and std
2024-05-31 15:07:41,482:INFO:Creating metrics dataframe
2024-05-31 15:07:41,482:INFO:Uploading results into container
2024-05-31 15:07:41,482:INFO:Uploading model into container now
2024-05-31 15:07:41,488:INFO:_master_model_container: 34
2024-05-31 15:07:41,488:INFO:_display_container: 11
2024-05-31 15:07:41,488:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-31 15:07:41,488:INFO:create_model() successfully completed......................................
2024-05-31 15:07:41,647:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:41,647:INFO:Creating metrics dataframe
2024-05-31 15:07:41,682:INFO:Initializing Ada Boost Classifier
2024-05-31 15:07:41,683:INFO:Total runtime is 0.5411746144294739 minutes
2024-05-31 15:07:41,691:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:41,691:INFO:Initializing create_model()
2024-05-31 15:07:41,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:41,692:INFO:Checking exceptions
2024-05-31 15:07:41,692:INFO:Importing libraries
2024-05-31 15:07:41,692:INFO:Copying training dataset
2024-05-31 15:07:41,721:INFO:Defining folds
2024-05-31 15:07:41,722:INFO:Declaring metric variables
2024-05-31 15:07:41,733:INFO:Importing untrained model
2024-05-31 15:07:41,741:INFO:Ada Boost Classifier Imported successfully
2024-05-31 15:07:41,756:INFO:Starting cross validation
2024-05-31 15:07:41,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:42,258:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,273:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,273:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:42,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:43,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,100:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,107:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,107:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,115:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,134:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,134:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,134:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,146:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,146:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,273:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:43,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-31 15:07:43,936:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,936:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,947:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,947:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,962:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,962:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:43,977:INFO:Calculating mean and std
2024-05-31 15:07:43,980:INFO:Creating metrics dataframe
2024-05-31 15:07:43,980:INFO:Uploading results into container
2024-05-31 15:07:43,980:INFO:Uploading model into container now
2024-05-31 15:07:43,980:INFO:_master_model_container: 35
2024-05-31 15:07:43,980:INFO:_display_container: 11
2024-05-31 15:07:43,980:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-05-31 15:07:43,980:INFO:create_model() successfully completed......................................
2024-05-31 15:07:44,146:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:44,148:INFO:Creating metrics dataframe
2024-05-31 15:07:44,184:INFO:Initializing Gradient Boosting Classifier
2024-05-31 15:07:44,184:INFO:Total runtime is 0.5828637878100078 minutes
2024-05-31 15:07:44,194:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:44,195:INFO:Initializing create_model()
2024-05-31 15:07:44,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:44,195:INFO:Checking exceptions
2024-05-31 15:07:44,196:INFO:Importing libraries
2024-05-31 15:07:44,197:INFO:Copying training dataset
2024-05-31 15:07:44,230:INFO:Defining folds
2024-05-31 15:07:44,230:INFO:Declaring metric variables
2024-05-31 15:07:44,246:INFO:Importing untrained model
2024-05-31 15:07:44,254:INFO:Gradient Boosting Classifier Imported successfully
2024-05-31 15:07:44,287:INFO:Starting cross validation
2024-05-31 15:07:44,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:47,415:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,442:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,481:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,551:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,551:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,593:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:47,593:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,564:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,564:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,573:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:49,584:INFO:Calculating mean and std
2024-05-31 15:07:49,584:INFO:Creating metrics dataframe
2024-05-31 15:07:49,584:INFO:Uploading results into container
2024-05-31 15:07:49,584:INFO:Uploading model into container now
2024-05-31 15:07:49,584:INFO:_master_model_container: 36
2024-05-31 15:07:49,584:INFO:_display_container: 11
2024-05-31 15:07:49,584:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-31 15:07:49,584:INFO:create_model() successfully completed......................................
2024-05-31 15:07:49,811:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:49,811:INFO:Creating metrics dataframe
2024-05-31 15:07:49,868:INFO:Initializing Linear Discriminant Analysis
2024-05-31 15:07:49,868:INFO:Total runtime is 0.6776059349377951 minutes
2024-05-31 15:07:49,887:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:49,887:INFO:Initializing create_model()
2024-05-31 15:07:49,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:49,887:INFO:Checking exceptions
2024-05-31 15:07:49,887:INFO:Importing libraries
2024-05-31 15:07:49,887:INFO:Copying training dataset
2024-05-31 15:07:49,925:INFO:Defining folds
2024-05-31 15:07:49,925:INFO:Declaring metric variables
2024-05-31 15:07:49,938:INFO:Importing untrained model
2024-05-31 15:07:49,954:INFO:Linear Discriminant Analysis Imported successfully
2024-05-31 15:07:49,991:INFO:Starting cross validation
2024-05-31 15:07:50,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:50,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,664:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,699:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,715:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,745:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:50,998:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:51,002:INFO:Calculating mean and std
2024-05-31 15:07:51,008:INFO:Creating metrics dataframe
2024-05-31 15:07:51,010:INFO:Uploading results into container
2024-05-31 15:07:51,010:INFO:Uploading model into container now
2024-05-31 15:07:51,010:INFO:_master_model_container: 37
2024-05-31 15:07:51,010:INFO:_display_container: 11
2024-05-31 15:07:51,010:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-31 15:07:51,010:INFO:create_model() successfully completed......................................
2024-05-31 15:07:51,166:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:51,166:INFO:Creating metrics dataframe
2024-05-31 15:07:51,199:INFO:Initializing Extra Trees Classifier
2024-05-31 15:07:51,199:INFO:Total runtime is 0.6997761964797975 minutes
2024-05-31 15:07:51,210:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:51,210:INFO:Initializing create_model()
2024-05-31 15:07:51,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:51,210:INFO:Checking exceptions
2024-05-31 15:07:51,210:INFO:Importing libraries
2024-05-31 15:07:51,210:INFO:Copying training dataset
2024-05-31 15:07:51,238:INFO:Defining folds
2024-05-31 15:07:51,238:INFO:Declaring metric variables
2024-05-31 15:07:51,248:INFO:Importing untrained model
2024-05-31 15:07:51,258:INFO:Extra Trees Classifier Imported successfully
2024-05-31 15:07:51,278:INFO:Starting cross validation
2024-05-31 15:07:51,283:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:52,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,555:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,662:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,662:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,715:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:52,780:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,227:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,236:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,236:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,241:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:53,253:INFO:Calculating mean and std
2024-05-31 15:07:53,253:INFO:Creating metrics dataframe
2024-05-31 15:07:53,260:INFO:Uploading results into container
2024-05-31 15:07:53,261:INFO:Uploading model into container now
2024-05-31 15:07:53,261:INFO:_master_model_container: 38
2024-05-31 15:07:53,261:INFO:_display_container: 11
2024-05-31 15:07:53,262:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-05-31 15:07:53,270:INFO:create_model() successfully completed......................................
2024-05-31 15:07:53,432:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:53,432:INFO:Creating metrics dataframe
2024-05-31 15:07:53,482:INFO:Initializing Light Gradient Boosting Machine
2024-05-31 15:07:53,482:INFO:Total runtime is 0.7378291726112367 minutes
2024-05-31 15:07:53,496:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:53,497:INFO:Initializing create_model()
2024-05-31 15:07:53,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:53,498:INFO:Checking exceptions
2024-05-31 15:07:53,498:INFO:Importing libraries
2024-05-31 15:07:53,498:INFO:Copying training dataset
2024-05-31 15:07:53,537:INFO:Defining folds
2024-05-31 15:07:53,538:INFO:Declaring metric variables
2024-05-31 15:07:53,550:INFO:Importing untrained model
2024-05-31 15:07:53,573:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-31 15:07:53,610:INFO:Starting cross validation
2024-05-31 15:07:53,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:55,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,665:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,924:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,932:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:55,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,096:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,549:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:56,581:INFO:Calculating mean and std
2024-05-31 15:07:56,596:INFO:Creating metrics dataframe
2024-05-31 15:07:56,600:INFO:Uploading results into container
2024-05-31 15:07:56,600:INFO:Uploading model into container now
2024-05-31 15:07:56,604:INFO:_master_model_container: 39
2024-05-31 15:07:56,604:INFO:_display_container: 11
2024-05-31 15:07:56,604:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-05-31 15:07:56,604:INFO:create_model() successfully completed......................................
2024-05-31 15:07:56,755:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:56,755:INFO:Creating metrics dataframe
2024-05-31 15:07:56,779:INFO:Initializing Dummy Classifier
2024-05-31 15:07:56,779:INFO:Total runtime is 0.7927869160970054 minutes
2024-05-31 15:07:56,789:INFO:SubProcess create_model() called ==================================
2024-05-31 15:07:56,790:INFO:Initializing create_model()
2024-05-31 15:07:56,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026A6BE21FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:56,790:INFO:Checking exceptions
2024-05-31 15:07:56,790:INFO:Importing libraries
2024-05-31 15:07:56,790:INFO:Copying training dataset
2024-05-31 15:07:56,811:INFO:Defining folds
2024-05-31 15:07:56,811:INFO:Declaring metric variables
2024-05-31 15:07:56,828:INFO:Importing untrained model
2024-05-31 15:07:56,846:INFO:Dummy Classifier Imported successfully
2024-05-31 15:07:56,881:INFO:Starting cross validation
2024-05-31 15:07:56,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-31 15:07:57,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,674:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:57,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:57,676:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,014:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:58,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-05-31 15:07:58,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-05-31 15:07:58,067:INFO:Calculating mean and std
2024-05-31 15:07:58,074:INFO:Creating metrics dataframe
2024-05-31 15:07:58,078:INFO:Uploading results into container
2024-05-31 15:07:58,080:INFO:Uploading model into container now
2024-05-31 15:07:58,080:INFO:_master_model_container: 40
2024-05-31 15:07:58,080:INFO:_display_container: 11
2024-05-31 15:07:58,080:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 15:07:58,081:INFO:create_model() successfully completed......................................
2024-05-31 15:07:58,236:INFO:SubProcess create_model() end ==================================
2024-05-31 15:07:58,236:INFO:Creating metrics dataframe
2024-05-31 15:07:58,300:INFO:Initializing create_model()
2024-05-31 15:07:58,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026A6A2E40D0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-31 15:07:58,300:INFO:Checking exceptions
2024-05-31 15:07:58,307:INFO:Importing libraries
2024-05-31 15:07:58,308:INFO:Copying training dataset
2024-05-31 15:07:58,341:INFO:Defining folds
2024-05-31 15:07:58,341:INFO:Declaring metric variables
2024-05-31 15:07:58,343:INFO:Importing untrained model
2024-05-31 15:07:58,343:INFO:Declaring custom model
2024-05-31 15:07:58,343:INFO:Dummy Classifier Imported successfully
2024-05-31 15:07:58,349:INFO:Cross validation set to False
2024-05-31 15:07:58,350:INFO:Fitting Model
2024-05-31 15:07:58,707:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 15:07:58,707:INFO:create_model() successfully completed......................................
2024-05-31 15:07:58,956:INFO:_master_model_container: 40
2024-05-31 15:07:58,956:INFO:_display_container: 11
2024-05-31 15:07:58,956:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-05-31 15:07:58,956:INFO:compare_models() successfully completed......................................
2024-06-03 15:24:54,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-03 15:24:54,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-03 15:24:54,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-03 15:24:54,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-06-03 15:25:10,463:INFO:PyCaret ClassificationExperiment
2024-06-03 15:25:10,471:INFO:Logging name: clf-default-name
2024-06-03 15:25:10,471:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-06-03 15:25:10,471:INFO:version 3.3.2
2024-06-03 15:25:10,471:INFO:Initializing setup()
2024-06-03 15:25:10,471:INFO:self.USI: 34c7
2024-06-03 15:25:10,471:INFO:self._variable_keys: {'X_train', 'gpu_n_jobs_param', 'is_multiclass', '_ml_usecase', 'logging_param', 'exp_name_log', 'pipeline', 'idx', 'log_plots_param', 'y_test', 'exp_id', 'y_train', 'gpu_param', 'target_param', 'memory', 'fold_shuffle_param', 'X_test', 'seed', 'html_param', '_available_plots', 'n_jobs_param', 'X', 'USI', 'fold_groups_param', 'fold_generator', 'data', 'y', 'fix_imbalance'}
2024-06-03 15:25:10,471:INFO:Checking environment
2024-06-03 15:25:10,471:INFO:python_version: 3.11.5
2024-06-03 15:25:10,471:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-06-03 15:25:10,471:INFO:machine: AMD64
2024-06-03 15:25:10,471:INFO:platform: Windows-10-10.0.22631-SP0
2024-06-03 15:25:10,478:INFO:Memory: svmem(total=8395403264, available=595615744, percent=92.9, used=7799787520, free=595615744)
2024-06-03 15:25:10,478:INFO:Physical Core: 4
2024-06-03 15:25:10,478:INFO:Logical Core: 8
2024-06-03 15:25:10,478:INFO:Checking libraries
2024-06-03 15:25:10,478:INFO:System:
2024-06-03 15:25:10,478:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-06-03 15:25:10,478:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-06-03 15:25:10,478:INFO:   machine: Windows-10-10.0.22631-SP0
2024-06-03 15:25:10,478:INFO:PyCaret required dependencies:
2024-06-03 15:25:14,469:INFO:                 pip: 23.2.1
2024-06-03 15:25:14,469:INFO:          setuptools: 68.0.0
2024-06-03 15:25:14,469:INFO:             pycaret: 3.3.2
2024-06-03 15:25:14,469:INFO:             IPython: 8.15.0
2024-06-03 15:25:14,469:INFO:          ipywidgets: 8.0.4
2024-06-03 15:25:14,469:INFO:                tqdm: 4.65.0
2024-06-03 15:25:14,469:INFO:               numpy: 1.24.3
2024-06-03 15:25:14,469:INFO:              pandas: 2.0.3
2024-06-03 15:25:14,469:INFO:              jinja2: 3.1.2
2024-06-03 15:25:14,469:INFO:               scipy: 1.11.1
2024-06-03 15:25:14,469:INFO:              joblib: 1.2.0
2024-06-03 15:25:14,474:INFO:             sklearn: 1.4.2
2024-06-03 15:25:14,474:INFO:                pyod: 1.1.3
2024-06-03 15:25:14,474:INFO:            imblearn: 0.12.2
2024-06-03 15:25:14,474:INFO:   category_encoders: 2.6.3
2024-06-03 15:25:14,474:INFO:            lightgbm: 4.3.0
2024-06-03 15:25:14,475:INFO:               numba: 0.57.1
2024-06-03 15:25:14,475:INFO:            requests: 2.31.0
2024-06-03 15:25:14,475:INFO:          matplotlib: 3.7.2
2024-06-03 15:25:14,476:INFO:          scikitplot: 0.3.7
2024-06-03 15:25:14,476:INFO:         yellowbrick: 1.5
2024-06-03 15:25:14,476:INFO:              plotly: 5.22.0
2024-06-03 15:25:14,477:INFO:    plotly-resampler: Not installed
2024-06-03 15:25:14,477:INFO:             kaleido: 0.2.1
2024-06-03 15:25:14,477:INFO:           schemdraw: 0.15
2024-06-03 15:25:14,477:INFO:         statsmodels: 0.14.0
2024-06-03 15:25:14,477:INFO:              sktime: 0.26.0
2024-06-03 15:25:14,477:INFO:               tbats: 1.1.3
2024-06-03 15:25:14,477:INFO:            pmdarima: 2.0.4
2024-06-03 15:25:14,477:INFO:              psutil: 5.9.0
2024-06-03 15:25:14,477:INFO:          markupsafe: 2.1.1
2024-06-03 15:25:14,477:INFO:             pickle5: Not installed
2024-06-03 15:25:14,477:INFO:         cloudpickle: 2.2.1
2024-06-03 15:25:14,477:INFO:         deprecation: 2.1.0
2024-06-03 15:25:14,477:INFO:              xxhash: 2.0.2
2024-06-03 15:25:14,477:INFO:           wurlitzer: Not installed
2024-06-03 15:25:14,477:INFO:PyCaret optional dependencies:
2024-06-03 15:25:14,532:INFO:                shap: Not installed
2024-06-03 15:25:14,532:INFO:           interpret: Not installed
2024-06-03 15:25:14,532:INFO:                umap: Not installed
2024-06-03 15:25:14,532:INFO:     ydata_profiling: Not installed
2024-06-03 15:25:14,532:INFO:  explainerdashboard: Not installed
2024-06-03 15:25:14,532:INFO:             autoviz: Not installed
2024-06-03 15:25:14,532:INFO:           fairlearn: Not installed
2024-06-03 15:25:14,532:INFO:          deepchecks: Not installed
2024-06-03 15:25:14,532:INFO:             xgboost: Not installed
2024-06-03 15:25:14,532:INFO:            catboost: Not installed
2024-06-03 15:25:14,532:INFO:              kmodes: Not installed
2024-06-03 15:25:14,532:INFO:             mlxtend: Not installed
2024-06-03 15:25:14,532:INFO:       statsforecast: Not installed
2024-06-03 15:25:14,532:INFO:        tune_sklearn: Not installed
2024-06-03 15:25:14,532:INFO:                 ray: Not installed
2024-06-03 15:25:14,532:INFO:            hyperopt: Not installed
2024-06-03 15:25:14,532:INFO:              optuna: Not installed
2024-06-03 15:25:14,532:INFO:               skopt: Not installed
2024-06-03 15:25:14,532:INFO:              mlflow: 2.13.0
2024-06-03 15:25:14,532:INFO:              gradio: Not installed
2024-06-03 15:25:14,532:INFO:             fastapi: Not installed
2024-06-03 15:25:14,532:INFO:             uvicorn: Not installed
2024-06-03 15:25:14,532:INFO:              m2cgen: Not installed
2024-06-03 15:25:14,532:INFO:           evidently: Not installed
2024-06-03 15:25:14,532:INFO:               fugue: Not installed
2024-06-03 15:25:14,532:INFO:           streamlit: Not installed
2024-06-03 15:25:14,532:INFO:             prophet: Not installed
2024-06-03 15:25:14,532:INFO:None
2024-06-03 15:25:14,538:INFO:Set up data.
2024-06-03 15:25:14,577:INFO:Set up folding strategy.
2024-06-03 15:25:14,577:INFO:Set up train/test split.
2024-06-03 15:25:14,610:INFO:Set up index.
2024-06-03 15:25:14,610:INFO:Assigning column types.
2024-06-03 15:25:14,643:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-06-03 15:25:14,769:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-06-03 15:25:14,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-06-03 15:25:14,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:14,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:15,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-06-03 15:25:15,047:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-06-03 15:25:15,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:15,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:15,143:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-06-03 15:25:15,294:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-06-03 15:25:15,411:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:15,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:15,595:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-06-03 15:25:15,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:15,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:15,727:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-06-03 15:25:16,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:16,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:16,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:16,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:16,251:INFO:Preparing preprocessing pipeline...
2024-06-03 15:25:16,259:INFO:Set up label encoding.
2024-06-03 15:25:16,259:INFO:Set up simple imputation.
2024-06-03 15:25:16,277:INFO:Set up encoding of ordinal features.
2024-06-03 15:25:16,294:INFO:Set up encoding of categorical features.
2024-06-03 15:25:16,294:INFO:Set up imbalanced handling.
2024-06-03 15:25:16,826:INFO:Finished creating preprocessing pipeline.
2024-06-03 15:25:16,911:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['moyenne_conso_agri_hab',
                                             'moyenne_conso_indus_hab',
                                             'moyenne_conso_tertiaire_hab',
                                             'moyenne_conso_resid...
                                    transformer=TargetEncoder(cols=['CSP_maire'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-06-03 15:25:16,911:INFO:Creating final display dataframe.
2024-06-03 15:25:17,277:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target  beneficiaire_trans_eco
2                   Target type                  Binary
3                Target mapping              0: 0, 1: 1
4           Original data shape              (1189, 32)
5        Transformed data shape              (1739, 41)
6   Transformed train set shape              (1382, 41)
7    Transformed test set shape               (357, 41)
8              Numeric features                      22
9          Categorical features                       6
10                   Preprocess                    True
11              Imputation type                  simple
12           Numeric imputation                    mean
13       Categorical imputation                    mode
14     Maximum one-hot encoding                      25
15              Encoding method                    None
16                Fix imbalance                    True
17         Fix imbalance method                   smote
18               Fold Generator         StratifiedKFold
19                  Fold Number                      10
20                     CPU Jobs                      -1
21                      Use GPU                   False
22               Log Experiment                   False
23              Experiment Name        clf-default-name
24                          USI                    34c7
2024-06-03 15:25:17,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:17,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:17,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:17,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-06-03 15:25:17,844:INFO:setup() successfully completed in 7.39s...............
2024-06-03 15:25:17,864:INFO:Initializing compare_models()
2024-06-03 15:25:17,864:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-06-03 15:25:17,864:INFO:Checking exceptions
2024-06-03 15:25:17,902:INFO:Preparing display monitor
2024-06-03 15:25:17,985:INFO:Initializing Logistic Regression
2024-06-03 15:25:17,985:INFO:Total runtime is 0.0 minutes
2024-06-03 15:25:17,995:INFO:SubProcess create_model() called ==================================
2024-06-03 15:25:17,995:INFO:Initializing create_model()
2024-06-03 15:25:17,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:25:17,995:INFO:Checking exceptions
2024-06-03 15:25:17,995:INFO:Importing libraries
2024-06-03 15:25:17,995:INFO:Copying training dataset
2024-06-03 15:25:18,028:INFO:Defining folds
2024-06-03 15:25:18,028:INFO:Declaring metric variables
2024-06-03 15:25:18,037:INFO:Importing untrained model
2024-06-03 15:25:18,046:INFO:Logistic Regression Imported successfully
2024-06-03 15:25:18,075:INFO:Starting cross validation
2024-06-03 15:25:18,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:25:40,754:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:40,754:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:40,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:40,782:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:40,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:40,945:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,958:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,958:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:40,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:40,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,017:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:41,054:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,075:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,087:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,103:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:41,143:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,155:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,171:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,215:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,279:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,312:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,327:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:41,345:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:42,429:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:42,510:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:25:42,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:42,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:42,563:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:42,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:42,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:42,652:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:42,731:INFO:Calculating mean and std
2024-06-03 15:25:42,819:INFO:Creating metrics dataframe
2024-06-03 15:25:42,918:INFO:Uploading results into container
2024-06-03 15:25:42,930:INFO:Uploading model into container now
2024-06-03 15:25:42,948:INFO:_master_model_container: 1
2024-06-03 15:25:42,949:INFO:_display_container: 2
2024-06-03 15:25:42,957:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-06-03 15:25:42,958:INFO:create_model() successfully completed......................................
2024-06-03 15:25:45,706:INFO:SubProcess create_model() end ==================================
2024-06-03 15:25:45,707:INFO:Creating metrics dataframe
2024-06-03 15:25:45,746:INFO:Initializing K Neighbors Classifier
2024-06-03 15:25:45,746:INFO:Total runtime is 0.46267977158228557 minutes
2024-06-03 15:25:45,754:INFO:SubProcess create_model() called ==================================
2024-06-03 15:25:45,755:INFO:Initializing create_model()
2024-06-03 15:25:45,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:25:45,756:INFO:Checking exceptions
2024-06-03 15:25:45,757:INFO:Importing libraries
2024-06-03 15:25:45,757:INFO:Copying training dataset
2024-06-03 15:25:45,788:INFO:Defining folds
2024-06-03 15:25:45,789:INFO:Declaring metric variables
2024-06-03 15:25:45,797:INFO:Importing untrained model
2024-06-03 15:25:45,804:INFO:K Neighbors Classifier Imported successfully
2024-06-03 15:25:45,820:INFO:Starting cross validation
2024-06-03 15:25:45,827:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:25:46,753:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,769:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,873:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,881:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,890:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,900:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,906:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,918:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,980:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:46,998:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,116:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,124:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,131:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,499:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,506:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,579:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:47,595:INFO:Calculating mean and std
2024-06-03 15:25:47,599:INFO:Creating metrics dataframe
2024-06-03 15:25:47,605:INFO:Uploading results into container
2024-06-03 15:25:47,607:INFO:Uploading model into container now
2024-06-03 15:25:47,609:INFO:_master_model_container: 2
2024-06-03 15:25:47,609:INFO:_display_container: 2
2024-06-03 15:25:47,610:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-06-03 15:25:47,610:INFO:create_model() successfully completed......................................
2024-06-03 15:25:47,801:INFO:SubProcess create_model() end ==================================
2024-06-03 15:25:47,802:INFO:Creating metrics dataframe
2024-06-03 15:25:47,835:INFO:Initializing Naive Bayes
2024-06-03 15:25:47,835:INFO:Total runtime is 0.4974998195966085 minutes
2024-06-03 15:25:47,847:INFO:SubProcess create_model() called ==================================
2024-06-03 15:25:47,848:INFO:Initializing create_model()
2024-06-03 15:25:47,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:25:47,849:INFO:Checking exceptions
2024-06-03 15:25:47,849:INFO:Importing libraries
2024-06-03 15:25:47,850:INFO:Copying training dataset
2024-06-03 15:25:47,883:INFO:Defining folds
2024-06-03 15:25:47,883:INFO:Declaring metric variables
2024-06-03 15:25:47,896:INFO:Importing untrained model
2024-06-03 15:25:47,905:INFO:Naive Bayes Imported successfully
2024-06-03 15:25:47,928:INFO:Starting cross validation
2024-06-03 15:25:47,934:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:25:48,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,653:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,659:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,666:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,678:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,688:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,725:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,735:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,746:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,830:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,841:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,855:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,899:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,911:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,912:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,920:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,921:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,928:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,932:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:48,943:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:49,246:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:49,258:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:49,263:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:49,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:49,275:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:49,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:49,303:INFO:Calculating mean and std
2024-06-03 15:25:49,307:INFO:Creating metrics dataframe
2024-06-03 15:25:49,315:INFO:Uploading results into container
2024-06-03 15:25:49,316:INFO:Uploading model into container now
2024-06-03 15:25:49,319:INFO:_master_model_container: 3
2024-06-03 15:25:49,319:INFO:_display_container: 2
2024-06-03 15:25:49,320:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-06-03 15:25:49,320:INFO:create_model() successfully completed......................................
2024-06-03 15:25:49,528:INFO:SubProcess create_model() end ==================================
2024-06-03 15:25:49,528:INFO:Creating metrics dataframe
2024-06-03 15:25:49,559:INFO:Initializing Decision Tree Classifier
2024-06-03 15:25:49,559:INFO:Total runtime is 0.5262253403663636 minutes
2024-06-03 15:25:49,571:INFO:SubProcess create_model() called ==================================
2024-06-03 15:25:49,572:INFO:Initializing create_model()
2024-06-03 15:25:49,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:25:49,573:INFO:Checking exceptions
2024-06-03 15:25:49,573:INFO:Importing libraries
2024-06-03 15:25:49,573:INFO:Copying training dataset
2024-06-03 15:25:49,601:INFO:Defining folds
2024-06-03 15:25:49,601:INFO:Declaring metric variables
2024-06-03 15:25:49,611:INFO:Importing untrained model
2024-06-03 15:25:49,623:INFO:Decision Tree Classifier Imported successfully
2024-06-03 15:25:49,641:INFO:Starting cross validation
2024-06-03 15:25:49,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:25:50,427:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,453:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,465:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,477:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,481:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,505:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,518:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,543:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,594:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,604:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,605:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,656:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:50,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:51,070:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:51,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:51,084:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:51,093:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:51,100:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:51,107:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:51,128:INFO:Calculating mean and std
2024-06-03 15:25:51,132:INFO:Creating metrics dataframe
2024-06-03 15:25:51,139:INFO:Uploading results into container
2024-06-03 15:25:51,142:INFO:Uploading model into container now
2024-06-03 15:25:51,144:INFO:_master_model_container: 4
2024-06-03 15:25:51,144:INFO:_display_container: 2
2024-06-03 15:25:51,146:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-06-03 15:25:51,146:INFO:create_model() successfully completed......................................
2024-06-03 15:25:51,363:INFO:SubProcess create_model() end ==================================
2024-06-03 15:25:51,363:INFO:Creating metrics dataframe
2024-06-03 15:25:51,393:INFO:Initializing SVM - Linear Kernel
2024-06-03 15:25:51,394:INFO:Total runtime is 0.5568126678466797 minutes
2024-06-03 15:25:51,404:INFO:SubProcess create_model() called ==================================
2024-06-03 15:25:51,406:INFO:Initializing create_model()
2024-06-03 15:25:51,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:25:51,406:INFO:Checking exceptions
2024-06-03 15:25:51,407:INFO:Importing libraries
2024-06-03 15:25:51,407:INFO:Copying training dataset
2024-06-03 15:25:51,431:INFO:Defining folds
2024-06-03 15:25:51,432:INFO:Declaring metric variables
2024-06-03 15:25:51,443:INFO:Importing untrained model
2024-06-03 15:25:51,453:INFO:SVM - Linear Kernel Imported successfully
2024-06-03 15:25:51,472:INFO:Starting cross validation
2024-06-03 15:25:51,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:25:52,195:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,196:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,202:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,207:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,211:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,213:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,215:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:25:52,221:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,222:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,225:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,260:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,282:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,304:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,313:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,356:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,365:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:25:52,376:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,377:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,381:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:25:52,387:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,400:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,408:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,417:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,819:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,821:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,831:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,841:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:52,857:INFO:Calculating mean and std
2024-06-03 15:25:52,861:INFO:Creating metrics dataframe
2024-06-03 15:25:52,868:INFO:Uploading results into container
2024-06-03 15:25:52,869:INFO:Uploading model into container now
2024-06-03 15:25:52,870:INFO:_master_model_container: 5
2024-06-03 15:25:52,871:INFO:_display_container: 2
2024-06-03 15:25:52,873:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-06-03 15:25:52,873:INFO:create_model() successfully completed......................................
2024-06-03 15:25:53,097:INFO:SubProcess create_model() end ==================================
2024-06-03 15:25:53,097:INFO:Creating metrics dataframe
2024-06-03 15:25:53,125:INFO:Initializing Ridge Classifier
2024-06-03 15:25:53,125:INFO:Total runtime is 0.5856637398401896 minutes
2024-06-03 15:25:53,139:INFO:SubProcess create_model() called ==================================
2024-06-03 15:25:53,141:INFO:Initializing create_model()
2024-06-03 15:25:53,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:25:53,142:INFO:Checking exceptions
2024-06-03 15:25:53,142:INFO:Importing libraries
2024-06-03 15:25:53,142:INFO:Copying training dataset
2024-06-03 15:25:53,182:INFO:Defining folds
2024-06-03 15:25:53,182:INFO:Declaring metric variables
2024-06-03 15:25:53,196:INFO:Importing untrained model
2024-06-03 15:25:53,212:INFO:Ridge Classifier Imported successfully
2024-06-03 15:25:53,241:INFO:Starting cross validation
2024-06-03 15:25:53,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:25:57,449:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,475:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,477:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,482:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,493:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,494:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,979:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:57,998:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:58,000:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,678:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,687:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,696:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,699:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,710:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,721:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:25:59,745:INFO:Calculating mean and std
2024-06-03 15:25:59,750:INFO:Creating metrics dataframe
2024-06-03 15:25:59,756:INFO:Uploading results into container
2024-06-03 15:25:59,758:INFO:Uploading model into container now
2024-06-03 15:25:59,759:INFO:_master_model_container: 6
2024-06-03 15:25:59,759:INFO:_display_container: 2
2024-06-03 15:25:59,760:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-06-03 15:25:59,760:INFO:create_model() successfully completed......................................
2024-06-03 15:25:59,964:INFO:SubProcess create_model() end ==================================
2024-06-03 15:25:59,964:INFO:Creating metrics dataframe
2024-06-03 15:25:59,996:INFO:Initializing Random Forest Classifier
2024-06-03 15:25:59,997:INFO:Total runtime is 0.7001937508583069 minutes
2024-06-03 15:26:00,016:INFO:SubProcess create_model() called ==================================
2024-06-03 15:26:00,017:INFO:Initializing create_model()
2024-06-03 15:26:00,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:00,017:INFO:Checking exceptions
2024-06-03 15:26:00,017:INFO:Importing libraries
2024-06-03 15:26:00,018:INFO:Copying training dataset
2024-06-03 15:26:00,047:INFO:Defining folds
2024-06-03 15:26:00,048:INFO:Declaring metric variables
2024-06-03 15:26:00,060:INFO:Importing untrained model
2024-06-03 15:26:00,071:INFO:Random Forest Classifier Imported successfully
2024-06-03 15:26:00,091:INFO:Starting cross validation
2024-06-03 15:26:00,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:02,537:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,550:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,557:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,558:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,560:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,566:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,569:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,662:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,673:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,673:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,673:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,683:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,739:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,745:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,753:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:02,762:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:03,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:03,742:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:03,752:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:03,754:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:03,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:03,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:03,786:INFO:Calculating mean and std
2024-06-03 15:26:03,789:INFO:Creating metrics dataframe
2024-06-03 15:26:03,795:INFO:Uploading results into container
2024-06-03 15:26:03,797:INFO:Uploading model into container now
2024-06-03 15:26:03,798:INFO:_master_model_container: 7
2024-06-03 15:26:03,798:INFO:_display_container: 2
2024-06-03 15:26:03,800:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-06-03 15:26:03,800:INFO:create_model() successfully completed......................................
2024-06-03 15:26:04,003:INFO:SubProcess create_model() end ==================================
2024-06-03 15:26:04,003:INFO:Creating metrics dataframe
2024-06-03 15:26:04,036:INFO:Initializing Quadratic Discriminant Analysis
2024-06-03 15:26:04,038:INFO:Total runtime is 0.7675438165664673 minutes
2024-06-03 15:26:04,048:INFO:SubProcess create_model() called ==================================
2024-06-03 15:26:04,049:INFO:Initializing create_model()
2024-06-03 15:26:04,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:04,049:INFO:Checking exceptions
2024-06-03 15:26:04,049:INFO:Importing libraries
2024-06-03 15:26:04,050:INFO:Copying training dataset
2024-06-03 15:26:04,082:INFO:Defining folds
2024-06-03 15:26:04,083:INFO:Declaring metric variables
2024-06-03 15:26:04,094:INFO:Importing untrained model
2024-06-03 15:26:04,105:INFO:Quadratic Discriminant Analysis Imported successfully
2024-06-03 15:26:04,125:INFO:Starting cross validation
2024-06-03 15:26:04,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:04,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:04,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:04,742:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:04,753:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:04,755:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:04,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:04,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:04,851:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,858:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,860:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,864:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:04,867:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,877:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,901:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,911:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,919:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,924:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,927:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,935:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,936:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,940:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,945:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:04,946:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,949:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,950:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,971:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:04,998:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,014:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,016:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:05,019:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,247:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:05,262:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:26:05,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,387:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,392:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,397:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:05,400:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,404:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,406:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:05,412:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:05,431:INFO:Calculating mean and std
2024-06-03 15:26:05,433:INFO:Creating metrics dataframe
2024-06-03 15:26:05,439:INFO:Uploading results into container
2024-06-03 15:26:05,440:INFO:Uploading model into container now
2024-06-03 15:26:05,441:INFO:_master_model_container: 8
2024-06-03 15:26:05,441:INFO:_display_container: 2
2024-06-03 15:26:05,443:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-06-03 15:26:05,443:INFO:create_model() successfully completed......................................
2024-06-03 15:26:05,639:INFO:SubProcess create_model() end ==================================
2024-06-03 15:26:05,639:INFO:Creating metrics dataframe
2024-06-03 15:26:05,670:INFO:Initializing Ada Boost Classifier
2024-06-03 15:26:05,670:INFO:Total runtime is 0.7947434425354004 minutes
2024-06-03 15:26:05,679:INFO:SubProcess create_model() called ==================================
2024-06-03 15:26:05,680:INFO:Initializing create_model()
2024-06-03 15:26:05,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:05,680:INFO:Checking exceptions
2024-06-03 15:26:05,681:INFO:Importing libraries
2024-06-03 15:26:05,681:INFO:Copying training dataset
2024-06-03 15:26:05,713:INFO:Defining folds
2024-06-03 15:26:05,713:INFO:Declaring metric variables
2024-06-03 15:26:05,724:INFO:Importing untrained model
2024-06-03 15:26:05,734:INFO:Ada Boost Classifier Imported successfully
2024-06-03 15:26:05,755:INFO:Starting cross validation
2024-06-03 15:26:05,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:06,277:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:06,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:06,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:06,343:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:06,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:06,434:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:06,441:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:06,481:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:07,373:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,396:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,399:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,409:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,430:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,440:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,510:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,521:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,648:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,800:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,805:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,808:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:07,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,818:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:07,820:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:07,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:08,699:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:08,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:08,722:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:08,732:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:08,742:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:08,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:08,770:INFO:Calculating mean and std
2024-06-03 15:26:08,772:INFO:Creating metrics dataframe
2024-06-03 15:26:08,776:INFO:Uploading results into container
2024-06-03 15:26:08,778:INFO:Uploading model into container now
2024-06-03 15:26:08,778:INFO:_master_model_container: 9
2024-06-03 15:26:08,778:INFO:_display_container: 2
2024-06-03 15:26:08,779:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-06-03 15:26:08,780:INFO:create_model() successfully completed......................................
2024-06-03 15:26:08,976:INFO:SubProcess create_model() end ==================================
2024-06-03 15:26:08,976:INFO:Creating metrics dataframe
2024-06-03 15:26:09,009:INFO:Initializing Gradient Boosting Classifier
2024-06-03 15:26:09,010:INFO:Total runtime is 0.8504182974497477 minutes
2024-06-03 15:26:09,018:INFO:SubProcess create_model() called ==================================
2024-06-03 15:26:09,019:INFO:Initializing create_model()
2024-06-03 15:26:09,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:09,020:INFO:Checking exceptions
2024-06-03 15:26:09,020:INFO:Importing libraries
2024-06-03 15:26:09,020:INFO:Copying training dataset
2024-06-03 15:26:09,046:INFO:Defining folds
2024-06-03 15:26:09,047:INFO:Declaring metric variables
2024-06-03 15:26:09,058:INFO:Importing untrained model
2024-06-03 15:26:09,070:INFO:Gradient Boosting Classifier Imported successfully
2024-06-03 15:26:09,090:INFO:Starting cross validation
2024-06-03 15:26:09,097:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:12,912:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:12,923:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:12,945:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:12,966:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:12,976:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:12,977:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:12,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:12,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,001:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,696:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,706:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,771:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,782:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,792:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,838:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,849:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,856:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:13,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:16,621:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:16,626:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:16,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:16,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:16,644:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:16,650:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:16,664:INFO:Calculating mean and std
2024-06-03 15:26:16,667:INFO:Creating metrics dataframe
2024-06-03 15:26:16,672:INFO:Uploading results into container
2024-06-03 15:26:16,674:INFO:Uploading model into container now
2024-06-03 15:26:16,675:INFO:_master_model_container: 10
2024-06-03 15:26:16,675:INFO:_display_container: 2
2024-06-03 15:26:16,676:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-06-03 15:26:16,677:INFO:create_model() successfully completed......................................
2024-06-03 15:26:16,882:INFO:SubProcess create_model() end ==================================
2024-06-03 15:26:16,883:INFO:Creating metrics dataframe
2024-06-03 15:26:16,916:INFO:Initializing Linear Discriminant Analysis
2024-06-03 15:26:16,917:INFO:Total runtime is 0.9821920752525329 minutes
2024-06-03 15:26:16,927:INFO:SubProcess create_model() called ==================================
2024-06-03 15:26:16,927:INFO:Initializing create_model()
2024-06-03 15:26:16,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:16,928:INFO:Checking exceptions
2024-06-03 15:26:16,928:INFO:Importing libraries
2024-06-03 15:26:16,929:INFO:Copying training dataset
2024-06-03 15:26:16,960:INFO:Defining folds
2024-06-03 15:26:16,960:INFO:Declaring metric variables
2024-06-03 15:26:16,971:INFO:Importing untrained model
2024-06-03 15:26:16,984:INFO:Linear Discriminant Analysis Imported successfully
2024-06-03 15:26:17,003:INFO:Starting cross validation
2024-06-03 15:26:17,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:17,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,694:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,699:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,702:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,708:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,710:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,722:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,739:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,750:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,764:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,794:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,805:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,807:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,858:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,897:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,906:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:17,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:18,228:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:18,239:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:18,247:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:18,261:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:18,269:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:18,278:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:18,295:INFO:Calculating mean and std
2024-06-03 15:26:18,298:INFO:Creating metrics dataframe
2024-06-03 15:26:18,304:INFO:Uploading results into container
2024-06-03 15:26:18,306:INFO:Uploading model into container now
2024-06-03 15:26:18,307:INFO:_master_model_container: 11
2024-06-03 15:26:18,308:INFO:_display_container: 2
2024-06-03 15:26:18,310:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-06-03 15:26:18,310:INFO:create_model() successfully completed......................................
2024-06-03 15:26:18,524:INFO:SubProcess create_model() end ==================================
2024-06-03 15:26:18,524:INFO:Creating metrics dataframe
2024-06-03 15:26:18,564:INFO:Initializing Extra Trees Classifier
2024-06-03 15:26:18,565:INFO:Total runtime is 1.0096646626790364 minutes
2024-06-03 15:26:18,576:INFO:SubProcess create_model() called ==================================
2024-06-03 15:26:18,577:INFO:Initializing create_model()
2024-06-03 15:26:18,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:18,578:INFO:Checking exceptions
2024-06-03 15:26:18,578:INFO:Importing libraries
2024-06-03 15:26:18,579:INFO:Copying training dataset
2024-06-03 15:26:18,603:INFO:Defining folds
2024-06-03 15:26:18,604:INFO:Declaring metric variables
2024-06-03 15:26:18,616:INFO:Importing untrained model
2024-06-03 15:26:18,627:INFO:Extra Trees Classifier Imported successfully
2024-06-03 15:26:18,649:INFO:Starting cross validation
2024-06-03 15:26:18,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:20,298:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,303:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,314:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,324:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,330:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,334:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,383:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,395:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,406:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,449:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,459:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,468:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,479:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,505:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,518:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,528:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,609:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:20,628:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:21,360:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:21,373:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:21,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:21,408:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:21,418:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:21,428:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:21,445:INFO:Calculating mean and std
2024-06-03 15:26:21,450:INFO:Creating metrics dataframe
2024-06-03 15:26:21,455:INFO:Uploading results into container
2024-06-03 15:26:21,457:INFO:Uploading model into container now
2024-06-03 15:26:21,458:INFO:_master_model_container: 12
2024-06-03 15:26:21,458:INFO:_display_container: 2
2024-06-03 15:26:21,460:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-06-03 15:26:21,461:INFO:create_model() successfully completed......................................
2024-06-03 15:26:21,676:INFO:SubProcess create_model() end ==================================
2024-06-03 15:26:21,677:INFO:Creating metrics dataframe
2024-06-03 15:26:21,727:INFO:Initializing Light Gradient Boosting Machine
2024-06-03 15:26:21,728:INFO:Total runtime is 1.06237606604894 minutes
2024-06-03 15:26:21,740:INFO:SubProcess create_model() called ==================================
2024-06-03 15:26:21,742:INFO:Initializing create_model()
2024-06-03 15:26:21,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:21,742:INFO:Checking exceptions
2024-06-03 15:26:21,743:INFO:Importing libraries
2024-06-03 15:26:21,743:INFO:Copying training dataset
2024-06-03 15:26:21,786:INFO:Defining folds
2024-06-03 15:26:21,787:INFO:Declaring metric variables
2024-06-03 15:26:21,799:INFO:Importing untrained model
2024-06-03 15:26:21,811:INFO:Light Gradient Boosting Machine Imported successfully
2024-06-03 15:26:21,838:INFO:Starting cross validation
2024-06-03 15:26:21,846:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:24,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:24,998:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,010:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,036:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,043:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,149:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,794:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,806:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,828:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,871:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,882:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,897:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,930:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,941:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:25,993:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,005:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,016:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,079:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,091:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,101:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,799:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,820:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,824:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:26,860:INFO:Calculating mean and std
2024-06-03 15:26:26,862:INFO:Creating metrics dataframe
2024-06-03 15:26:26,867:INFO:Uploading results into container
2024-06-03 15:26:26,868:INFO:Uploading model into container now
2024-06-03 15:26:26,869:INFO:_master_model_container: 13
2024-06-03 15:26:26,869:INFO:_display_container: 2
2024-06-03 15:26:26,870:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-06-03 15:26:26,870:INFO:create_model() successfully completed......................................
2024-06-03 15:26:27,066:INFO:SubProcess create_model() end ==================================
2024-06-03 15:26:27,066:INFO:Creating metrics dataframe
2024-06-03 15:26:27,091:INFO:Initializing Dummy Classifier
2024-06-03 15:26:27,091:INFO:Total runtime is 1.1517704804738362 minutes
2024-06-03 15:26:27,100:INFO:SubProcess create_model() called ==================================
2024-06-03 15:26:27,101:INFO:Initializing create_model()
2024-06-03 15:26:27,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265C578C390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:27,102:INFO:Checking exceptions
2024-06-03 15:26:27,102:INFO:Importing libraries
2024-06-03 15:26:27,102:INFO:Copying training dataset
2024-06-03 15:26:27,130:INFO:Defining folds
2024-06-03 15:26:27,130:INFO:Declaring metric variables
2024-06-03 15:26:27,139:INFO:Importing untrained model
2024-06-03 15:26:27,147:INFO:Dummy Classifier Imported successfully
2024-06-03 15:26:27,165:INFO:Starting cross validation
2024-06-03 15:26:27,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:27,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,870:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:27,882:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,883:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,900:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:27,907:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,927:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,940:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,949:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:27,956:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,957:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,962:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,971:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,974:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,976:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,979:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:27,981:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,981:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:27,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,987:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,990:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:27,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:27,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:28,003:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,040:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:28,057:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:28,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,355:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,363:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,366:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:26:28,371:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:28,383:INFO:Calculating mean and std
2024-06-03 15:26:28,385:INFO:Creating metrics dataframe
2024-06-03 15:26:28,390:INFO:Uploading results into container
2024-06-03 15:26:28,392:INFO:Uploading model into container now
2024-06-03 15:26:28,393:INFO:_master_model_container: 14
2024-06-03 15:26:28,393:INFO:_display_container: 2
2024-06-03 15:26:28,393:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:26:28,394:INFO:create_model() successfully completed......................................
2024-06-03 15:26:28,592:INFO:SubProcess create_model() end ==================================
2024-06-03 15:26:28,592:INFO:Creating metrics dataframe
2024-06-03 15:26:28,659:INFO:Initializing create_model()
2024-06-03 15:26:28,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:28,660:INFO:Checking exceptions
2024-06-03 15:26:28,667:INFO:Importing libraries
2024-06-03 15:26:28,668:INFO:Copying training dataset
2024-06-03 15:26:28,698:INFO:Defining folds
2024-06-03 15:26:28,699:INFO:Declaring metric variables
2024-06-03 15:26:28,699:INFO:Importing untrained model
2024-06-03 15:26:28,700:INFO:Declaring custom model
2024-06-03 15:26:28,701:INFO:Dummy Classifier Imported successfully
2024-06-03 15:26:28,707:INFO:Cross validation set to False
2024-06-03 15:26:28,707:INFO:Fitting Model
2024-06-03 15:26:29,813:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:26:29,813:INFO:create_model() successfully completed......................................
2024-06-03 15:26:30,087:INFO:_master_model_container: 14
2024-06-03 15:26:30,088:INFO:_display_container: 2
2024-06-03 15:26:30,089:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:26:30,089:INFO:compare_models() successfully completed......................................
2024-06-03 15:26:30,134:INFO:Initializing create_model()
2024-06-03 15:26:30,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:30,135:INFO:Checking exceptions
2024-06-03 15:26:30,187:INFO:Importing libraries
2024-06-03 15:26:30,187:INFO:Copying training dataset
2024-06-03 15:26:30,219:INFO:Defining folds
2024-06-03 15:26:30,219:INFO:Declaring metric variables
2024-06-03 15:26:30,231:INFO:Importing untrained model
2024-06-03 15:26:30,244:INFO:Random Forest Classifier Imported successfully
2024-06-03 15:26:30,268:INFO:Starting cross validation
2024-06-03 15:26:30,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:33,298:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,329:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,331:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,331:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,339:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,430:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,446:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,452:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,536:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,542:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,558:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:33,563:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:34,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:34,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:34,597:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:34,720:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:34,730:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:34,738:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:34,756:INFO:Calculating mean and std
2024-06-03 15:26:34,760:INFO:Creating metrics dataframe
2024-06-03 15:26:34,775:INFO:Finalizing model
2024-06-03 15:26:35,752:INFO:Uploading results into container
2024-06-03 15:26:35,754:INFO:Uploading model into container now
2024-06-03 15:26:35,785:INFO:_master_model_container: 15
2024-06-03 15:26:35,786:INFO:_display_container: 3
2024-06-03 15:26:35,787:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-06-03 15:26:35,787:INFO:create_model() successfully completed......................................
2024-06-03 15:26:36,011:INFO:Initializing create_model()
2024-06-03 15:26:36,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:36,012:INFO:Checking exceptions
2024-06-03 15:26:36,054:INFO:Importing libraries
2024-06-03 15:26:36,055:INFO:Copying training dataset
2024-06-03 15:26:36,098:INFO:Defining folds
2024-06-03 15:26:36,099:INFO:Declaring metric variables
2024-06-03 15:26:36,111:INFO:Importing untrained model
2024-06-03 15:26:36,123:INFO:Gradient Boosting Classifier Imported successfully
2024-06-03 15:26:36,145:INFO:Starting cross validation
2024-06-03 15:26:36,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:40,221:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,244:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,311:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,335:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,375:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,387:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,400:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,475:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,487:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:40,499:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,244:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,254:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,265:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,328:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,329:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,332:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,335:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,340:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,343:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,350:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:41,351:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:43,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:43,799:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:43,810:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:44,017:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:44,028:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:44,039:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:44,057:INFO:Calculating mean and std
2024-06-03 15:26:44,060:INFO:Creating metrics dataframe
2024-06-03 15:26:44,078:INFO:Finalizing model
2024-06-03 15:26:48,133:INFO:Uploading results into container
2024-06-03 15:26:48,135:INFO:Uploading model into container now
2024-06-03 15:26:48,164:INFO:_master_model_container: 16
2024-06-03 15:26:48,165:INFO:_display_container: 4
2024-06-03 15:26:48,166:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-06-03 15:26:48,167:INFO:create_model() successfully completed......................................
2024-06-03 15:26:48,399:INFO:Initializing create_model()
2024-06-03 15:26:48,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:48,399:INFO:Checking exceptions
2024-06-03 15:26:48,455:INFO:Importing libraries
2024-06-03 15:26:48,456:INFO:Copying training dataset
2024-06-03 15:26:48,489:INFO:Defining folds
2024-06-03 15:26:48,489:INFO:Declaring metric variables
2024-06-03 15:26:48,498:INFO:Importing untrained model
2024-06-03 15:26:48,509:INFO:Ada Boost Classifier Imported successfully
2024-06-03 15:26:48,529:INFO:Starting cross validation
2024-06-03 15:26:48,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:49,079:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:49,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:49,102:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:49,123:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:49,183:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:49,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:49,187:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:49,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:50,107:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,118:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,128:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,166:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,174:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,183:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,204:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,242:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,253:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,255:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,265:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,268:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,276:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,283:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,291:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,293:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,300:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,316:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,326:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,335:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:50,499:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:50,551:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:51,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:51,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:51,395:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:51,485:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:51,493:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:51,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:51,517:INFO:Calculating mean and std
2024-06-03 15:26:51,521:INFO:Creating metrics dataframe
2024-06-03 15:26:51,536:INFO:Finalizing model
2024-06-03 15:26:51,911:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:26:52,913:INFO:Uploading results into container
2024-06-03 15:26:52,915:INFO:Uploading model into container now
2024-06-03 15:26:52,948:INFO:_master_model_container: 17
2024-06-03 15:26:52,948:INFO:_display_container: 5
2024-06-03 15:26:52,949:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-06-03 15:26:52,949:INFO:create_model() successfully completed......................................
2024-06-03 15:26:53,183:INFO:Initializing create_model()
2024-06-03 15:26:53,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:26:53,185:INFO:Checking exceptions
2024-06-03 15:26:53,245:INFO:Importing libraries
2024-06-03 15:26:53,246:INFO:Copying training dataset
2024-06-03 15:26:53,296:INFO:Defining folds
2024-06-03 15:26:53,296:INFO:Declaring metric variables
2024-06-03 15:26:53,314:INFO:Importing untrained model
2024-06-03 15:26:53,328:INFO:Decision Tree Classifier Imported successfully
2024-06-03 15:26:53,347:INFO:Starting cross validation
2024-06-03 15:26:53,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:26:54,173:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,201:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,210:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,222:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,231:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,242:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,277:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,473:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,480:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,495:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,501:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,508:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,569:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,888:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,894:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,909:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:26:54,925:INFO:Calculating mean and std
2024-06-03 15:26:54,927:INFO:Creating metrics dataframe
2024-06-03 15:26:54,939:INFO:Finalizing model
2024-06-03 15:26:55,382:INFO:Uploading results into container
2024-06-03 15:26:55,384:INFO:Uploading model into container now
2024-06-03 15:26:55,414:INFO:_master_model_container: 18
2024-06-03 15:26:55,415:INFO:_display_container: 6
2024-06-03 15:26:55,416:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-06-03 15:26:55,418:INFO:create_model() successfully completed......................................
2024-06-03 15:26:55,677:INFO:Initializing tune_model()
2024-06-03 15:26:55,678:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-06-03 15:26:55,678:INFO:Checking exceptions
2024-06-03 15:26:55,744:INFO:Copying training dataset
2024-06-03 15:26:55,771:INFO:Checking base model
2024-06-03 15:26:55,772:INFO:Base model : Random Forest Classifier
2024-06-03 15:26:55,787:INFO:Declaring metric variables
2024-06-03 15:26:55,802:INFO:Defining Hyperparameters
2024-06-03 15:26:56,023:INFO:Tuning with n_jobs=-1
2024-06-03 15:26:56,023:INFO:Initializing RandomizedSearchCV
2024-06-03 15:27:44,612:INFO:best_params: {'actual_estimator__n_estimators': 10, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 2, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': False}
2024-06-03 15:27:44,612:INFO:Hyperparameter search completed
2024-06-03 15:27:44,612:INFO:SubProcess create_model() called ==================================
2024-06-03 15:27:44,617:INFO:Initializing create_model()
2024-06-03 15:27:44,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CF4D0C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 10, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.1, 'max_features': 'log2', 'max_depth': 2, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': False})
2024-06-03 15:27:44,617:INFO:Checking exceptions
2024-06-03 15:27:44,618:INFO:Importing libraries
2024-06-03 15:27:44,618:INFO:Copying training dataset
2024-06-03 15:27:44,643:INFO:Defining folds
2024-06-03 15:27:44,643:INFO:Declaring metric variables
2024-06-03 15:27:44,649:INFO:Importing untrained model
2024-06-03 15:27:44,649:INFO:Declaring custom model
2024-06-03 15:27:44,664:INFO:Random Forest Classifier Imported successfully
2024-06-03 15:27:44,675:INFO:Starting cross validation
2024-06-03 15:27:44,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:27:45,645:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,655:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,655:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,659:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:45,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:45,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,739:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,739:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:45,771:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:45,771:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,771:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,777:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,779:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,784:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:45,792:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,856:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,860:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:45,867:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,872:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,879:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,883:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:45,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,915:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:45,919:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:45,923:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:46,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:46,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:46,224:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:46,227:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:46,227:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:46,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:46,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:27:46,243:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:46,257:INFO:Calculating mean and std
2024-06-03 15:27:46,259:INFO:Creating metrics dataframe
2024-06-03 15:27:46,270:INFO:Finalizing model
2024-06-03 15:27:46,623:INFO:Uploading results into container
2024-06-03 15:27:46,628:INFO:Uploading model into container now
2024-06-03 15:27:46,628:INFO:_master_model_container: 19
2024-06-03 15:27:46,629:INFO:_display_container: 7
2024-06-03 15:27:46,630:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-06-03 15:27:46,630:INFO:create_model() successfully completed......................................
2024-06-03 15:27:46,807:INFO:SubProcess create_model() end ==================================
2024-06-03 15:27:46,807:INFO:choose_better activated
2024-06-03 15:27:46,817:INFO:SubProcess create_model() called ==================================
2024-06-03 15:27:46,817:INFO:Initializing create_model()
2024-06-03 15:27:46,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:27:46,817:INFO:Checking exceptions
2024-06-03 15:27:46,821:INFO:Importing libraries
2024-06-03 15:27:46,821:INFO:Copying training dataset
2024-06-03 15:27:46,844:INFO:Defining folds
2024-06-03 15:27:46,844:INFO:Declaring metric variables
2024-06-03 15:27:46,844:INFO:Importing untrained model
2024-06-03 15:27:46,844:INFO:Declaring custom model
2024-06-03 15:27:46,846:INFO:Random Forest Classifier Imported successfully
2024-06-03 15:27:46,846:INFO:Starting cross validation
2024-06-03 15:27:46,852:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:27:48,838:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,871:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,875:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,875:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,891:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,899:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,904:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,907:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,986:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,995:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:48,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,003:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,007:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,019:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,777:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,821:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:27:49,846:INFO:Calculating mean and std
2024-06-03 15:27:49,846:INFO:Creating metrics dataframe
2024-06-03 15:27:49,850:INFO:Finalizing model
2024-06-03 15:27:50,438:INFO:Uploading results into container
2024-06-03 15:27:50,438:INFO:Uploading model into container now
2024-06-03 15:27:50,438:INFO:_master_model_container: 20
2024-06-03 15:27:50,439:INFO:_display_container: 8
2024-06-03 15:27:50,439:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-06-03 15:27:50,439:INFO:create_model() successfully completed......................................
2024-06-03 15:27:50,595:INFO:SubProcess create_model() end ==================================
2024-06-03 15:27:50,595:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8126
2024-06-03 15:27:50,595:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8305
2024-06-03 15:27:50,599:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-06-03 15:27:50,599:INFO:choose_better completed
2024-06-03 15:27:50,624:INFO:_master_model_container: 20
2024-06-03 15:27:50,624:INFO:_display_container: 7
2024-06-03 15:27:50,624:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-06-03 15:27:50,624:INFO:tune_model() successfully completed......................................
2024-06-03 15:27:50,912:INFO:Initializing tune_model()
2024-06-03 15:27:50,913:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-06-03 15:27:50,913:INFO:Checking exceptions
2024-06-03 15:27:50,954:INFO:Copying training dataset
2024-06-03 15:27:50,966:INFO:Checking base model
2024-06-03 15:27:50,970:INFO:Base model : Gradient Boosting Classifier
2024-06-03 15:27:50,974:INFO:Declaring metric variables
2024-06-03 15:27:50,983:INFO:Defining Hyperparameters
2024-06-03 15:27:51,139:INFO:Tuning with n_jobs=-1
2024-06-03 15:27:51,139:INFO:Initializing RandomizedSearchCV
2024-06-03 15:28:32,851:INFO:best_params: {'actual_estimator__subsample': 0.75, 'actual_estimator__n_estimators': 180, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__learning_rate': 0.0001}
2024-06-03 15:28:32,851:INFO:Hyperparameter search completed
2024-06-03 15:28:32,851:INFO:SubProcess create_model() called ==================================
2024-06-03 15:28:32,855:INFO:Initializing create_model()
2024-06-03 15:28:32,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFAFCC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.75, 'n_estimators': 180, 'min_samples_split': 7, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 9, 'learning_rate': 0.0001})
2024-06-03 15:28:32,855:INFO:Checking exceptions
2024-06-03 15:28:32,855:INFO:Importing libraries
2024-06-03 15:28:32,855:INFO:Copying training dataset
2024-06-03 15:28:32,879:INFO:Defining folds
2024-06-03 15:28:32,879:INFO:Declaring metric variables
2024-06-03 15:28:32,886:INFO:Importing untrained model
2024-06-03 15:28:32,886:INFO:Declaring custom model
2024-06-03 15:28:32,894:INFO:Gradient Boosting Classifier Imported successfully
2024-06-03 15:28:32,909:INFO:Starting cross validation
2024-06-03 15:28:32,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:28:37,872:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:37,872:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:37,889:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:37,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,010:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,010:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,022:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,205:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,222:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,222:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,822:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,822:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,836:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,845:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,861:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,871:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,901:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,958:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,971:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:38,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:41,516:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:41,523:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:41,528:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:41,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:41,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:41,543:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:41,559:INFO:Calculating mean and std
2024-06-03 15:28:41,562:INFO:Creating metrics dataframe
2024-06-03 15:28:41,574:INFO:Finalizing model
2024-06-03 15:28:44,731:INFO:Uploading results into container
2024-06-03 15:28:44,732:INFO:Uploading model into container now
2024-06-03 15:28:44,733:INFO:_master_model_container: 21
2024-06-03 15:28:44,733:INFO:_display_container: 8
2024-06-03 15:28:44,734:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-06-03 15:28:44,735:INFO:create_model() successfully completed......................................
2024-06-03 15:28:44,913:INFO:SubProcess create_model() end ==================================
2024-06-03 15:28:44,914:INFO:choose_better activated
2024-06-03 15:28:44,922:INFO:SubProcess create_model() called ==================================
2024-06-03 15:28:44,923:INFO:Initializing create_model()
2024-06-03 15:28:44,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:28:44,924:INFO:Checking exceptions
2024-06-03 15:28:44,927:INFO:Importing libraries
2024-06-03 15:28:44,927:INFO:Copying training dataset
2024-06-03 15:28:44,945:INFO:Defining folds
2024-06-03 15:28:44,945:INFO:Declaring metric variables
2024-06-03 15:28:44,945:INFO:Importing untrained model
2024-06-03 15:28:44,945:INFO:Declaring custom model
2024-06-03 15:28:44,946:INFO:Gradient Boosting Classifier Imported successfully
2024-06-03 15:28:44,947:INFO:Starting cross validation
2024-06-03 15:28:44,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:28:48,131:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,137:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,281:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,288:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:48,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,123:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,132:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,135:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,139:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,142:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,160:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,163:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,177:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,218:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,226:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:49,233:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:50,821:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:50,825:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:50,830:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:50,978:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:50,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:50,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:28:51,003:INFO:Calculating mean and std
2024-06-03 15:28:51,005:INFO:Creating metrics dataframe
2024-06-03 15:28:51,009:INFO:Finalizing model
2024-06-03 15:28:53,497:INFO:Uploading results into container
2024-06-03 15:28:53,498:INFO:Uploading model into container now
2024-06-03 15:28:53,498:INFO:_master_model_container: 22
2024-06-03 15:28:53,498:INFO:_display_container: 9
2024-06-03 15:28:53,499:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-06-03 15:28:53,499:INFO:create_model() successfully completed......................................
2024-06-03 15:28:53,651:INFO:SubProcess create_model() end ==================================
2024-06-03 15:28:53,652:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.7861
2024-06-03 15:28:53,653:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.7921
2024-06-03 15:28:53,653:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-06-03 15:28:53,654:INFO:choose_better completed
2024-06-03 15:28:53,683:INFO:_master_model_container: 22
2024-06-03 15:28:53,683:INFO:_display_container: 8
2024-06-03 15:28:53,685:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.0001, loss='log_loss', max_depth=9,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.0005, min_samples_leaf=3,
                           min_samples_split=7, min_weight_fraction_leaf=0.0,
                           n_estimators=180, n_iter_no_change=None,
                           random_state=123, subsample=0.75, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-06-03 15:28:53,685:INFO:tune_model() successfully completed......................................
2024-06-03 15:28:53,915:INFO:Initializing tune_model()
2024-06-03 15:28:53,915:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-06-03 15:28:53,916:INFO:Checking exceptions
2024-06-03 15:28:53,961:INFO:Copying training dataset
2024-06-03 15:28:53,980:INFO:Checking base model
2024-06-03 15:28:53,980:INFO:Base model : Ada Boost Classifier
2024-06-03 15:28:53,987:INFO:Declaring metric variables
2024-06-03 15:28:53,995:INFO:Defining Hyperparameters
2024-06-03 15:28:54,217:INFO:Tuning with n_jobs=-1
2024-06-03 15:28:54,217:INFO:Initializing RandomizedSearchCV
2024-06-03 15:29:35,950:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__algorithm': 'SAMME'}
2024-06-03 15:29:35,951:INFO:Hyperparameter search completed
2024-06-03 15:29:35,951:INFO:SubProcess create_model() called ==================================
2024-06-03 15:29:35,952:INFO:Initializing create_model()
2024-06-03 15:29:35,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CDC84610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'learning_rate': 0.4, 'algorithm': 'SAMME'})
2024-06-03 15:29:35,952:INFO:Checking exceptions
2024-06-03 15:29:35,952:INFO:Importing libraries
2024-06-03 15:29:35,952:INFO:Copying training dataset
2024-06-03 15:29:35,971:INFO:Defining folds
2024-06-03 15:29:35,971:INFO:Declaring metric variables
2024-06-03 15:29:35,974:INFO:Importing untrained model
2024-06-03 15:29:35,974:INFO:Declaring custom model
2024-06-03 15:29:35,983:INFO:Ada Boost Classifier Imported successfully
2024-06-03 15:29:35,991:INFO:Starting cross validation
2024-06-03 15:29:36,000:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:29:39,331:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,331:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,335:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,335:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,335:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,348:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,352:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,352:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,371:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,382:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,901:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,901:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,945:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,948:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:39,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:42,057:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:42,067:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:42,071:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:42,071:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:42,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:42,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:42,092:INFO:Calculating mean and std
2024-06-03 15:29:42,092:INFO:Creating metrics dataframe
2024-06-03 15:29:42,103:INFO:Finalizing model
2024-06-03 15:29:44,407:INFO:Uploading results into container
2024-06-03 15:29:44,408:INFO:Uploading model into container now
2024-06-03 15:29:44,408:INFO:_master_model_container: 23
2024-06-03 15:29:44,410:INFO:_display_container: 9
2024-06-03 15:29:44,410:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123)
2024-06-03 15:29:44,410:INFO:create_model() successfully completed......................................
2024-06-03 15:29:44,563:INFO:SubProcess create_model() end ==================================
2024-06-03 15:29:44,563:INFO:choose_better activated
2024-06-03 15:29:44,563:INFO:SubProcess create_model() called ==================================
2024-06-03 15:29:44,563:INFO:Initializing create_model()
2024-06-03 15:29:44,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:29:44,563:INFO:Checking exceptions
2024-06-03 15:29:44,563:INFO:Importing libraries
2024-06-03 15:29:44,563:INFO:Copying training dataset
2024-06-03 15:29:44,595:INFO:Defining folds
2024-06-03 15:29:44,595:INFO:Declaring metric variables
2024-06-03 15:29:44,595:INFO:Importing untrained model
2024-06-03 15:29:44,595:INFO:Declaring custom model
2024-06-03 15:29:44,595:INFO:Ada Boost Classifier Imported successfully
2024-06-03 15:29:44,595:INFO:Starting cross validation
2024-06-03 15:29:44,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:29:44,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:44,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:44,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:44,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:44,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:44,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:45,045:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:45,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:45,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,704:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,737:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,799:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,861:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,861:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,877:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,877:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,877:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,877:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:45,940:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:45,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:46,479:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:46,488:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:46,495:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:46,495:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:46,495:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:46,495:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:46,511:INFO:Calculating mean and std
2024-06-03 15:29:46,511:INFO:Creating metrics dataframe
2024-06-03 15:29:46,511:INFO:Finalizing model
2024-06-03 15:29:46,795:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:29:47,363:INFO:Uploading results into container
2024-06-03 15:29:47,363:INFO:Uploading model into container now
2024-06-03 15:29:47,363:INFO:_master_model_container: 24
2024-06-03 15:29:47,363:INFO:_display_container: 10
2024-06-03 15:29:47,363:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-06-03 15:29:47,363:INFO:create_model() successfully completed......................................
2024-06-03 15:29:47,520:INFO:SubProcess create_model() end ==================================
2024-06-03 15:29:47,520:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123) result for Accuracy is 0.7525
2024-06-03 15:29:47,520:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123) result for Accuracy is 0.744
2024-06-03 15:29:47,520:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123) is best model
2024-06-03 15:29:47,520:INFO:choose_better completed
2024-06-03 15:29:47,520:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-06-03 15:29:47,552:INFO:_master_model_container: 24
2024-06-03 15:29:47,553:INFO:_display_container: 9
2024-06-03 15:29:47,553:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-06-03 15:29:47,553:INFO:tune_model() successfully completed......................................
2024-06-03 15:29:47,750:INFO:Initializing tune_model()
2024-06-03 15:29:47,750:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-06-03 15:29:47,754:INFO:Checking exceptions
2024-06-03 15:29:47,819:INFO:Copying training dataset
2024-06-03 15:29:47,844:INFO:Checking base model
2024-06-03 15:29:47,844:INFO:Base model : Decision Tree Classifier
2024-06-03 15:29:47,855:INFO:Declaring metric variables
2024-06-03 15:29:47,861:INFO:Defining Hyperparameters
2024-06-03 15:29:48,105:INFO:Tuning with n_jobs=-1
2024-06-03 15:29:48,105:INFO:Initializing RandomizedSearchCV
2024-06-03 15:29:54,470:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy'}
2024-06-03 15:29:54,470:INFO:Hyperparameter search completed
2024-06-03 15:29:54,470:INFO:SubProcess create_model() called ==================================
2024-06-03 15:29:54,470:INFO:Initializing create_model()
2024-06-03 15:29:54,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CF014C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.2, 'max_features': 'sqrt', 'max_depth': 5, 'criterion': 'entropy'})
2024-06-03 15:29:54,470:INFO:Checking exceptions
2024-06-03 15:29:54,470:INFO:Importing libraries
2024-06-03 15:29:54,470:INFO:Copying training dataset
2024-06-03 15:29:54,490:INFO:Defining folds
2024-06-03 15:29:54,491:INFO:Declaring metric variables
2024-06-03 15:29:54,491:INFO:Importing untrained model
2024-06-03 15:29:54,491:INFO:Declaring custom model
2024-06-03 15:29:54,499:INFO:Decision Tree Classifier Imported successfully
2024-06-03 15:29:54,516:INFO:Starting cross validation
2024-06-03 15:29:54,518:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:29:54,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:54,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,003:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,007:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,007:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,019:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,027:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,031:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,035:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,046:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,051:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,055:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,063:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,063:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,067:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,091:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,091:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,091:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,095:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,099:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,099:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,136:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,140:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,140:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,144:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,376:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,383:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,393:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,402:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:29:55,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:55,413:INFO:Calculating mean and std
2024-06-03 15:29:55,418:INFO:Creating metrics dataframe
2024-06-03 15:29:55,426:INFO:Finalizing model
2024-06-03 15:29:55,641:INFO:Uploading results into container
2024-06-03 15:29:55,643:INFO:Uploading model into container now
2024-06-03 15:29:55,643:INFO:_master_model_container: 25
2024-06-03 15:29:55,643:INFO:_display_container: 10
2024-06-03 15:29:55,643:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-06-03 15:29:55,643:INFO:create_model() successfully completed......................................
2024-06-03 15:29:55,788:INFO:SubProcess create_model() end ==================================
2024-06-03 15:29:55,788:INFO:choose_better activated
2024-06-03 15:29:55,796:INFO:SubProcess create_model() called ==================================
2024-06-03 15:29:55,796:INFO:Initializing create_model()
2024-06-03 15:29:55,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:29:55,796:INFO:Checking exceptions
2024-06-03 15:29:55,800:INFO:Importing libraries
2024-06-03 15:29:55,800:INFO:Copying training dataset
2024-06-03 15:29:55,825:INFO:Defining folds
2024-06-03 15:29:55,825:INFO:Declaring metric variables
2024-06-03 15:29:55,825:INFO:Importing untrained model
2024-06-03 15:29:55,825:INFO:Declaring custom model
2024-06-03 15:29:55,827:INFO:Decision Tree Classifier Imported successfully
2024-06-03 15:29:55,827:INFO:Starting cross validation
2024-06-03 15:29:55,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:29:56,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,428:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,432:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,440:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,440:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,446:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,452:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,452:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,512:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,512:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,516:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,516:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,516:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,532:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,774:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,776:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,788:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,793:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:56,805:INFO:Calculating mean and std
2024-06-03 15:29:56,805:INFO:Creating metrics dataframe
2024-06-03 15:29:56,809:INFO:Finalizing model
2024-06-03 15:29:57,112:INFO:Uploading results into container
2024-06-03 15:29:57,112:INFO:Uploading model into container now
2024-06-03 15:29:57,116:INFO:_master_model_container: 26
2024-06-03 15:29:57,116:INFO:_display_container: 11
2024-06-03 15:29:57,116:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-06-03 15:29:57,116:INFO:create_model() successfully completed......................................
2024-06-03 15:29:57,265:INFO:SubProcess create_model() end ==================================
2024-06-03 15:29:57,265:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.7272
2024-06-03 15:29:57,265:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.8305
2024-06-03 15:29:57,265:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') is best model
2024-06-03 15:29:57,265:INFO:choose_better completed
2024-06-03 15:29:57,289:INFO:_master_model_container: 26
2024-06-03 15:29:57,289:INFO:_display_container: 10
2024-06-03 15:29:57,290:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-06-03 15:29:57,290:INFO:tune_model() successfully completed......................................
2024-06-03 15:29:57,505:INFO:Initializing compare_models()
2024-06-03 15:29:57,506:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-06-03 15:29:57,506:INFO:Checking exceptions
2024-06-03 15:29:57,519:INFO:Preparing display monitor
2024-06-03 15:29:57,601:INFO:Initializing Logistic Regression
2024-06-03 15:29:57,601:INFO:Total runtime is 5.2877267201741536e-05 minutes
2024-06-03 15:29:57,613:INFO:SubProcess create_model() called ==================================
2024-06-03 15:29:57,614:INFO:Initializing create_model()
2024-06-03 15:29:57,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:29:57,615:INFO:Checking exceptions
2024-06-03 15:29:57,615:INFO:Importing libraries
2024-06-03 15:29:57,615:INFO:Copying training dataset
2024-06-03 15:29:57,649:INFO:Defining folds
2024-06-03 15:29:57,649:INFO:Declaring metric variables
2024-06-03 15:29:57,656:INFO:Importing untrained model
2024-06-03 15:29:57,663:INFO:Logistic Regression Imported successfully
2024-06-03 15:29:57,700:INFO:Starting cross validation
2024-06-03 15:29:57,708:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:29:58,652:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:58,652:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:58,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:58,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:58,688:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:58,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:58,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:58,769:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,773:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,777:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:58,777:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,781:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,785:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,785:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,793:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,801:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,801:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,810:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,850:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,850:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,858:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,862:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,886:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,894:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,894:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,902:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,902:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:58,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:59,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:59,312:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:29:59,356:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:59,360:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:59,364:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:59,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:59,376:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:59,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:29:59,388:INFO:Calculating mean and std
2024-06-03 15:29:59,392:INFO:Creating metrics dataframe
2024-06-03 15:29:59,392:INFO:Uploading results into container
2024-06-03 15:29:59,396:INFO:Uploading model into container now
2024-06-03 15:29:59,396:INFO:_master_model_container: 27
2024-06-03 15:29:59,396:INFO:_display_container: 11
2024-06-03 15:29:59,396:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-06-03 15:29:59,396:INFO:create_model() successfully completed......................................
2024-06-03 15:29:59,542:INFO:SubProcess create_model() end ==================================
2024-06-03 15:29:59,546:INFO:Creating metrics dataframe
2024-06-03 15:29:59,566:INFO:Initializing K Neighbors Classifier
2024-06-03 15:29:59,570:INFO:Total runtime is 0.03287496169408162 minutes
2024-06-03 15:29:59,580:INFO:SubProcess create_model() called ==================================
2024-06-03 15:29:59,582:INFO:Initializing create_model()
2024-06-03 15:29:59,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:29:59,582:INFO:Checking exceptions
2024-06-03 15:29:59,583:INFO:Importing libraries
2024-06-03 15:29:59,583:INFO:Copying training dataset
2024-06-03 15:29:59,607:INFO:Defining folds
2024-06-03 15:29:59,607:INFO:Declaring metric variables
2024-06-03 15:29:59,616:INFO:Importing untrained model
2024-06-03 15:29:59,625:INFO:K Neighbors Classifier Imported successfully
2024-06-03 15:29:59,645:INFO:Starting cross validation
2024-06-03 15:29:59,652:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:00,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,327:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,331:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,331:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,331:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,339:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,339:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,347:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,399:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,411:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,427:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,435:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,439:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,447:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,459:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,706:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,708:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,710:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,718:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:00,726:INFO:Calculating mean and std
2024-06-03 15:30:00,730:INFO:Creating metrics dataframe
2024-06-03 15:30:00,730:INFO:Uploading results into container
2024-06-03 15:30:00,734:INFO:Uploading model into container now
2024-06-03 15:30:00,734:INFO:_master_model_container: 28
2024-06-03 15:30:00,734:INFO:_display_container: 11
2024-06-03 15:30:00,734:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-06-03 15:30:00,734:INFO:create_model() successfully completed......................................
2024-06-03 15:30:00,889:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:00,889:INFO:Creating metrics dataframe
2024-06-03 15:30:00,910:INFO:Initializing Naive Bayes
2024-06-03 15:30:00,910:INFO:Total runtime is 0.05519390106201172 minutes
2024-06-03 15:30:00,920:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:00,922:INFO:Initializing create_model()
2024-06-03 15:30:00,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:00,923:INFO:Checking exceptions
2024-06-03 15:30:00,923:INFO:Importing libraries
2024-06-03 15:30:00,923:INFO:Copying training dataset
2024-06-03 15:30:00,942:INFO:Defining folds
2024-06-03 15:30:00,942:INFO:Declaring metric variables
2024-06-03 15:30:00,953:INFO:Importing untrained model
2024-06-03 15:30:00,966:INFO:Naive Bayes Imported successfully
2024-06-03 15:30:00,982:INFO:Starting cross validation
2024-06-03 15:30:00,984:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:01,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,494:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,494:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,502:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,502:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,506:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,506:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,514:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,514:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,518:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,590:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,590:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,598:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,708:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,716:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,844:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,853:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,853:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,858:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,860:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:01,872:INFO:Calculating mean and std
2024-06-03 15:30:01,872:INFO:Creating metrics dataframe
2024-06-03 15:30:01,876:INFO:Uploading results into container
2024-06-03 15:30:01,876:INFO:Uploading model into container now
2024-06-03 15:30:01,876:INFO:_master_model_container: 29
2024-06-03 15:30:01,876:INFO:_display_container: 11
2024-06-03 15:30:01,876:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-06-03 15:30:01,876:INFO:create_model() successfully completed......................................
2024-06-03 15:30:02,013:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:02,013:INFO:Creating metrics dataframe
2024-06-03 15:30:02,033:INFO:Initializing Decision Tree Classifier
2024-06-03 15:30:02,033:INFO:Total runtime is 0.07392184336980184 minutes
2024-06-03 15:30:02,042:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:02,043:INFO:Initializing create_model()
2024-06-03 15:30:02,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:02,043:INFO:Checking exceptions
2024-06-03 15:30:02,044:INFO:Importing libraries
2024-06-03 15:30:02,044:INFO:Copying training dataset
2024-06-03 15:30:02,062:INFO:Defining folds
2024-06-03 15:30:02,062:INFO:Declaring metric variables
2024-06-03 15:30:02,068:INFO:Importing untrained model
2024-06-03 15:30:02,078:INFO:Decision Tree Classifier Imported successfully
2024-06-03 15:30:02,091:INFO:Starting cross validation
2024-06-03 15:30:02,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:02,625:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,641:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,641:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,645:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,653:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,669:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,673:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,689:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,709:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,725:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,737:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,737:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,741:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,745:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,993:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,993:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:02,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,001:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,009:INFO:Calculating mean and std
2024-06-03 15:30:03,013:INFO:Creating metrics dataframe
2024-06-03 15:30:03,013:INFO:Uploading results into container
2024-06-03 15:30:03,017:INFO:Uploading model into container now
2024-06-03 15:30:03,017:INFO:_master_model_container: 30
2024-06-03 15:30:03,017:INFO:_display_container: 11
2024-06-03 15:30:03,017:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-06-03 15:30:03,017:INFO:create_model() successfully completed......................................
2024-06-03 15:30:03,156:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:03,156:INFO:Creating metrics dataframe
2024-06-03 15:30:03,184:INFO:Initializing SVM - Linear Kernel
2024-06-03 15:30:03,184:INFO:Total runtime is 0.09310518900553386 minutes
2024-06-03 15:30:03,192:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:03,192:INFO:Initializing create_model()
2024-06-03 15:30:03,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:03,192:INFO:Checking exceptions
2024-06-03 15:30:03,192:INFO:Importing libraries
2024-06-03 15:30:03,192:INFO:Copying training dataset
2024-06-03 15:30:03,218:INFO:Defining folds
2024-06-03 15:30:03,218:INFO:Declaring metric variables
2024-06-03 15:30:03,221:INFO:Importing untrained model
2024-06-03 15:30:03,237:INFO:SVM - Linear Kernel Imported successfully
2024-06-03 15:30:03,252:INFO:Starting cross validation
2024-06-03 15:30:03,256:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:03,707:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,715:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,723:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,759:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,763:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:03,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,771:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,779:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,779:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,783:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:03,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,803:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,807:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,811:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,811:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,819:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,819:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,819:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:03,823:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,823:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:03,827:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,045:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,057:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,243:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,247:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,256:INFO:Calculating mean and std
2024-06-03 15:30:04,259:INFO:Creating metrics dataframe
2024-06-03 15:30:04,263:INFO:Uploading results into container
2024-06-03 15:30:04,263:INFO:Uploading model into container now
2024-06-03 15:30:04,263:INFO:_master_model_container: 31
2024-06-03 15:30:04,263:INFO:_display_container: 11
2024-06-03 15:30:04,263:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-06-03 15:30:04,263:INFO:create_model() successfully completed......................................
2024-06-03 15:30:04,404:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:04,404:INFO:Creating metrics dataframe
2024-06-03 15:30:04,426:INFO:Initializing Ridge Classifier
2024-06-03 15:30:04,426:INFO:Total runtime is 0.11379772027333578 minutes
2024-06-03 15:30:04,433:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:04,433:INFO:Initializing create_model()
2024-06-03 15:30:04,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:04,433:INFO:Checking exceptions
2024-06-03 15:30:04,433:INFO:Importing libraries
2024-06-03 15:30:04,433:INFO:Copying training dataset
2024-06-03 15:30:04,458:INFO:Defining folds
2024-06-03 15:30:04,458:INFO:Declaring metric variables
2024-06-03 15:30:04,463:INFO:Importing untrained model
2024-06-03 15:30:04,470:INFO:Ridge Classifier Imported successfully
2024-06-03 15:30:04,482:INFO:Starting cross validation
2024-06-03 15:30:04,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:04,964:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,980:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:04,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,008:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,016:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,024:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,028:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,085:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,085:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,101:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,109:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,275:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,283:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,303:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:05,315:INFO:Calculating mean and std
2024-06-03 15:30:05,315:INFO:Creating metrics dataframe
2024-06-03 15:30:05,319:INFO:Uploading results into container
2024-06-03 15:30:05,319:INFO:Uploading model into container now
2024-06-03 15:30:05,319:INFO:_master_model_container: 32
2024-06-03 15:30:05,319:INFO:_display_container: 11
2024-06-03 15:30:05,323:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-06-03 15:30:05,323:INFO:create_model() successfully completed......................................
2024-06-03 15:30:05,483:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:05,483:INFO:Creating metrics dataframe
2024-06-03 15:30:05,506:INFO:Initializing Random Forest Classifier
2024-06-03 15:30:05,506:INFO:Total runtime is 0.1317963679631551 minutes
2024-06-03 15:30:05,513:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:05,513:INFO:Initializing create_model()
2024-06-03 15:30:05,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:05,513:INFO:Checking exceptions
2024-06-03 15:30:05,513:INFO:Importing libraries
2024-06-03 15:30:05,516:INFO:Copying training dataset
2024-06-03 15:30:05,541:INFO:Defining folds
2024-06-03 15:30:05,541:INFO:Declaring metric variables
2024-06-03 15:30:05,551:INFO:Importing untrained model
2024-06-03 15:30:05,558:INFO:Random Forest Classifier Imported successfully
2024-06-03 15:30:05,580:INFO:Starting cross validation
2024-06-03 15:30:05,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:07,241:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,249:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,265:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,277:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,281:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,281:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,285:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,289:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,289:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,297:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,297:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,415:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,428:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,436:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,452:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:07,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,050:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,055:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,057:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,063:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,070:INFO:Calculating mean and std
2024-06-03 15:30:08,072:INFO:Creating metrics dataframe
2024-06-03 15:30:08,075:INFO:Uploading results into container
2024-06-03 15:30:08,076:INFO:Uploading model into container now
2024-06-03 15:30:08,076:INFO:_master_model_container: 33
2024-06-03 15:30:08,076:INFO:_display_container: 11
2024-06-03 15:30:08,077:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-06-03 15:30:08,077:INFO:create_model() successfully completed......................................
2024-06-03 15:30:08,206:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:08,206:INFO:Creating metrics dataframe
2024-06-03 15:30:08,226:INFO:Initializing Quadratic Discriminant Analysis
2024-06-03 15:30:08,226:INFO:Total runtime is 0.17713648875554402 minutes
2024-06-03 15:30:08,236:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:08,236:INFO:Initializing create_model()
2024-06-03 15:30:08,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:08,237:INFO:Checking exceptions
2024-06-03 15:30:08,237:INFO:Importing libraries
2024-06-03 15:30:08,237:INFO:Copying training dataset
2024-06-03 15:30:08,266:INFO:Defining folds
2024-06-03 15:30:08,266:INFO:Declaring metric variables
2024-06-03 15:30:08,275:INFO:Importing untrained model
2024-06-03 15:30:08,283:INFO:Quadratic Discriminant Analysis Imported successfully
2024-06-03 15:30:08,303:INFO:Starting cross validation
2024-06-03 15:30:08,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:08,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:08,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:08,780:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:08,808:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:08,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:08,816:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:08,840:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:08,852:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:08,904:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,912:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,912:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:08,920:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,924:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,928:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,936:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,940:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,940:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,948:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,960:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,960:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,960:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,964:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:08,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,972:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:08,976:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,976:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,980:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:08,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,000:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,006:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,230:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:09,246:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:09,338:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,343:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,346:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:09,350:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,352:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,354:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:09,354:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:09,370:INFO:Calculating mean and std
2024-06-03 15:30:09,370:INFO:Creating metrics dataframe
2024-06-03 15:30:09,377:INFO:Uploading results into container
2024-06-03 15:30:09,379:INFO:Uploading model into container now
2024-06-03 15:30:09,379:INFO:_master_model_container: 34
2024-06-03 15:30:09,379:INFO:_display_container: 11
2024-06-03 15:30:09,379:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-06-03 15:30:09,379:INFO:create_model() successfully completed......................................
2024-06-03 15:30:09,595:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:09,595:INFO:Creating metrics dataframe
2024-06-03 15:30:09,616:INFO:Initializing Ada Boost Classifier
2024-06-03 15:30:09,616:INFO:Total runtime is 0.2003029465675354 minutes
2024-06-03 15:30:09,627:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:09,628:INFO:Initializing create_model()
2024-06-03 15:30:09,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:09,628:INFO:Checking exceptions
2024-06-03 15:30:09,629:INFO:Importing libraries
2024-06-03 15:30:09,629:INFO:Copying training dataset
2024-06-03 15:30:09,649:INFO:Defining folds
2024-06-03 15:30:09,649:INFO:Declaring metric variables
2024-06-03 15:30:09,657:INFO:Importing untrained model
2024-06-03 15:30:09,665:INFO:Ada Boost Classifier Imported successfully
2024-06-03 15:30:09,679:INFO:Starting cross validation
2024-06-03 15:30:09,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:10,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:10,161:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:10,228:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:10,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:10,252:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:10,252:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:10,260:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:10,300:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:11,125:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,133:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,141:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,161:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,233:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,241:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,249:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,269:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,277:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,289:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,301:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,325:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,369:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,381:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,381:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,394:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:11,487:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:11,517:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:30:12,138:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:12,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:12,154:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:12,161:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:12,165:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:12,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:12,188:INFO:Calculating mean and std
2024-06-03 15:30:12,194:INFO:Creating metrics dataframe
2024-06-03 15:30:12,202:INFO:Uploading results into container
2024-06-03 15:30:12,203:INFO:Uploading model into container now
2024-06-03 15:30:12,206:INFO:_master_model_container: 35
2024-06-03 15:30:12,206:INFO:_display_container: 11
2024-06-03 15:30:12,206:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-06-03 15:30:12,206:INFO:create_model() successfully completed......................................
2024-06-03 15:30:12,353:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:12,357:INFO:Creating metrics dataframe
2024-06-03 15:30:12,382:INFO:Initializing Gradient Boosting Classifier
2024-06-03 15:30:12,382:INFO:Total runtime is 0.24639645814895628 minutes
2024-06-03 15:30:12,386:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:12,386:INFO:Initializing create_model()
2024-06-03 15:30:12,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:12,390:INFO:Checking exceptions
2024-06-03 15:30:12,390:INFO:Importing libraries
2024-06-03 15:30:12,390:INFO:Copying training dataset
2024-06-03 15:30:12,412:INFO:Defining folds
2024-06-03 15:30:12,412:INFO:Declaring metric variables
2024-06-03 15:30:12,420:INFO:Importing untrained model
2024-06-03 15:30:12,432:INFO:Gradient Boosting Classifier Imported successfully
2024-06-03 15:30:12,449:INFO:Starting cross validation
2024-06-03 15:30:12,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:15,508:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:15,516:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:15,524:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:15,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:15,609:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:15,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:15,680:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:15,688:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:15,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,336:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,348:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,352:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,368:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,376:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,380:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,404:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,416:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,617:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,625:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:16,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:18,079:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:18,087:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:18,095:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:18,139:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:18,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:18,151:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:18,165:INFO:Calculating mean and std
2024-06-03 15:30:18,167:INFO:Creating metrics dataframe
2024-06-03 15:30:18,176:INFO:Uploading results into container
2024-06-03 15:30:18,176:INFO:Uploading model into container now
2024-06-03 15:30:18,176:INFO:_master_model_container: 36
2024-06-03 15:30:18,179:INFO:_display_container: 11
2024-06-03 15:30:18,179:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-06-03 15:30:18,180:INFO:create_model() successfully completed......................................
2024-06-03 15:30:18,337:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:18,337:INFO:Creating metrics dataframe
2024-06-03 15:30:18,362:INFO:Initializing Linear Discriminant Analysis
2024-06-03 15:30:18,362:INFO:Total runtime is 0.34606565634409586 minutes
2024-06-03 15:30:18,370:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:18,370:INFO:Initializing create_model()
2024-06-03 15:30:18,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:18,371:INFO:Checking exceptions
2024-06-03 15:30:18,371:INFO:Importing libraries
2024-06-03 15:30:18,371:INFO:Copying training dataset
2024-06-03 15:30:18,391:INFO:Defining folds
2024-06-03 15:30:18,391:INFO:Declaring metric variables
2024-06-03 15:30:18,403:INFO:Importing untrained model
2024-06-03 15:30:18,409:INFO:Linear Discriminant Analysis Imported successfully
2024-06-03 15:30:18,430:INFO:Starting cross validation
2024-06-03 15:30:18,437:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:19,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,094:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,102:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,130:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,130:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,138:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,198:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,206:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,210:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,214:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,218:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,222:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,242:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,250:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,258:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,266:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,274:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,286:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,322:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,559:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,567:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,567:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,571:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,584:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:19,600:INFO:Calculating mean and std
2024-06-03 15:30:19,604:INFO:Creating metrics dataframe
2024-06-03 15:30:19,608:INFO:Uploading results into container
2024-06-03 15:30:19,609:INFO:Uploading model into container now
2024-06-03 15:30:19,612:INFO:_master_model_container: 37
2024-06-03 15:30:19,612:INFO:_display_container: 11
2024-06-03 15:30:19,612:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-06-03 15:30:19,612:INFO:create_model() successfully completed......................................
2024-06-03 15:30:19,752:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:19,752:INFO:Creating metrics dataframe
2024-06-03 15:30:19,768:INFO:Initializing Extra Trees Classifier
2024-06-03 15:30:19,768:INFO:Total runtime is 0.36950616041819256 minutes
2024-06-03 15:30:19,776:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:19,776:INFO:Initializing create_model()
2024-06-03 15:30:19,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:19,776:INFO:Checking exceptions
2024-06-03 15:30:19,776:INFO:Importing libraries
2024-06-03 15:30:19,776:INFO:Copying training dataset
2024-06-03 15:30:19,800:INFO:Defining folds
2024-06-03 15:30:19,802:INFO:Declaring metric variables
2024-06-03 15:30:19,809:INFO:Importing untrained model
2024-06-03 15:30:19,821:INFO:Extra Trees Classifier Imported successfully
2024-06-03 15:30:19,834:INFO:Starting cross validation
2024-06-03 15:30:19,842:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:21,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,405:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,409:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,413:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,482:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,491:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,495:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,499:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,502:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,511:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,528:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,536:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,560:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:21,646:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:22,184:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:22,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:22,192:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:22,196:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:22,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:22,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:22,212:INFO:Calculating mean and std
2024-06-03 15:30:22,216:INFO:Creating metrics dataframe
2024-06-03 15:30:22,220:INFO:Uploading results into container
2024-06-03 15:30:22,221:INFO:Uploading model into container now
2024-06-03 15:30:22,221:INFO:_master_model_container: 38
2024-06-03 15:30:22,221:INFO:_display_container: 11
2024-06-03 15:30:22,224:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-06-03 15:30:22,224:INFO:create_model() successfully completed......................................
2024-06-03 15:30:22,369:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:22,369:INFO:Creating metrics dataframe
2024-06-03 15:30:22,394:INFO:Initializing Light Gradient Boosting Machine
2024-06-03 15:30:22,394:INFO:Total runtime is 0.4132642110188802 minutes
2024-06-03 15:30:22,399:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:22,399:INFO:Initializing create_model()
2024-06-03 15:30:22,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:22,399:INFO:Checking exceptions
2024-06-03 15:30:22,399:INFO:Importing libraries
2024-06-03 15:30:22,399:INFO:Copying training dataset
2024-06-03 15:30:22,419:INFO:Defining folds
2024-06-03 15:30:22,419:INFO:Declaring metric variables
2024-06-03 15:30:22,429:INFO:Importing untrained model
2024-06-03 15:30:22,438:INFO:Light Gradient Boosting Machine Imported successfully
2024-06-03 15:30:22,453:INFO:Starting cross validation
2024-06-03 15:30:22,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:25,639:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:25,643:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:25,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:25,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:25,654:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:25,659:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:25,934:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:25,942:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:25,950:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,130:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,138:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,545:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,561:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:26,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:27,378:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:27,382:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:27,386:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:27,390:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:27,394:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:27,398:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:27,412:INFO:Calculating mean and std
2024-06-03 15:30:27,415:INFO:Creating metrics dataframe
2024-06-03 15:30:27,419:INFO:Uploading results into container
2024-06-03 15:30:27,420:INFO:Uploading model into container now
2024-06-03 15:30:27,421:INFO:_master_model_container: 39
2024-06-03 15:30:27,421:INFO:_display_container: 11
2024-06-03 15:30:27,423:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-06-03 15:30:27,423:INFO:create_model() successfully completed......................................
2024-06-03 15:30:27,586:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:27,587:INFO:Creating metrics dataframe
2024-06-03 15:30:27,613:INFO:Initializing Dummy Classifier
2024-06-03 15:30:27,613:INFO:Total runtime is 0.5002491116523743 minutes
2024-06-03 15:30:27,624:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:27,624:INFO:Initializing create_model()
2024-06-03 15:30:27,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF0A4D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:27,625:INFO:Checking exceptions
2024-06-03 15:30:27,626:INFO:Importing libraries
2024-06-03 15:30:27,626:INFO:Copying training dataset
2024-06-03 15:30:27,649:INFO:Defining folds
2024-06-03 15:30:27,649:INFO:Declaring metric variables
2024-06-03 15:30:27,660:INFO:Importing untrained model
2024-06-03 15:30:27,671:INFO:Dummy Classifier Imported successfully
2024-06-03 15:30:27,689:INFO:Starting cross validation
2024-06-03 15:30:27,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:28,286:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,298:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,304:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,307:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,311:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,317:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,327:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,338:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,348:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,409:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,412:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,413:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,416:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,418:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,421:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,423:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,442:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,442:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,459:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,460:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,475:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,480:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,725:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,736:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,740:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,818:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,827:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:28,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:28,850:INFO:Calculating mean and std
2024-06-03 15:30:28,852:INFO:Creating metrics dataframe
2024-06-03 15:30:28,855:INFO:Uploading results into container
2024-06-03 15:30:28,856:INFO:Uploading model into container now
2024-06-03 15:30:28,857:INFO:_master_model_container: 40
2024-06-03 15:30:28,857:INFO:_display_container: 11
2024-06-03 15:30:28,858:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:30:28,858:INFO:create_model() successfully completed......................................
2024-06-03 15:30:29,020:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:29,020:INFO:Creating metrics dataframe
2024-06-03 15:30:29,059:INFO:Initializing create_model()
2024-06-03 15:30:29,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:29,059:INFO:Checking exceptions
2024-06-03 15:30:29,062:INFO:Importing libraries
2024-06-03 15:30:29,062:INFO:Copying training dataset
2024-06-03 15:30:29,084:INFO:Defining folds
2024-06-03 15:30:29,085:INFO:Declaring metric variables
2024-06-03 15:30:29,085:INFO:Importing untrained model
2024-06-03 15:30:29,085:INFO:Declaring custom model
2024-06-03 15:30:29,086:INFO:Dummy Classifier Imported successfully
2024-06-03 15:30:29,088:INFO:Cross validation set to False
2024-06-03 15:30:29,088:INFO:Fitting Model
2024-06-03 15:30:29,311:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:30:29,311:INFO:create_model() successfully completed......................................
2024-06-03 15:30:29,527:INFO:_master_model_container: 40
2024-06-03 15:30:29,527:INFO:_display_container: 11
2024-06-03 15:30:29,528:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:30:29,528:INFO:compare_models() successfully completed......................................
2024-06-03 15:30:42,926:INFO:Initializing compare_models()
2024-06-03 15:30:42,926:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-06-03 15:30:42,926:INFO:Checking exceptions
2024-06-03 15:30:42,941:INFO:Preparing display monitor
2024-06-03 15:30:43,008:INFO:Initializing Logistic Regression
2024-06-03 15:30:43,008:INFO:Total runtime is 0.0 minutes
2024-06-03 15:30:43,023:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:43,024:INFO:Initializing create_model()
2024-06-03 15:30:43,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:43,025:INFO:Checking exceptions
2024-06-03 15:30:43,025:INFO:Importing libraries
2024-06-03 15:30:43,025:INFO:Copying training dataset
2024-06-03 15:30:43,046:INFO:Defining folds
2024-06-03 15:30:43,046:INFO:Declaring metric variables
2024-06-03 15:30:43,054:INFO:Importing untrained model
2024-06-03 15:30:43,064:INFO:Logistic Regression Imported successfully
2024-06-03 15:30:43,083:INFO:Starting cross validation
2024-06-03 15:30:43,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:44,359:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:44,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:44,412:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:44,515:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,532:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,541:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,541:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,550:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,567:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,577:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,586:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,674:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:44,716:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:44,747:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:44,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:44,753:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:44,816:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,828:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,838:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,897:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,907:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,911:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,915:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,919:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,919:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,927:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,927:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:44,930:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:45,355:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:45,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-06-03 15:30:45,445:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:45,460:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:45,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:45,526:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:45,532:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:45,534:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:45,542:INFO:Calculating mean and std
2024-06-03 15:30:45,550:INFO:Creating metrics dataframe
2024-06-03 15:30:45,552:INFO:Uploading results into container
2024-06-03 15:30:45,552:INFO:Uploading model into container now
2024-06-03 15:30:45,552:INFO:_master_model_container: 41
2024-06-03 15:30:45,552:INFO:_display_container: 12
2024-06-03 15:30:45,552:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-06-03 15:30:45,552:INFO:create_model() successfully completed......................................
2024-06-03 15:30:45,708:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:45,708:INFO:Creating metrics dataframe
2024-06-03 15:30:45,730:INFO:Initializing K Neighbors Classifier
2024-06-03 15:30:45,730:INFO:Total runtime is 0.045370841026306154 minutes
2024-06-03 15:30:45,735:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:45,735:INFO:Initializing create_model()
2024-06-03 15:30:45,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:45,735:INFO:Checking exceptions
2024-06-03 15:30:45,735:INFO:Importing libraries
2024-06-03 15:30:45,735:INFO:Copying training dataset
2024-06-03 15:30:45,765:INFO:Defining folds
2024-06-03 15:30:45,765:INFO:Declaring metric variables
2024-06-03 15:30:45,766:INFO:Importing untrained model
2024-06-03 15:30:45,783:INFO:K Neighbors Classifier Imported successfully
2024-06-03 15:30:45,800:INFO:Starting cross validation
2024-06-03 15:30:45,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:46,669:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,669:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,669:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,684:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,697:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,724:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,769:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,852:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,919:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,930:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,941:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,941:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,963:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:46,979:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,018:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,031:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,031:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,319:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,339:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,348:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,375:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,386:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:47,403:INFO:Calculating mean and std
2024-06-03 15:30:47,405:INFO:Creating metrics dataframe
2024-06-03 15:30:47,405:INFO:Uploading results into container
2024-06-03 15:30:47,405:INFO:Uploading model into container now
2024-06-03 15:30:47,405:INFO:_master_model_container: 42
2024-06-03 15:30:47,405:INFO:_display_container: 12
2024-06-03 15:30:47,414:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-06-03 15:30:47,414:INFO:create_model() successfully completed......................................
2024-06-03 15:30:47,592:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:47,592:INFO:Creating metrics dataframe
2024-06-03 15:30:47,606:INFO:Initializing Naive Bayes
2024-06-03 15:30:47,609:INFO:Total runtime is 0.07669034798940022 minutes
2024-06-03 15:30:47,618:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:47,618:INFO:Initializing create_model()
2024-06-03 15:30:47,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:47,618:INFO:Checking exceptions
2024-06-03 15:30:47,618:INFO:Importing libraries
2024-06-03 15:30:47,618:INFO:Copying training dataset
2024-06-03 15:30:47,635:INFO:Defining folds
2024-06-03 15:30:47,635:INFO:Declaring metric variables
2024-06-03 15:30:47,644:INFO:Importing untrained model
2024-06-03 15:30:47,653:INFO:Naive Bayes Imported successfully
2024-06-03 15:30:47,675:INFO:Starting cross validation
2024-06-03 15:30:47,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:48,267:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,296:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,336:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,351:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,351:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,392:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,416:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,420:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,425:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,425:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,434:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,434:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,434:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,451:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,451:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,506:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,517:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,528:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,779:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,857:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,867:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,867:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,883:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:48,900:INFO:Calculating mean and std
2024-06-03 15:30:48,900:INFO:Creating metrics dataframe
2024-06-03 15:30:48,900:INFO:Uploading results into container
2024-06-03 15:30:48,900:INFO:Uploading model into container now
2024-06-03 15:30:48,915:INFO:_master_model_container: 43
2024-06-03 15:30:48,917:INFO:_display_container: 12
2024-06-03 15:30:48,917:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-06-03 15:30:48,917:INFO:create_model() successfully completed......................................
2024-06-03 15:30:49,074:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:49,074:INFO:Creating metrics dataframe
2024-06-03 15:30:49,099:INFO:Initializing Decision Tree Classifier
2024-06-03 15:30:49,099:INFO:Total runtime is 0.10151428778966268 minutes
2024-06-03 15:30:49,114:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:49,114:INFO:Initializing create_model()
2024-06-03 15:30:49,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:49,114:INFO:Checking exceptions
2024-06-03 15:30:49,114:INFO:Importing libraries
2024-06-03 15:30:49,114:INFO:Copying training dataset
2024-06-03 15:30:49,143:INFO:Defining folds
2024-06-03 15:30:49,143:INFO:Declaring metric variables
2024-06-03 15:30:49,154:INFO:Importing untrained model
2024-06-03 15:30:49,154:INFO:Decision Tree Classifier Imported successfully
2024-06-03 15:30:49,207:INFO:Starting cross validation
2024-06-03 15:30:49,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:49,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:49,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:49,915:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:49,935:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:49,935:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:49,935:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:49,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:49,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:49,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,133:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,163:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,163:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,195:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,202:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,210:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,455:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,472:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,477:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,482:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:50,491:INFO:Calculating mean and std
2024-06-03 15:30:50,493:INFO:Creating metrics dataframe
2024-06-03 15:30:50,496:INFO:Uploading results into container
2024-06-03 15:30:50,497:INFO:Uploading model into container now
2024-06-03 15:30:50,498:INFO:_master_model_container: 44
2024-06-03 15:30:50,498:INFO:_display_container: 12
2024-06-03 15:30:50,498:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-06-03 15:30:50,498:INFO:create_model() successfully completed......................................
2024-06-03 15:30:50,651:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:50,651:INFO:Creating metrics dataframe
2024-06-03 15:30:50,672:INFO:Initializing SVM - Linear Kernel
2024-06-03 15:30:50,672:INFO:Total runtime is 0.12773408889770507 minutes
2024-06-03 15:30:50,684:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:50,684:INFO:Initializing create_model()
2024-06-03 15:30:50,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:50,684:INFO:Checking exceptions
2024-06-03 15:30:50,684:INFO:Importing libraries
2024-06-03 15:30:50,684:INFO:Copying training dataset
2024-06-03 15:30:50,708:INFO:Defining folds
2024-06-03 15:30:50,708:INFO:Declaring metric variables
2024-06-03 15:30:50,717:INFO:Importing untrained model
2024-06-03 15:30:50,725:INFO:SVM - Linear Kernel Imported successfully
2024-06-03 15:30:50,745:INFO:Starting cross validation
2024-06-03 15:30:50,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:51,365:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,377:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,386:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:51,390:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,442:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,446:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,458:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,502:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,510:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,514:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,522:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,526:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:51,526:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:51,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,534:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,534:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,591:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,925:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:51,938:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:52,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:52,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:52,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:52,041:INFO:Calculating mean and std
2024-06-03 15:30:52,045:INFO:Creating metrics dataframe
2024-06-03 15:30:52,055:INFO:Uploading results into container
2024-06-03 15:30:52,059:INFO:Uploading model into container now
2024-06-03 15:30:52,059:INFO:_master_model_container: 45
2024-06-03 15:30:52,059:INFO:_display_container: 12
2024-06-03 15:30:52,062:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-06-03 15:30:52,062:INFO:create_model() successfully completed......................................
2024-06-03 15:30:52,281:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:52,281:INFO:Creating metrics dataframe
2024-06-03 15:30:52,306:INFO:Initializing Ridge Classifier
2024-06-03 15:30:52,306:INFO:Total runtime is 0.15496453444163005 minutes
2024-06-03 15:30:52,316:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:52,316:INFO:Initializing create_model()
2024-06-03 15:30:52,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:52,316:INFO:Checking exceptions
2024-06-03 15:30:52,316:INFO:Importing libraries
2024-06-03 15:30:52,316:INFO:Copying training dataset
2024-06-03 15:30:52,352:INFO:Defining folds
2024-06-03 15:30:52,356:INFO:Declaring metric variables
2024-06-03 15:30:52,369:INFO:Importing untrained model
2024-06-03 15:30:52,381:INFO:Ridge Classifier Imported successfully
2024-06-03 15:30:52,405:INFO:Starting cross validation
2024-06-03 15:30:52,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:53,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,110:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,118:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,128:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,130:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,134:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,142:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,241:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,241:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,258:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,291:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,307:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,316:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,378:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,386:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,603:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,628:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,636:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:53,644:INFO:Calculating mean and std
2024-06-03 15:30:53,648:INFO:Creating metrics dataframe
2024-06-03 15:30:53,652:INFO:Uploading results into container
2024-06-03 15:30:53,656:INFO:Uploading model into container now
2024-06-03 15:30:53,657:INFO:_master_model_container: 46
2024-06-03 15:30:53,657:INFO:_display_container: 12
2024-06-03 15:30:53,658:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-06-03 15:30:53,658:INFO:create_model() successfully completed......................................
2024-06-03 15:30:53,833:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:53,833:INFO:Creating metrics dataframe
2024-06-03 15:30:53,858:INFO:Initializing Random Forest Classifier
2024-06-03 15:30:53,858:INFO:Total runtime is 0.18083433707555135 minutes
2024-06-03 15:30:53,869:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:53,869:INFO:Initializing create_model()
2024-06-03 15:30:53,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:53,869:INFO:Checking exceptions
2024-06-03 15:30:53,869:INFO:Importing libraries
2024-06-03 15:30:53,869:INFO:Copying training dataset
2024-06-03 15:30:53,896:INFO:Defining folds
2024-06-03 15:30:53,896:INFO:Declaring metric variables
2024-06-03 15:30:53,907:INFO:Importing untrained model
2024-06-03 15:30:53,917:INFO:Random Forest Classifier Imported successfully
2024-06-03 15:30:53,935:INFO:Starting cross validation
2024-06-03 15:30:53,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:56,113:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,117:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,125:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,125:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,133:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,137:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,137:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,201:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,209:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,221:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,229:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,292:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,314:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,335:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,343:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:56,353:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:57,209:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:57,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:57,229:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:57,260:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:57,268:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:57,276:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:57,288:INFO:Calculating mean and std
2024-06-03 15:30:57,288:INFO:Creating metrics dataframe
2024-06-03 15:30:57,294:INFO:Uploading results into container
2024-06-03 15:30:57,297:INFO:Uploading model into container now
2024-06-03 15:30:57,297:INFO:_master_model_container: 47
2024-06-03 15:30:57,299:INFO:_display_container: 12
2024-06-03 15:30:57,299:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-06-03 15:30:57,299:INFO:create_model() successfully completed......................................
2024-06-03 15:30:57,470:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:57,470:INFO:Creating metrics dataframe
2024-06-03 15:30:57,490:INFO:Initializing Quadratic Discriminant Analysis
2024-06-03 15:30:57,490:INFO:Total runtime is 0.24138062397638957 minutes
2024-06-03 15:30:57,503:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:57,503:INFO:Initializing create_model()
2024-06-03 15:30:57,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:57,506:INFO:Checking exceptions
2024-06-03 15:30:57,506:INFO:Importing libraries
2024-06-03 15:30:57,506:INFO:Copying training dataset
2024-06-03 15:30:57,536:INFO:Defining folds
2024-06-03 15:30:57,536:INFO:Declaring metric variables
2024-06-03 15:30:57,545:INFO:Importing untrained model
2024-06-03 15:30:57,556:INFO:Quadratic Discriminant Analysis Imported successfully
2024-06-03 15:30:57,573:INFO:Starting cross validation
2024-06-03 15:30:57,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:30:58,035:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:58,091:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:58,112:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:58,201:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:58,212:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:58,228:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:58,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:58,244:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,276:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,345:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,353:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:58,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:58,389:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,393:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,413:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,548:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,561:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:58,584:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,584:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,600:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,641:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,653:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,665:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,706:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:58,706:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,710:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:58,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:59,071:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:59,095:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-06-03 15:30:59,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:59,208:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:59,212:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:59,219:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:59,225:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:59,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:59,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:30:59,241:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:30:59,254:INFO:Calculating mean and std
2024-06-03 15:30:59,254:INFO:Creating metrics dataframe
2024-06-03 15:30:59,262:INFO:Uploading results into container
2024-06-03 15:30:59,262:INFO:Uploading model into container now
2024-06-03 15:30:59,262:INFO:_master_model_container: 48
2024-06-03 15:30:59,262:INFO:_display_container: 12
2024-06-03 15:30:59,266:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-06-03 15:30:59,266:INFO:create_model() successfully completed......................................
2024-06-03 15:30:59,460:INFO:SubProcess create_model() end ==================================
2024-06-03 15:30:59,460:INFO:Creating metrics dataframe
2024-06-03 15:30:59,492:INFO:Initializing Ada Boost Classifier
2024-06-03 15:30:59,492:INFO:Total runtime is 0.27474451859792076 minutes
2024-06-03 15:30:59,503:INFO:SubProcess create_model() called ==================================
2024-06-03 15:30:59,505:INFO:Initializing create_model()
2024-06-03 15:30:59,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:30:59,505:INFO:Checking exceptions
2024-06-03 15:30:59,505:INFO:Importing libraries
2024-06-03 15:30:59,505:INFO:Copying training dataset
2024-06-03 15:30:59,561:INFO:Defining folds
2024-06-03 15:30:59,561:INFO:Declaring metric variables
2024-06-03 15:30:59,569:INFO:Importing untrained model
2024-06-03 15:30:59,581:INFO:Ada Boost Classifier Imported successfully
2024-06-03 15:30:59,605:INFO:Starting cross validation
2024-06-03 15:30:59,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:31:00,151:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:00,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:00,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:00,485:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:00,505:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:00,541:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:00,565:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:00,589:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:01,435:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,447:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,447:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,447:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,455:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,455:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,455:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,864:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:01,967:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:01,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,048:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-06-03 15:31:02,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,072:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,080:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,127:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,139:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,147:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,197:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,209:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,221:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,226:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,245:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,250:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,931:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,943:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:02,951:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:03,079:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:03,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:03,098:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:03,127:INFO:Calculating mean and std
2024-06-03 15:31:03,134:INFO:Creating metrics dataframe
2024-06-03 15:31:03,141:INFO:Uploading results into container
2024-06-03 15:31:03,141:INFO:Uploading model into container now
2024-06-03 15:31:03,144:INFO:_master_model_container: 49
2024-06-03 15:31:03,144:INFO:_display_container: 12
2024-06-03 15:31:03,144:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-06-03 15:31:03,144:INFO:create_model() successfully completed......................................
2024-06-03 15:31:03,434:INFO:SubProcess create_model() end ==================================
2024-06-03 15:31:03,436:INFO:Creating metrics dataframe
2024-06-03 15:31:03,464:INFO:Initializing Gradient Boosting Classifier
2024-06-03 15:31:03,464:INFO:Total runtime is 0.3409458955128988 minutes
2024-06-03 15:31:03,472:INFO:SubProcess create_model() called ==================================
2024-06-03 15:31:03,472:INFO:Initializing create_model()
2024-06-03 15:31:03,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:31:03,472:INFO:Checking exceptions
2024-06-03 15:31:03,476:INFO:Importing libraries
2024-06-03 15:31:03,476:INFO:Copying training dataset
2024-06-03 15:31:03,504:INFO:Defining folds
2024-06-03 15:31:03,504:INFO:Declaring metric variables
2024-06-03 15:31:03,513:INFO:Importing untrained model
2024-06-03 15:31:03,525:INFO:Gradient Boosting Classifier Imported successfully
2024-06-03 15:31:03,542:INFO:Starting cross validation
2024-06-03 15:31:03,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:31:07,691:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:07,699:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:07,707:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:07,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:07,771:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:07,775:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:07,779:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:07,807:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:07,815:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:09,551:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:09,559:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:09,567:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:09,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:09,928:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:09,936:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,005:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,013:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,017:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,021:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,033:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,045:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:10,063:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:11,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:11,102:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:11,114:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:11,151:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:11,175:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:11,187:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:11,209:INFO:Calculating mean and std
2024-06-03 15:31:11,212:INFO:Creating metrics dataframe
2024-06-03 15:31:11,220:INFO:Uploading results into container
2024-06-03 15:31:11,224:INFO:Uploading model into container now
2024-06-03 15:31:11,224:INFO:_master_model_container: 50
2024-06-03 15:31:11,224:INFO:_display_container: 12
2024-06-03 15:31:11,224:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-06-03 15:31:11,224:INFO:create_model() successfully completed......................................
2024-06-03 15:31:11,499:INFO:SubProcess create_model() end ==================================
2024-06-03 15:31:11,500:INFO:Creating metrics dataframe
2024-06-03 15:31:11,531:INFO:Initializing Linear Discriminant Analysis
2024-06-03 15:31:11,531:INFO:Total runtime is 0.47539151509602867 minutes
2024-06-03 15:31:11,543:INFO:SubProcess create_model() called ==================================
2024-06-03 15:31:11,543:INFO:Initializing create_model()
2024-06-03 15:31:11,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:31:11,543:INFO:Checking exceptions
2024-06-03 15:31:11,543:INFO:Importing libraries
2024-06-03 15:31:11,543:INFO:Copying training dataset
2024-06-03 15:31:11,576:INFO:Defining folds
2024-06-03 15:31:11,576:INFO:Declaring metric variables
2024-06-03 15:31:11,588:INFO:Importing untrained model
2024-06-03 15:31:11,600:INFO:Linear Discriminant Analysis Imported successfully
2024-06-03 15:31:11,624:INFO:Starting cross validation
2024-06-03 15:31:11,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:31:12,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,478:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,503:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,635:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,926:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,938:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,950:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,978:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:12,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,002:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,006:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,010:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,038:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,038:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,050:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,054:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,058:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,070:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,184:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,210:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,225:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:13,253:INFO:Calculating mean and std
2024-06-03 15:31:13,257:INFO:Creating metrics dataframe
2024-06-03 15:31:13,265:INFO:Uploading results into container
2024-06-03 15:31:13,265:INFO:Uploading model into container now
2024-06-03 15:31:13,265:INFO:_master_model_container: 51
2024-06-03 15:31:13,265:INFO:_display_container: 12
2024-06-03 15:31:13,269:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-06-03 15:31:13,269:INFO:create_model() successfully completed......................................
2024-06-03 15:31:13,481:INFO:SubProcess create_model() end ==================================
2024-06-03 15:31:13,481:INFO:Creating metrics dataframe
2024-06-03 15:31:13,516:INFO:Initializing Extra Trees Classifier
2024-06-03 15:31:13,516:INFO:Total runtime is 0.508469299475352 minutes
2024-06-03 15:31:13,527:INFO:SubProcess create_model() called ==================================
2024-06-03 15:31:13,527:INFO:Initializing create_model()
2024-06-03 15:31:13,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:31:13,527:INFO:Checking exceptions
2024-06-03 15:31:13,527:INFO:Importing libraries
2024-06-03 15:31:13,529:INFO:Copying training dataset
2024-06-03 15:31:13,556:INFO:Defining folds
2024-06-03 15:31:13,556:INFO:Declaring metric variables
2024-06-03 15:31:13,569:INFO:Importing untrained model
2024-06-03 15:31:13,580:INFO:Extra Trees Classifier Imported successfully
2024-06-03 15:31:13,596:INFO:Starting cross validation
2024-06-03 15:31:13,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:31:15,967:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:15,971:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:15,975:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:15,979:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:15,987:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:15,995:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:15,995:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:15,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,032:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,040:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,040:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,052:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,161:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,189:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,201:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,209:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,298:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,310:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,322:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,330:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:16,342:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:17,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:17,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:17,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:17,246:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:17,258:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:17,266:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:17,283:INFO:Calculating mean and std
2024-06-03 15:31:17,285:INFO:Creating metrics dataframe
2024-06-03 15:31:17,287:INFO:Uploading results into container
2024-06-03 15:31:17,291:INFO:Uploading model into container now
2024-06-03 15:31:17,292:INFO:_master_model_container: 52
2024-06-03 15:31:17,292:INFO:_display_container: 12
2024-06-03 15:31:17,292:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-06-03 15:31:17,295:INFO:create_model() successfully completed......................................
2024-06-03 15:31:17,530:INFO:SubProcess create_model() end ==================================
2024-06-03 15:31:17,530:INFO:Creating metrics dataframe
2024-06-03 15:31:17,572:INFO:Initializing Light Gradient Boosting Machine
2024-06-03 15:31:17,572:INFO:Total runtime is 0.5760776321093242 minutes
2024-06-03 15:31:17,588:INFO:SubProcess create_model() called ==================================
2024-06-03 15:31:17,588:INFO:Initializing create_model()
2024-06-03 15:31:17,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:31:17,588:INFO:Checking exceptions
2024-06-03 15:31:17,588:INFO:Importing libraries
2024-06-03 15:31:17,592:INFO:Copying training dataset
2024-06-03 15:31:17,637:INFO:Defining folds
2024-06-03 15:31:17,639:INFO:Declaring metric variables
2024-06-03 15:31:17,649:INFO:Importing untrained model
2024-06-03 15:31:17,662:INFO:Light Gradient Boosting Machine Imported successfully
2024-06-03 15:31:17,694:INFO:Starting cross validation
2024-06-03 15:31:17,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:31:22,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,472:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,512:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,520:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,528:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,773:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,946:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:22,967:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,079:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,087:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,096:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,338:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,347:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,355:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,395:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,411:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,455:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:23,477:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:24,620:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:24,628:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:24,635:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:24,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:24,851:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:24,859:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:24,871:INFO:Calculating mean and std
2024-06-03 15:31:24,871:INFO:Creating metrics dataframe
2024-06-03 15:31:24,879:INFO:Uploading results into container
2024-06-03 15:31:24,880:INFO:Uploading model into container now
2024-06-03 15:31:24,880:INFO:_master_model_container: 53
2024-06-03 15:31:24,880:INFO:_display_container: 12
2024-06-03 15:31:24,880:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-06-03 15:31:24,883:INFO:create_model() successfully completed......................................
2024-06-03 15:31:25,054:INFO:SubProcess create_model() end ==================================
2024-06-03 15:31:25,054:INFO:Creating metrics dataframe
2024-06-03 15:31:25,083:INFO:Initializing Dummy Classifier
2024-06-03 15:31:25,083:INFO:Total runtime is 0.7012508948644003 minutes
2024-06-03 15:31:25,091:INFO:SubProcess create_model() called ==================================
2024-06-03 15:31:25,091:INFO:Initializing create_model()
2024-06-03 15:31:25,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000265CFF01D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:31:25,091:INFO:Checking exceptions
2024-06-03 15:31:25,091:INFO:Importing libraries
2024-06-03 15:31:25,091:INFO:Copying training dataset
2024-06-03 15:31:25,111:INFO:Defining folds
2024-06-03 15:31:25,111:INFO:Declaring metric variables
2024-06-03 15:31:25,122:INFO:Importing untrained model
2024-06-03 15:31:25,132:INFO:Dummy Classifier Imported successfully
2024-06-03 15:31:25,144:INFO:Starting cross validation
2024-06-03 15:31:25,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-06-03 15:31:25,720:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,736:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:25,742:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,742:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,752:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,759:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:25,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,791:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,792:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:25,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,820:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,824:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:25,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:25,901:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,904:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,910:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:25,926:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,926:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,926:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:25,937:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,978:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:25,985:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:25,985:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:26,141:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:26,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:26,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:26,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:26,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:26,194:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:26,194:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:31:26,194:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:31:26,210:INFO:Calculating mean and std
2024-06-03 15:31:26,210:INFO:Creating metrics dataframe
2024-06-03 15:31:26,216:INFO:Uploading results into container
2024-06-03 15:31:26,218:INFO:Uploading model into container now
2024-06-03 15:31:26,219:INFO:_master_model_container: 54
2024-06-03 15:31:26,219:INFO:_display_container: 12
2024-06-03 15:31:26,219:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:31:26,220:INFO:create_model() successfully completed......................................
2024-06-03 15:31:26,364:INFO:SubProcess create_model() end ==================================
2024-06-03 15:31:26,364:INFO:Creating metrics dataframe
2024-06-03 15:31:26,411:INFO:Initializing create_model()
2024-06-03 15:31:26,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-06-03 15:31:26,411:INFO:Checking exceptions
2024-06-03 15:31:26,420:INFO:Importing libraries
2024-06-03 15:31:26,420:INFO:Copying training dataset
2024-06-03 15:31:26,444:INFO:Defining folds
2024-06-03 15:31:26,444:INFO:Declaring metric variables
2024-06-03 15:31:26,444:INFO:Importing untrained model
2024-06-03 15:31:26,444:INFO:Declaring custom model
2024-06-03 15:31:26,444:INFO:Dummy Classifier Imported successfully
2024-06-03 15:31:26,449:INFO:Cross validation set to False
2024-06-03 15:31:26,449:INFO:Fitting Model
2024-06-03 15:31:26,692:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:31:26,692:INFO:create_model() successfully completed......................................
2024-06-03 15:31:26,976:INFO:_master_model_container: 54
2024-06-03 15:31:26,976:INFO:_display_container: 12
2024-06-03 15:31:26,976:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-06-03 15:31:26,976:INFO:compare_models() successfully completed......................................
2024-06-03 15:46:55,137:INFO:Initializing tune_model()
2024-06-03 15:46:55,138:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-06-03 15:46:55,139:INFO:Checking exceptions
2024-06-03 15:46:55,217:INFO:Copying training dataset
2024-06-03 15:46:55,237:INFO:Checking base model
2024-06-03 15:46:55,241:INFO:Base model : Random Forest Classifier
2024-06-03 15:46:55,256:INFO:Declaring metric variables
2024-06-03 15:46:55,265:INFO:Defining Hyperparameters
2024-06-03 15:46:55,753:INFO:Tuning with n_jobs=-1
2024-06-03 15:46:55,755:INFO:Initializing RandomizedSearchCV
2024-06-03 15:48:04,486:INFO:Initializing predict_model()
2024-06-03 15:48:04,487:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000265CDBF4890>, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000265CA844D60>)
2024-06-03 15:48:04,487:INFO:Checking exceptions
2024-06-03 15:48:04,487:INFO:Preloading libraries
2024-06-03 15:48:04,492:INFO:Set up data.
2024-06-03 15:48:04,534:INFO:Set up index.
2024-06-03 15:48:05,095:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:48:05,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-06-03 15:48:05,144:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-06-03 15:48:05,156:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:51:53,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 17:51:53,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 17:51:53,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 17:51:53,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 17:52:13,841:INFO:PyCaret ClassificationExperiment
2024-08-16 17:52:13,841:INFO:Logging name: clf-default-name
2024-08-16 17:52:13,841:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-16 17:52:13,841:INFO:version 3.3.2
2024-08-16 17:52:13,841:INFO:Initializing setup()
2024-08-16 17:52:13,841:INFO:self.USI: af75
2024-08-16 17:52:13,841:INFO:self._variable_keys: {'seed', 'logging_param', 'fix_imbalance', 'X', 'USI', 'y', 'X_train', 'gpu_param', 'X_test', 'fold_shuffle_param', 'idx', 'pipeline', 'memory', 'html_param', 'fold_groups_param', 'y_train', 'data', 'log_plots_param', 'fold_generator', 'is_multiclass', 'exp_name_log', 'n_jobs_param', '_ml_usecase', 'y_test', 'target_param', 'gpu_n_jobs_param', '_available_plots', 'exp_id'}
2024-08-16 17:52:13,841:INFO:Checking environment
2024-08-16 17:52:13,841:INFO:python_version: 3.11.5
2024-08-16 17:52:13,841:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-08-16 17:52:13,841:INFO:machine: AMD64
2024-08-16 17:52:13,841:INFO:platform: Windows-10-10.0.22631-SP0
2024-08-16 17:52:13,850:INFO:Memory: svmem(total=8395403264, available=918097920, percent=89.1, used=7477305344, free=918097920)
2024-08-16 17:52:13,850:INFO:Physical Core: 4
2024-08-16 17:52:13,850:INFO:Logical Core: 8
2024-08-16 17:52:13,850:INFO:Checking libraries
2024-08-16 17:52:13,850:INFO:System:
2024-08-16 17:52:13,850:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-08-16 17:52:13,850:INFO:executable: c:\Users\ASUS\anaconda3\python.exe
2024-08-16 17:52:13,850:INFO:   machine: Windows-10-10.0.22631-SP0
2024-08-16 17:52:13,850:INFO:PyCaret required dependencies:
2024-08-16 17:52:20,494:INFO:                 pip: 23.2.1
2024-08-16 17:52:20,494:INFO:          setuptools: 68.0.0
2024-08-16 17:52:20,494:INFO:             pycaret: 3.3.2
2024-08-16 17:52:20,494:INFO:             IPython: 8.15.0
2024-08-16 17:52:20,494:INFO:          ipywidgets: 8.0.4
2024-08-16 17:52:20,494:INFO:                tqdm: 4.65.0
2024-08-16 17:52:20,494:INFO:               numpy: 1.24.3
2024-08-16 17:52:20,494:INFO:              pandas: 2.0.3
2024-08-16 17:52:20,494:INFO:              jinja2: 3.1.2
2024-08-16 17:52:20,494:INFO:               scipy: 1.11.1
2024-08-16 17:52:20,494:INFO:              joblib: 1.2.0
2024-08-16 17:52:20,494:INFO:             sklearn: 1.4.2
2024-08-16 17:52:20,494:INFO:                pyod: 1.1.3
2024-08-16 17:52:20,494:INFO:            imblearn: 0.12.3
2024-08-16 17:52:20,494:INFO:   category_encoders: 2.6.3
2024-08-16 17:52:20,494:INFO:            lightgbm: 4.3.0
2024-08-16 17:52:20,494:INFO:               numba: 0.57.1
2024-08-16 17:52:20,494:INFO:            requests: 2.31.0
2024-08-16 17:52:20,494:INFO:          matplotlib: 3.7.2
2024-08-16 17:52:20,494:INFO:          scikitplot: 0.3.7
2024-08-16 17:52:20,494:INFO:         yellowbrick: 1.5
2024-08-16 17:52:20,494:INFO:              plotly: 5.22.0
2024-08-16 17:52:20,494:INFO:    plotly-resampler: Not installed
2024-08-16 17:52:20,494:INFO:             kaleido: 0.2.1
2024-08-16 17:52:20,494:INFO:           schemdraw: 0.15
2024-08-16 17:52:20,494:INFO:         statsmodels: 0.14.0
2024-08-16 17:52:20,494:INFO:              sktime: 0.26.0
2024-08-16 17:52:20,494:INFO:               tbats: 1.1.3
2024-08-16 17:52:20,494:INFO:            pmdarima: 2.0.4
2024-08-16 17:52:20,494:INFO:              psutil: 5.9.0
2024-08-16 17:52:20,494:INFO:          markupsafe: 2.1.1
2024-08-16 17:52:20,494:INFO:             pickle5: Not installed
2024-08-16 17:52:20,494:INFO:         cloudpickle: 2.2.1
2024-08-16 17:52:20,494:INFO:         deprecation: 2.1.0
2024-08-16 17:52:20,494:INFO:              xxhash: 2.0.2
2024-08-16 17:52:20,494:INFO:           wurlitzer: Not installed
2024-08-16 17:52:20,494:INFO:PyCaret optional dependencies:
2024-08-16 17:52:20,545:INFO:                shap: Not installed
2024-08-16 17:52:20,545:INFO:           interpret: Not installed
2024-08-16 17:52:20,545:INFO:                umap: Not installed
2024-08-16 17:52:20,545:INFO:     ydata_profiling: Not installed
2024-08-16 17:52:20,545:INFO:  explainerdashboard: Not installed
2024-08-16 17:52:20,545:INFO:             autoviz: Not installed
2024-08-16 17:52:20,545:INFO:           fairlearn: Not installed
2024-08-16 17:52:20,545:INFO:          deepchecks: Not installed
2024-08-16 17:52:20,545:INFO:             xgboost: Not installed
2024-08-16 17:52:20,545:INFO:            catboost: Not installed
2024-08-16 17:52:20,545:INFO:              kmodes: Not installed
2024-08-16 17:52:20,545:INFO:             mlxtend: Not installed
2024-08-16 17:52:20,545:INFO:       statsforecast: Not installed
2024-08-16 17:52:20,545:INFO:        tune_sklearn: Not installed
2024-08-16 17:52:20,545:INFO:                 ray: Not installed
2024-08-16 17:52:20,545:INFO:            hyperopt: Not installed
2024-08-16 17:52:20,545:INFO:              optuna: Not installed
2024-08-16 17:52:20,545:INFO:               skopt: Not installed
2024-08-16 17:52:20,545:INFO:              mlflow: 2.13.0
2024-08-16 17:52:20,545:INFO:              gradio: Not installed
2024-08-16 17:52:20,545:INFO:             fastapi: Not installed
2024-08-16 17:52:20,545:INFO:             uvicorn: Not installed
2024-08-16 17:52:20,545:INFO:              m2cgen: Not installed
2024-08-16 17:52:20,545:INFO:           evidently: Not installed
2024-08-16 17:52:20,545:INFO:               fugue: Not installed
2024-08-16 17:52:20,545:INFO:           streamlit: Not installed
2024-08-16 17:52:20,545:INFO:             prophet: Not installed
2024-08-16 17:52:20,545:INFO:None
2024-08-16 17:52:20,545:INFO:Set up data.
2024-08-16 17:52:20,630:INFO:Set up folding strategy.
2024-08-16 17:52:20,630:INFO:Set up train/test split.
2024-08-16 17:52:20,677:INFO:Set up index.
2024-08-16 17:52:20,677:INFO:Assigning column types.
2024-08-16 17:52:20,693:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-16 17:52:20,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 17:52:20,935:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 17:52:21,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:21,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:21,226:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 17:52:21,227:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 17:52:21,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:21,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:21,309:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-16 17:52:21,459:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 17:52:21,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:21,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:21,799:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 17:52:21,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:21,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:21,931:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-16 17:52:22,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:22,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:22,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:22,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:22,583:INFO:Preparing preprocessing pipeline...
2024-08-16 17:52:22,596:INFO:Set up label encoding.
2024-08-16 17:52:22,596:INFO:Set up simple imputation.
2024-08-16 17:52:22,610:INFO:Set up encoding of ordinal features.
2024-08-16 17:52:22,612:INFO:Set up encoding of categorical features.
2024-08-16 17:52:22,612:INFO:Set up imbalanced handling.
2024-08-16 17:52:23,360:INFO:Finished creating preprocessing pipeline.
2024-08-16 17:52:23,527:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['moyenne_conso_agri_hab',
                                             'moyenne_conso_indus_hab',
                                             'moyenne_conso_tertiaire_hab',
                                             'moyenne_conso_resid...
                                    transformer=TargetEncoder(cols=['CSP_maire'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-08-16 17:52:23,527:INFO:Creating final display dataframe.
2024-08-16 17:52:28,415:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target  beneficiaire_trans_eco
2                   Target type                  Binary
3                Target mapping              0: 0, 1: 1
4           Original data shape              (1207, 33)
5        Transformed data shape              (1767, 42)
6   Transformed train set shape              (1404, 42)
7    Transformed test set shape               (363, 42)
8              Numeric features                      23
9          Categorical features                       6
10                   Preprocess                    True
11              Imputation type                  simple
12           Numeric imputation                    mean
13       Categorical imputation                    mode
14     Maximum one-hot encoding                      25
15              Encoding method                    None
16                Fix imbalance                    True
17         Fix imbalance method                   smote
18               Fold Generator         StratifiedKFold
19                  Fold Number                      10
20                     CPU Jobs                      -1
21                      Use GPU                   False
22               Log Experiment                   False
23              Experiment Name        clf-default-name
24                          USI                    af75
2024-08-16 17:52:28,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:28,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:29,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:29,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 17:52:29,016:INFO:setup() successfully completed in 15.18s...............
2024-08-16 17:52:29,032:INFO:Initializing compare_models()
2024-08-16 17:52:29,032:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-16 17:52:29,032:INFO:Checking exceptions
2024-08-16 17:52:29,051:INFO:Preparing display monitor
2024-08-16 17:52:29,161:INFO:Initializing Logistic Regression
2024-08-16 17:52:29,161:INFO:Total runtime is 0.0 minutes
2024-08-16 17:52:29,182:INFO:SubProcess create_model() called ==================================
2024-08-16 17:52:29,182:INFO:Initializing create_model()
2024-08-16 17:52:29,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:52:29,185:INFO:Checking exceptions
2024-08-16 17:52:29,185:INFO:Importing libraries
2024-08-16 17:52:29,186:INFO:Copying training dataset
2024-08-16 17:52:29,205:INFO:Defining folds
2024-08-16 17:52:29,205:INFO:Declaring metric variables
2024-08-16 17:52:29,228:INFO:Importing untrained model
2024-08-16 17:52:29,235:INFO:Logistic Regression Imported successfully
2024-08-16 17:52:29,250:INFO:Starting cross validation
2024-08-16 17:52:29,253:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:11,158:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:11,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:11,225:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:11,225:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:11,251:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:11,265:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:11,291:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:11,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,464:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,473:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,475:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,481:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,528:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,542:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,542:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,568:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,611:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,638:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,655:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,707:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:11,713:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:12,604:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:12,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:12,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:12,775:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:13,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 17:53:13,818:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:13,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:13,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:13,850:INFO:Calculating mean and std
2024-08-16 17:53:13,856:INFO:Creating metrics dataframe
2024-08-16 17:53:13,864:INFO:Uploading results into container
2024-08-16 17:53:13,864:INFO:Uploading model into container now
2024-08-16 17:53:13,867:INFO:_master_model_container: 1
2024-08-16 17:53:13,867:INFO:_display_container: 2
2024-08-16 17:53:13,868:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-16 17:53:13,868:INFO:create_model() successfully completed......................................
2024-08-16 17:53:14,234:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:14,234:INFO:Creating metrics dataframe
2024-08-16 17:53:14,247:INFO:Initializing K Neighbors Classifier
2024-08-16 17:53:14,247:INFO:Total runtime is 0.7514314850171407 minutes
2024-08-16 17:53:14,289:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:14,290:INFO:Initializing create_model()
2024-08-16 17:53:14,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:14,290:INFO:Checking exceptions
2024-08-16 17:53:14,290:INFO:Importing libraries
2024-08-16 17:53:14,290:INFO:Copying training dataset
2024-08-16 17:53:14,315:INFO:Defining folds
2024-08-16 17:53:14,315:INFO:Declaring metric variables
2024-08-16 17:53:14,344:INFO:Importing untrained model
2024-08-16 17:53:14,352:INFO:K Neighbors Classifier Imported successfully
2024-08-16 17:53:14,367:INFO:Starting cross validation
2024-08-16 17:53:14,373:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:15,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,589:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,595:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,595:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,608:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,622:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,625:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,691:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,903:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,928:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,935:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,942:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,942:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,958:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:15,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,005:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,445:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,520:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,543:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:16,561:INFO:Calculating mean and std
2024-08-16 17:53:16,563:INFO:Creating metrics dataframe
2024-08-16 17:53:16,569:INFO:Uploading results into container
2024-08-16 17:53:16,569:INFO:Uploading model into container now
2024-08-16 17:53:16,569:INFO:_master_model_container: 2
2024-08-16 17:53:16,569:INFO:_display_container: 2
2024-08-16 17:53:16,573:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-16 17:53:16,574:INFO:create_model() successfully completed......................................
2024-08-16 17:53:16,811:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:16,811:INFO:Creating metrics dataframe
2024-08-16 17:53:16,838:INFO:Initializing Naive Bayes
2024-08-16 17:53:16,838:INFO:Total runtime is 0.7946132500966391 minutes
2024-08-16 17:53:16,839:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:16,839:INFO:Initializing create_model()
2024-08-16 17:53:16,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:16,848:INFO:Checking exceptions
2024-08-16 17:53:16,848:INFO:Importing libraries
2024-08-16 17:53:16,849:INFO:Copying training dataset
2024-08-16 17:53:16,877:INFO:Defining folds
2024-08-16 17:53:16,883:INFO:Declaring metric variables
2024-08-16 17:53:16,891:INFO:Importing untrained model
2024-08-16 17:53:16,895:INFO:Naive Bayes Imported successfully
2024-08-16 17:53:16,915:INFO:Starting cross validation
2024-08-16 17:53:16,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:17,536:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,543:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,726:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,746:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,774:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,799:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,836:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,843:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,865:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:17,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:18,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:18,101:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:18,113:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:18,305:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:18,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:18,324:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:18,340:INFO:Calculating mean and std
2024-08-16 17:53:18,342:INFO:Creating metrics dataframe
2024-08-16 17:53:18,348:INFO:Uploading results into container
2024-08-16 17:53:18,351:INFO:Uploading model into container now
2024-08-16 17:53:18,351:INFO:_master_model_container: 3
2024-08-16 17:53:18,352:INFO:_display_container: 2
2024-08-16 17:53:18,352:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-16 17:53:18,352:INFO:create_model() successfully completed......................................
2024-08-16 17:53:18,567:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:18,567:INFO:Creating metrics dataframe
2024-08-16 17:53:18,587:INFO:Initializing Decision Tree Classifier
2024-08-16 17:53:18,587:INFO:Total runtime is 0.8237680395444235 minutes
2024-08-16 17:53:18,600:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:18,602:INFO:Initializing create_model()
2024-08-16 17:53:18,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:18,602:INFO:Checking exceptions
2024-08-16 17:53:18,602:INFO:Importing libraries
2024-08-16 17:53:18,602:INFO:Copying training dataset
2024-08-16 17:53:18,632:INFO:Defining folds
2024-08-16 17:53:18,632:INFO:Declaring metric variables
2024-08-16 17:53:18,642:INFO:Importing untrained model
2024-08-16 17:53:18,651:INFO:Decision Tree Classifier Imported successfully
2024-08-16 17:53:18,667:INFO:Starting cross validation
2024-08-16 17:53:18,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:19,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,526:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,570:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,583:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,597:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,597:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,609:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,613:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,730:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,777:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,782:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,923:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,932:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,941:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,945:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:19,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:20,287:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:20,289:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:20,291:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:20,297:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:20,302:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:20,304:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:20,328:INFO:Calculating mean and std
2024-08-16 17:53:20,333:INFO:Creating metrics dataframe
2024-08-16 17:53:20,344:INFO:Uploading results into container
2024-08-16 17:53:20,344:INFO:Uploading model into container now
2024-08-16 17:53:20,344:INFO:_master_model_container: 4
2024-08-16 17:53:20,351:INFO:_display_container: 2
2024-08-16 17:53:20,353:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-16 17:53:20,353:INFO:create_model() successfully completed......................................
2024-08-16 17:53:20,599:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:20,599:INFO:Creating metrics dataframe
2024-08-16 17:53:20,625:INFO:Initializing SVM - Linear Kernel
2024-08-16 17:53:20,625:INFO:Total runtime is 0.8577310681343079 minutes
2024-08-16 17:53:20,635:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:20,636:INFO:Initializing create_model()
2024-08-16 17:53:20,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:20,637:INFO:Checking exceptions
2024-08-16 17:53:20,637:INFO:Importing libraries
2024-08-16 17:53:20,637:INFO:Copying training dataset
2024-08-16 17:53:20,665:INFO:Defining folds
2024-08-16 17:53:20,665:INFO:Declaring metric variables
2024-08-16 17:53:20,680:INFO:Importing untrained model
2024-08-16 17:53:20,692:INFO:SVM - Linear Kernel Imported successfully
2024-08-16 17:53:20,715:INFO:Starting cross validation
2024-08-16 17:53:20,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:21,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,520:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,536:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,541:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,545:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,560:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,580:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:21,585:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,611:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,617:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:21,623:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,636:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,647:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,651:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:21,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,681:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,692:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,847:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,865:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,920:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,925:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:21,930:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,942:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,969:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:21,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:22,119:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:22,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:22,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:22,177:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:22,189:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:22,193:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:22,201:INFO:Calculating mean and std
2024-08-16 17:53:22,214:INFO:Creating metrics dataframe
2024-08-16 17:53:22,214:INFO:Uploading results into container
2024-08-16 17:53:22,214:INFO:Uploading model into container now
2024-08-16 17:53:22,214:INFO:_master_model_container: 5
2024-08-16 17:53:22,222:INFO:_display_container: 2
2024-08-16 17:53:22,223:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-16 17:53:22,224:INFO:create_model() successfully completed......................................
2024-08-16 17:53:22,420:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:22,420:INFO:Creating metrics dataframe
2024-08-16 17:53:22,445:INFO:Initializing Ridge Classifier
2024-08-16 17:53:22,445:INFO:Total runtime is 0.8880638877550762 minutes
2024-08-16 17:53:22,451:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:22,451:INFO:Initializing create_model()
2024-08-16 17:53:22,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:22,451:INFO:Checking exceptions
2024-08-16 17:53:22,451:INFO:Importing libraries
2024-08-16 17:53:22,451:INFO:Copying training dataset
2024-08-16 17:53:22,476:INFO:Defining folds
2024-08-16 17:53:22,476:INFO:Declaring metric variables
2024-08-16 17:53:22,486:INFO:Importing untrained model
2024-08-16 17:53:22,496:INFO:Ridge Classifier Imported successfully
2024-08-16 17:53:22,515:INFO:Starting cross validation
2024-08-16 17:53:22,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:28,510:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,521:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,597:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,621:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,625:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,631:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,632:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,666:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,715:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:28,716:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:29,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:29,469:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:29,481:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:29,598:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:29,616:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:29,631:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,226:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,243:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,266:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,271:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,295:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,320:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,320:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,332:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,332:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:30,346:INFO:Calculating mean and std
2024-08-16 17:53:30,346:INFO:Creating metrics dataframe
2024-08-16 17:53:30,355:INFO:Uploading results into container
2024-08-16 17:53:30,357:INFO:Uploading model into container now
2024-08-16 17:53:30,360:INFO:_master_model_container: 6
2024-08-16 17:53:30,360:INFO:_display_container: 2
2024-08-16 17:53:30,360:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-08-16 17:53:30,360:INFO:create_model() successfully completed......................................
2024-08-16 17:53:30,651:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:30,651:INFO:Creating metrics dataframe
2024-08-16 17:53:30,776:INFO:Initializing Random Forest Classifier
2024-08-16 17:53:30,778:INFO:Total runtime is 1.0269392728805542 minutes
2024-08-16 17:53:30,786:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:30,786:INFO:Initializing create_model()
2024-08-16 17:53:30,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:30,786:INFO:Checking exceptions
2024-08-16 17:53:30,786:INFO:Importing libraries
2024-08-16 17:53:30,786:INFO:Copying training dataset
2024-08-16 17:53:30,864:INFO:Defining folds
2024-08-16 17:53:30,864:INFO:Declaring metric variables
2024-08-16 17:53:30,871:INFO:Importing untrained model
2024-08-16 17:53:30,879:INFO:Random Forest Classifier Imported successfully
2024-08-16 17:53:30,895:INFO:Starting cross validation
2024-08-16 17:53:30,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:35,851:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:35,864:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:35,865:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:35,980:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:35,983:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:35,987:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:35,987:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:35,994:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:35,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,056:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,063:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,084:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,092:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,101:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,104:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,119:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,139:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,148:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,762:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:36,764:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:39,462:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:39,462:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:39,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:39,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:39,479:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:39,496:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:39,503:INFO:Calculating mean and std
2024-08-16 17:53:39,503:INFO:Creating metrics dataframe
2024-08-16 17:53:39,515:INFO:Uploading results into container
2024-08-16 17:53:39,515:INFO:Uploading model into container now
2024-08-16 17:53:39,515:INFO:_master_model_container: 7
2024-08-16 17:53:39,515:INFO:_display_container: 2
2024-08-16 17:53:39,515:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 17:53:39,515:INFO:create_model() successfully completed......................................
2024-08-16 17:53:39,826:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:39,826:INFO:Creating metrics dataframe
2024-08-16 17:53:39,859:INFO:Initializing Quadratic Discriminant Analysis
2024-08-16 17:53:39,859:INFO:Total runtime is 1.1782911539077758 minutes
2024-08-16 17:53:39,868:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:39,869:INFO:Initializing create_model()
2024-08-16 17:53:39,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:39,869:INFO:Checking exceptions
2024-08-16 17:53:39,869:INFO:Importing libraries
2024-08-16 17:53:39,869:INFO:Copying training dataset
2024-08-16 17:53:39,905:INFO:Defining folds
2024-08-16 17:53:39,905:INFO:Declaring metric variables
2024-08-16 17:53:39,912:INFO:Importing untrained model
2024-08-16 17:53:39,934:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-16 17:53:39,951:INFO:Starting cross validation
2024-08-16 17:53:39,956:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:40,642:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:40,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:40,956:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:40,971:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:40,984:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,005:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,020:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:41,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:41,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:41,131:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:41,155:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:41,157:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,168:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:41,187:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:41,248:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:41,388:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:41,559:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,566:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,571:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,665:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:41,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,689:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,696:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,705:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,722:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,741:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,751:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:41,767:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:41,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:42,093:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 17:53:42,425:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:42,435:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:42,439:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 17:53:42,445:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:42,488:INFO:Calculating mean and std
2024-08-16 17:53:42,497:INFO:Creating metrics dataframe
2024-08-16 17:53:42,498:INFO:Uploading results into container
2024-08-16 17:53:42,498:INFO:Uploading model into container now
2024-08-16 17:53:42,503:INFO:_master_model_container: 8
2024-08-16 17:53:42,503:INFO:_display_container: 2
2024-08-16 17:53:42,503:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-16 17:53:42,503:INFO:create_model() successfully completed......................................
2024-08-16 17:53:42,791:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:42,791:INFO:Creating metrics dataframe
2024-08-16 17:53:42,864:INFO:Initializing Ada Boost Classifier
2024-08-16 17:53:42,865:INFO:Total runtime is 1.2284038066864014 minutes
2024-08-16 17:53:42,873:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:42,873:INFO:Initializing create_model()
2024-08-16 17:53:42,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:42,875:INFO:Checking exceptions
2024-08-16 17:53:42,875:INFO:Importing libraries
2024-08-16 17:53:42,875:INFO:Copying training dataset
2024-08-16 17:53:42,920:INFO:Defining folds
2024-08-16 17:53:42,920:INFO:Declaring metric variables
2024-08-16 17:53:42,930:INFO:Importing untrained model
2024-08-16 17:53:42,955:INFO:Ada Boost Classifier Imported successfully
2024-08-16 17:53:42,967:INFO:Starting cross validation
2024-08-16 17:53:42,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:44,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:44,437:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:44,513:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:44,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:44,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:44,589:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:44,604:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:44,619:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:46,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:46,272:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:46,285:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:46,631:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:47,090:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,102:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,117:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,120:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,216:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,225:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,259:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,269:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,273:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,290:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,300:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,348:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,414:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,504:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,646:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,655:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:47,987:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 17:53:49,577:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:49,590:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:49,590:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:49,608:INFO:Calculating mean and std
2024-08-16 17:53:49,613:INFO:Creating metrics dataframe
2024-08-16 17:53:49,619:INFO:Uploading results into container
2024-08-16 17:53:49,620:INFO:Uploading model into container now
2024-08-16 17:53:49,620:INFO:_master_model_container: 9
2024-08-16 17:53:49,620:INFO:_display_container: 2
2024-08-16 17:53:49,620:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-16 17:53:49,620:INFO:create_model() successfully completed......................................
2024-08-16 17:53:49,854:INFO:SubProcess create_model() end ==================================
2024-08-16 17:53:49,855:INFO:Creating metrics dataframe
2024-08-16 17:53:49,910:INFO:Initializing Gradient Boosting Classifier
2024-08-16 17:53:49,914:INFO:Total runtime is 1.3458879073460897 minutes
2024-08-16 17:53:49,920:INFO:SubProcess create_model() called ==================================
2024-08-16 17:53:49,920:INFO:Initializing create_model()
2024-08-16 17:53:49,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:53:49,923:INFO:Checking exceptions
2024-08-16 17:53:49,923:INFO:Importing libraries
2024-08-16 17:53:49,923:INFO:Copying training dataset
2024-08-16 17:53:49,954:INFO:Defining folds
2024-08-16 17:53:49,954:INFO:Declaring metric variables
2024-08-16 17:53:49,966:INFO:Importing untrained model
2024-08-16 17:53:49,973:INFO:Gradient Boosting Classifier Imported successfully
2024-08-16 17:53:49,990:INFO:Starting cross validation
2024-08-16 17:53:49,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:53:57,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:57,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:57,687:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:58,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:58,344:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:58,357:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,678:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,695:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,787:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,884:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,894:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,907:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,912:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:53:59,930:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:00,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:00,113:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:00,126:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:00,198:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:00,241:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:00,249:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:01,538:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:01,542:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:01,558:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:03,152:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:03,164:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:03,169:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:03,177:INFO:Calculating mean and std
2024-08-16 17:54:03,177:INFO:Creating metrics dataframe
2024-08-16 17:54:03,194:INFO:Uploading results into container
2024-08-16 17:54:03,194:INFO:Uploading model into container now
2024-08-16 17:54:03,197:INFO:_master_model_container: 10
2024-08-16 17:54:03,197:INFO:_display_container: 2
2024-08-16 17:54:03,198:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-16 17:54:03,199:INFO:create_model() successfully completed......................................
2024-08-16 17:54:03,425:INFO:SubProcess create_model() end ==================================
2024-08-16 17:54:03,425:INFO:Creating metrics dataframe
2024-08-16 17:54:03,455:INFO:Initializing Linear Discriminant Analysis
2024-08-16 17:54:03,455:INFO:Total runtime is 1.571562647819519 minutes
2024-08-16 17:54:03,460:INFO:SubProcess create_model() called ==================================
2024-08-16 17:54:03,460:INFO:Initializing create_model()
2024-08-16 17:54:03,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:54:03,460:INFO:Checking exceptions
2024-08-16 17:54:03,460:INFO:Importing libraries
2024-08-16 17:54:03,460:INFO:Copying training dataset
2024-08-16 17:54:03,497:INFO:Defining folds
2024-08-16 17:54:03,497:INFO:Declaring metric variables
2024-08-16 17:54:03,507:INFO:Importing untrained model
2024-08-16 17:54:03,515:INFO:Linear Discriminant Analysis Imported successfully
2024-08-16 17:54:03,532:INFO:Starting cross validation
2024-08-16 17:54:03,535:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:54:05,038:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,045:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,045:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,067:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,111:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,143:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,172:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,180:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,187:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,189:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,198:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,202:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,209:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,209:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,217:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,223:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,223:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,223:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,223:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,239:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,283:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,905:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,974:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,974:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:05,988:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:06,003:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:06,047:INFO:Calculating mean and std
2024-08-16 17:54:06,047:INFO:Creating metrics dataframe
2024-08-16 17:54:06,055:INFO:Uploading results into container
2024-08-16 17:54:06,057:INFO:Uploading model into container now
2024-08-16 17:54:06,057:INFO:_master_model_container: 11
2024-08-16 17:54:06,057:INFO:_display_container: 2
2024-08-16 17:54:06,059:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-16 17:54:06,059:INFO:create_model() successfully completed......................................
2024-08-16 17:54:06,342:INFO:SubProcess create_model() end ==================================
2024-08-16 17:54:06,342:INFO:Creating metrics dataframe
2024-08-16 17:54:06,384:INFO:Initializing Extra Trees Classifier
2024-08-16 17:54:06,384:INFO:Total runtime is 1.6203779101371765 minutes
2024-08-16 17:54:06,420:INFO:SubProcess create_model() called ==================================
2024-08-16 17:54:06,420:INFO:Initializing create_model()
2024-08-16 17:54:06,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:54:06,420:INFO:Checking exceptions
2024-08-16 17:54:06,420:INFO:Importing libraries
2024-08-16 17:54:06,420:INFO:Copying training dataset
2024-08-16 17:54:06,441:INFO:Defining folds
2024-08-16 17:54:06,441:INFO:Declaring metric variables
2024-08-16 17:54:06,441:INFO:Importing untrained model
2024-08-16 17:54:06,458:INFO:Extra Trees Classifier Imported successfully
2024-08-16 17:54:06,474:INFO:Starting cross validation
2024-08-16 17:54:06,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 17:54:09,272:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,272:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,288:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,333:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,344:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,351:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,404:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,404:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,413:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,417:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,420:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,420:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,484:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,576:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,576:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,584:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,584:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:09,592:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:11,047:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:11,047:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:11,064:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:11,176:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:11,189:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:11,193:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 17:54:11,236:INFO:Calculating mean and std
2024-08-16 17:54:11,242:INFO:Creating metrics dataframe
2024-08-16 17:54:11,242:INFO:Uploading results into container
2024-08-16 17:54:11,242:INFO:Uploading model into container now
2024-08-16 17:54:11,248:INFO:_master_model_container: 12
2024-08-16 17:54:11,249:INFO:_display_container: 2
2024-08-16 17:54:11,249:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-16 17:54:11,249:INFO:create_model() successfully completed......................................
2024-08-16 17:54:11,457:INFO:SubProcess create_model() end ==================================
2024-08-16 17:54:11,457:INFO:Creating metrics dataframe
2024-08-16 17:54:11,507:INFO:Initializing Light Gradient Boosting Machine
2024-08-16 17:54:11,507:INFO:Total runtime is 1.7057593981424968 minutes
2024-08-16 17:54:11,511:INFO:SubProcess create_model() called ==================================
2024-08-16 17:54:11,511:INFO:Initializing create_model()
2024-08-16 17:54:11,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 17:54:11,511:INFO:Checking exceptions
2024-08-16 17:54:11,511:INFO:Importing libraries
2024-08-16 17:54:11,511:INFO:Copying training dataset
2024-08-16 17:54:11,537:INFO:Defining folds
2024-08-16 17:54:11,537:INFO:Declaring metric variables
2024-08-16 17:54:11,538:INFO:Importing untrained model
2024-08-16 17:54:11,538:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-16 17:54:11,554:INFO:Starting cross validation
2024-08-16 17:54:11,569:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:07:09,850:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:09,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:09,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:11,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:11,954:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:12,023:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:13,587:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:13,603:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:13,603:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:16,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:16,309:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:07:16,356:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:19,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:19,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:19,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:23,781:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:23,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:23,789:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:25,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:26,007:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:26,007:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:26,254:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:26,254:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:09:26,270:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:28,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:28,382:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:28,388:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:28,674:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:28,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:28,690:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:28,864:INFO:Calculating mean and std
2024-08-16 18:18:29,038:INFO:Creating metrics dataframe
2024-08-16 18:18:29,219:INFO:Uploading results into container
2024-08-16 18:18:29,244:INFO:Uploading model into container now
2024-08-16 18:18:29,269:INFO:_master_model_container: 13
2024-08-16 18:18:29,269:INFO:_display_container: 2
2024-08-16 18:18:29,291:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-16 18:18:29,291:INFO:create_model() successfully completed......................................
2024-08-16 18:18:31,653:INFO:SubProcess create_model() end ==================================
2024-08-16 18:18:31,653:INFO:Creating metrics dataframe
2024-08-16 18:18:31,742:INFO:Initializing Dummy Classifier
2024-08-16 18:18:31,742:INFO:Total runtime is 26.043016302585603 minutes
2024-08-16 18:18:31,770:INFO:SubProcess create_model() called ==================================
2024-08-16 18:18:31,771:INFO:Initializing create_model()
2024-08-16 18:18:31,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1BB2090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:18:31,771:INFO:Checking exceptions
2024-08-16 18:18:31,771:INFO:Importing libraries
2024-08-16 18:18:31,771:INFO:Copying training dataset
2024-08-16 18:18:31,794:INFO:Defining folds
2024-08-16 18:18:31,794:INFO:Declaring metric variables
2024-08-16 18:18:31,805:INFO:Importing untrained model
2024-08-16 18:18:31,806:INFO:Dummy Classifier Imported successfully
2024-08-16 18:18:31,822:INFO:Starting cross validation
2024-08-16 18:18:31,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:18:33,088:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:33,104:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:33,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:33,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:34,103:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:34,117:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:34,122:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:34,127:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:34,683:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:34,829:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:34,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:34,836:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:35,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:35,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:35,921:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:35,924:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:36,937:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:36,946:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:36,949:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:36,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:37,042:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:37,065:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:37,082:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:37,091:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,802:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:58,802:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,802:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,802:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:58,802:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:58,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,849:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:18:58,849:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:18:58,912:INFO:Calculating mean and std
2024-08-16 18:18:58,912:INFO:Creating metrics dataframe
2024-08-16 18:18:58,927:INFO:Uploading results into container
2024-08-16 18:18:58,929:INFO:Uploading model into container now
2024-08-16 18:18:58,929:INFO:_master_model_container: 14
2024-08-16 18:18:58,929:INFO:_display_container: 2
2024-08-16 18:18:58,929:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-16 18:18:58,929:INFO:create_model() successfully completed......................................
2024-08-16 18:18:59,166:INFO:SubProcess create_model() end ==================================
2024-08-16 18:18:59,166:INFO:Creating metrics dataframe
2024-08-16 18:18:59,285:INFO:Initializing create_model()
2024-08-16 18:18:59,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:18:59,285:INFO:Checking exceptions
2024-08-16 18:18:59,294:INFO:Importing libraries
2024-08-16 18:18:59,294:INFO:Copying training dataset
2024-08-16 18:18:59,308:INFO:Defining folds
2024-08-16 18:18:59,308:INFO:Declaring metric variables
2024-08-16 18:18:59,308:INFO:Importing untrained model
2024-08-16 18:18:59,308:INFO:Declaring custom model
2024-08-16 18:18:59,308:INFO:Dummy Classifier Imported successfully
2024-08-16 18:18:59,328:INFO:Cross validation set to False
2024-08-16 18:18:59,328:INFO:Fitting Model
2024-08-16 18:19:01,347:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-16 18:19:01,347:INFO:create_model() successfully completed......................................
2024-08-16 18:19:01,805:INFO:_master_model_container: 14
2024-08-16 18:19:01,805:INFO:_display_container: 2
2024-08-16 18:19:01,805:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-16 18:19:01,805:INFO:compare_models() successfully completed......................................
2024-08-16 18:19:02,324:INFO:Initializing create_model()
2024-08-16 18:19:02,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:19:02,326:INFO:Checking exceptions
2024-08-16 18:19:02,362:INFO:Importing libraries
2024-08-16 18:19:02,362:INFO:Copying training dataset
2024-08-16 18:19:02,421:INFO:Defining folds
2024-08-16 18:19:02,421:INFO:Declaring metric variables
2024-08-16 18:19:02,428:INFO:Importing untrained model
2024-08-16 18:19:02,437:INFO:Random Forest Classifier Imported successfully
2024-08-16 18:19:02,457:INFO:Starting cross validation
2024-08-16 18:19:02,591:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:19:07,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,331:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,383:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,383:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,383:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:07,445:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:09,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:09,915:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:09,934:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:10,987:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:10,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:11,007:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:11,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:11,192:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:11,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:11,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:11,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:11,322:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:27,745:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:27,754:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:27,761:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:27,902:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:27,918:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:27,924:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:27,970:INFO:Calculating mean and std
2024-08-16 18:19:27,970:INFO:Creating metrics dataframe
2024-08-16 18:19:27,994:INFO:Finalizing model
2024-08-16 18:19:29,788:INFO:Uploading results into container
2024-08-16 18:19:29,790:INFO:Uploading model into container now
2024-08-16 18:19:29,802:INFO:_master_model_container: 15
2024-08-16 18:19:29,802:INFO:_display_container: 3
2024-08-16 18:19:29,802:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 18:19:29,802:INFO:create_model() successfully completed......................................
2024-08-16 18:19:30,120:INFO:Initializing create_model()
2024-08-16 18:19:30,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:19:30,120:INFO:Checking exceptions
2024-08-16 18:19:30,155:INFO:Importing libraries
2024-08-16 18:19:30,155:INFO:Copying training dataset
2024-08-16 18:19:30,184:INFO:Defining folds
2024-08-16 18:19:30,184:INFO:Declaring metric variables
2024-08-16 18:19:30,194:INFO:Importing untrained model
2024-08-16 18:19:30,203:INFO:Gradient Boosting Classifier Imported successfully
2024-08-16 18:19:30,219:INFO:Starting cross validation
2024-08-16 18:19:30,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:19:38,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,685:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,701:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,738:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,746:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,752:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,754:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,769:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,769:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,786:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,802:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,819:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,819:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,831:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:38,835:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:40,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:40,536:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:40,536:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:40,619:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:40,631:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:40,636:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:43,794:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:43,803:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:43,803:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:43,887:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:43,937:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:43,956:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:43,970:INFO:Calculating mean and std
2024-08-16 18:19:43,973:INFO:Creating metrics dataframe
2024-08-16 18:19:43,976:INFO:Finalizing model
2024-08-16 18:19:48,938:INFO:Uploading results into container
2024-08-16 18:19:48,938:INFO:Uploading model into container now
2024-08-16 18:19:48,954:INFO:_master_model_container: 16
2024-08-16 18:19:48,954:INFO:_display_container: 4
2024-08-16 18:19:48,954:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-16 18:19:48,954:INFO:create_model() successfully completed......................................
2024-08-16 18:19:49,295:INFO:Initializing create_model()
2024-08-16 18:19:49,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:19:49,295:INFO:Checking exceptions
2024-08-16 18:19:49,333:INFO:Importing libraries
2024-08-16 18:19:49,333:INFO:Copying training dataset
2024-08-16 18:19:49,359:INFO:Defining folds
2024-08-16 18:19:49,359:INFO:Declaring metric variables
2024-08-16 18:19:49,370:INFO:Importing untrained model
2024-08-16 18:19:49,378:INFO:Ada Boost Classifier Imported successfully
2024-08-16 18:19:49,393:INFO:Starting cross validation
2024-08-16 18:19:49,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:19:50,424:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:50,446:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:50,446:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:50,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:50,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:50,624:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:50,809:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:50,993:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:52,479:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:52,496:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:52,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:52,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:52,827:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:52,928:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,011:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,012:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,044:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,077:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,106:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,112:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,112:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,123:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,123:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,129:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,355:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:53,461:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,477:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,477:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:53,561:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:54,141:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:54,141:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:54,156:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:54,792:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:54,805:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:54,814:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:54,829:INFO:Calculating mean and std
2024-08-16 18:19:54,841:INFO:Creating metrics dataframe
2024-08-16 18:19:54,845:INFO:Finalizing model
2024-08-16 18:19:55,609:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:19:56,660:INFO:Uploading results into container
2024-08-16 18:19:56,676:INFO:Uploading model into container now
2024-08-16 18:19:56,692:INFO:_master_model_container: 17
2024-08-16 18:19:56,692:INFO:_display_container: 5
2024-08-16 18:19:56,692:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-16 18:19:56,692:INFO:create_model() successfully completed......................................
2024-08-16 18:19:57,008:INFO:Initializing create_model()
2024-08-16 18:19:57,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:19:57,008:INFO:Checking exceptions
2024-08-16 18:19:57,051:INFO:Importing libraries
2024-08-16 18:19:57,051:INFO:Copying training dataset
2024-08-16 18:19:57,079:INFO:Defining folds
2024-08-16 18:19:57,079:INFO:Declaring metric variables
2024-08-16 18:19:57,087:INFO:Importing untrained model
2024-08-16 18:19:57,091:INFO:Decision Tree Classifier Imported successfully
2024-08-16 18:19:57,109:INFO:Starting cross validation
2024-08-16 18:19:57,115:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:19:58,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,678:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,678:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,735:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,808:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,813:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,840:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,864:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,881:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,895:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,911:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:58,953:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:59,643:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:59,646:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:59,657:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:59,659:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:59,659:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:59,673:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:19:59,691:INFO:Calculating mean and std
2024-08-16 18:19:59,698:INFO:Creating metrics dataframe
2024-08-16 18:19:59,711:INFO:Finalizing model
2024-08-16 18:20:00,448:INFO:Uploading results into container
2024-08-16 18:20:00,448:INFO:Uploading model into container now
2024-08-16 18:20:00,477:INFO:_master_model_container: 18
2024-08-16 18:20:00,477:INFO:_display_container: 6
2024-08-16 18:20:00,477:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-16 18:20:00,477:INFO:create_model() successfully completed......................................
2024-08-16 18:20:00,759:INFO:Initializing tune_model()
2024-08-16 18:20:00,759:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-16 18:20:00,759:INFO:Checking exceptions
2024-08-16 18:20:00,801:INFO:Copying training dataset
2024-08-16 18:20:00,822:INFO:Checking base model
2024-08-16 18:20:00,824:INFO:Base model : Random Forest Classifier
2024-08-16 18:20:00,831:INFO:Declaring metric variables
2024-08-16 18:20:00,839:INFO:Defining Hyperparameters
2024-08-16 18:20:01,160:INFO:Tuning with n_jobs=-1
2024-08-16 18:20:01,160:INFO:Initializing RandomizedSearchCV
2024-08-16 18:21:08,996:INFO:best_params: {'actual_estimator__n_estimators': 10, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 2, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': False}
2024-08-16 18:21:08,996:INFO:Hyperparameter search completed
2024-08-16 18:21:08,996:INFO:SubProcess create_model() called ==================================
2024-08-16 18:21:08,996:INFO:Initializing create_model()
2024-08-16 18:21:09,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F194850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 10, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.1, 'max_features': 'log2', 'max_depth': 2, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': False})
2024-08-16 18:21:09,008:INFO:Checking exceptions
2024-08-16 18:21:09,009:INFO:Importing libraries
2024-08-16 18:21:09,009:INFO:Copying training dataset
2024-08-16 18:21:09,028:INFO:Defining folds
2024-08-16 18:21:09,028:INFO:Declaring metric variables
2024-08-16 18:21:09,043:INFO:Importing untrained model
2024-08-16 18:21:09,043:INFO:Declaring custom model
2024-08-16 18:21:09,062:INFO:Random Forest Classifier Imported successfully
2024-08-16 18:21:09,065:INFO:Starting cross validation
2024-08-16 18:21:09,081:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:21:12,166:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,180:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:12,182:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:12,250:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,297:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,297:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,297:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:12,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,467:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:12,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:12,483:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,599:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,599:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:12,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:12,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,615:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,900:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:12,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:12,916:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:14,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:14,884:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:14,888:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:14,888:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:15,149:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:15,149:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:15,164:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:21:15,164:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:15,217:INFO:Calculating mean and std
2024-08-16 18:21:15,217:INFO:Creating metrics dataframe
2024-08-16 18:21:15,238:INFO:Finalizing model
2024-08-16 18:21:16,686:INFO:Uploading results into container
2024-08-16 18:21:16,686:INFO:Uploading model into container now
2024-08-16 18:21:16,686:INFO:_master_model_container: 19
2024-08-16 18:21:16,694:INFO:_display_container: 7
2024-08-16 18:21:16,695:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 18:21:16,695:INFO:create_model() successfully completed......................................
2024-08-16 18:21:16,934:INFO:SubProcess create_model() end ==================================
2024-08-16 18:21:16,934:INFO:choose_better activated
2024-08-16 18:21:16,949:INFO:SubProcess create_model() called ==================================
2024-08-16 18:21:16,953:INFO:Initializing create_model()
2024-08-16 18:21:16,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:21:16,953:INFO:Checking exceptions
2024-08-16 18:21:16,955:INFO:Importing libraries
2024-08-16 18:21:16,958:INFO:Copying training dataset
2024-08-16 18:21:16,997:INFO:Defining folds
2024-08-16 18:21:16,997:INFO:Declaring metric variables
2024-08-16 18:21:16,997:INFO:Importing untrained model
2024-08-16 18:21:16,997:INFO:Declaring custom model
2024-08-16 18:21:16,997:INFO:Random Forest Classifier Imported successfully
2024-08-16 18:21:16,997:INFO:Starting cross validation
2024-08-16 18:21:16,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:21:20,434:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,434:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,566:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,566:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,652:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,667:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,735:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,750:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,757:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,782:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,782:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,782:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,968:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,983:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:20,983:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:22,537:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:22,537:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:22,537:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:22,653:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:22,653:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:22,669:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:21:22,685:INFO:Calculating mean and std
2024-08-16 18:21:22,685:INFO:Creating metrics dataframe
2024-08-16 18:21:22,685:INFO:Finalizing model
2024-08-16 18:21:23,931:INFO:Uploading results into container
2024-08-16 18:21:23,936:INFO:Uploading model into container now
2024-08-16 18:21:23,936:INFO:_master_model_container: 20
2024-08-16 18:21:23,936:INFO:_display_container: 8
2024-08-16 18:21:23,936:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 18:21:23,936:INFO:create_model() successfully completed......................................
2024-08-16 18:21:24,189:INFO:SubProcess create_model() end ==================================
2024-08-16 18:21:24,189:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.7914
2024-08-16 18:21:24,200:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8318
2024-08-16 18:21:24,200:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-08-16 18:21:24,200:INFO:choose_better completed
2024-08-16 18:21:24,220:INFO:_master_model_container: 20
2024-08-16 18:21:24,220:INFO:_display_container: 7
2024-08-16 18:21:24,220:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 18:21:24,220:INFO:tune_model() successfully completed......................................
2024-08-16 18:21:24,543:INFO:Initializing tune_model()
2024-08-16 18:21:24,543:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-16 18:21:24,543:INFO:Checking exceptions
2024-08-16 18:21:24,585:INFO:Copying training dataset
2024-08-16 18:21:24,603:INFO:Checking base model
2024-08-16 18:21:24,603:INFO:Base model : Gradient Boosting Classifier
2024-08-16 18:21:24,610:INFO:Declaring metric variables
2024-08-16 18:21:24,627:INFO:Defining Hyperparameters
2024-08-16 18:21:24,881:INFO:Tuning with n_jobs=-1
2024-08-16 18:21:24,882:INFO:Initializing RandomizedSearchCV
2024-08-16 18:22:34,240:INFO:best_params: {'actual_estimator__subsample': 0.85, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.15}
2024-08-16 18:22:34,240:INFO:Hyperparameter search completed
2024-08-16 18:22:34,240:INFO:SubProcess create_model() called ==================================
2024-08-16 18:22:34,240:INFO:Initializing create_model()
2024-08-16 18:22:34,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1B74550>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.85, 'n_estimators': 230, 'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 7, 'learning_rate': 0.15})
2024-08-16 18:22:34,240:INFO:Checking exceptions
2024-08-16 18:22:34,240:INFO:Importing libraries
2024-08-16 18:22:34,240:INFO:Copying training dataset
2024-08-16 18:22:34,272:INFO:Defining folds
2024-08-16 18:22:34,272:INFO:Declaring metric variables
2024-08-16 18:22:34,287:INFO:Importing untrained model
2024-08-16 18:22:34,287:INFO:Declaring custom model
2024-08-16 18:22:34,290:INFO:Gradient Boosting Classifier Imported successfully
2024-08-16 18:22:34,303:INFO:Starting cross validation
2024-08-16 18:22:34,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:22:44,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:44,410:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:44,410:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:45,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:45,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:45,656:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,489:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,489:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,505:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,543:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,543:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,559:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,590:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,590:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,643:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,664:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,679:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:47,938:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:48,060:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:48,065:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:48,109:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:49,878:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:49,878:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:49,894:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:53,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:53,025:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:53,046:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:22:53,094:INFO:Calculating mean and std
2024-08-16 18:22:53,094:INFO:Creating metrics dataframe
2024-08-16 18:22:53,110:INFO:Finalizing model
2024-08-16 18:23:00,215:INFO:Uploading results into container
2024-08-16 18:23:00,230:INFO:Uploading model into container now
2024-08-16 18:23:00,246:INFO:_master_model_container: 21
2024-08-16 18:23:00,246:INFO:_display_container: 8
2024-08-16 18:23:00,246:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.15, loss='log_loss', max_depth=7,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.02, min_samples_leaf=5,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           random_state=123, subsample=0.85, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-16 18:23:00,246:INFO:create_model() successfully completed......................................
2024-08-16 18:23:00,530:INFO:SubProcess create_model() end ==================================
2024-08-16 18:23:00,530:INFO:choose_better activated
2024-08-16 18:23:00,576:INFO:SubProcess create_model() called ==================================
2024-08-16 18:23:00,578:INFO:Initializing create_model()
2024-08-16 18:23:00,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:23:00,578:INFO:Checking exceptions
2024-08-16 18:23:00,578:INFO:Importing libraries
2024-08-16 18:23:00,578:INFO:Copying training dataset
2024-08-16 18:23:00,593:INFO:Defining folds
2024-08-16 18:23:00,593:INFO:Declaring metric variables
2024-08-16 18:23:00,593:INFO:Importing untrained model
2024-08-16 18:23:00,593:INFO:Declaring custom model
2024-08-16 18:23:00,593:INFO:Gradient Boosting Classifier Imported successfully
2024-08-16 18:23:00,593:INFO:Starting cross validation
2024-08-16 18:23:00,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:23:07,061:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:07,074:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:07,082:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,267:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,267:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,285:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,290:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,330:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,355:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,367:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,330:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,431:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,446:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,462:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,572:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,598:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,662:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,784:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,801:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,801:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,821:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,848:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:10,851:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:14,248:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:14,248:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:14,264:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:23:14,264:INFO:Calculating mean and std
2024-08-16 18:23:14,264:INFO:Creating metrics dataframe
2024-08-16 18:23:14,279:INFO:Finalizing model
2024-08-16 18:23:17,866:INFO:Uploading results into container
2024-08-16 18:23:17,880:INFO:Uploading model into container now
2024-08-16 18:23:17,880:INFO:_master_model_container: 22
2024-08-16 18:23:17,880:INFO:_display_container: 9
2024-08-16 18:23:17,882:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-16 18:23:17,882:INFO:create_model() successfully completed......................................
2024-08-16 18:23:18,135:INFO:SubProcess create_model() end ==================================
2024-08-16 18:23:18,135:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.7856
2024-08-16 18:23:18,150:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.15, loss='log_loss', max_depth=7,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.02, min_samples_leaf=5,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           random_state=123, subsample=0.85, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.7869
2024-08-16 18:23:18,150:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.15, loss='log_loss', max_depth=7,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.02, min_samples_leaf=5,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           random_state=123, subsample=0.85, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-08-16 18:23:18,150:INFO:choose_better completed
2024-08-16 18:23:18,167:INFO:_master_model_container: 22
2024-08-16 18:23:18,167:INFO:_display_container: 8
2024-08-16 18:23:18,167:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.15, loss='log_loss', max_depth=7,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.02, min_samples_leaf=5,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           random_state=123, subsample=0.85, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-16 18:23:18,167:INFO:tune_model() successfully completed......................................
2024-08-16 18:23:18,532:INFO:Initializing tune_model()
2024-08-16 18:23:18,532:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-16 18:23:18,532:INFO:Checking exceptions
2024-08-16 18:23:18,575:INFO:Copying training dataset
2024-08-16 18:23:18,596:INFO:Checking base model
2024-08-16 18:23:18,597:INFO:Base model : Ada Boost Classifier
2024-08-16 18:23:18,606:INFO:Declaring metric variables
2024-08-16 18:23:18,614:INFO:Defining Hyperparameters
2024-08-16 18:23:18,877:INFO:Tuning with n_jobs=-1
2024-08-16 18:23:18,877:INFO:Initializing RandomizedSearchCV
2024-08-16 18:24:31,292:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__learning_rate': 0.4, 'actual_estimator__algorithm': 'SAMME'}
2024-08-16 18:24:31,292:INFO:Hyperparameter search completed
2024-08-16 18:24:31,292:INFO:SubProcess create_model() called ==================================
2024-08-16 18:24:31,292:INFO:Initializing create_model()
2024-08-16 18:24:31,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1F8F310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'learning_rate': 0.4, 'algorithm': 'SAMME'})
2024-08-16 18:24:31,298:INFO:Checking exceptions
2024-08-16 18:24:31,298:INFO:Importing libraries
2024-08-16 18:24:31,298:INFO:Copying training dataset
2024-08-16 18:24:31,335:INFO:Defining folds
2024-08-16 18:24:31,335:INFO:Declaring metric variables
2024-08-16 18:24:31,351:INFO:Importing untrained model
2024-08-16 18:24:31,351:INFO:Declaring custom model
2024-08-16 18:24:31,365:INFO:Ada Boost Classifier Imported successfully
2024-08-16 18:24:31,371:INFO:Starting cross validation
2024-08-16 18:24:31,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:24:35,851:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:35,851:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:35,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:36,839:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:36,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:36,854:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:39,322:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:39,338:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:39,338:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:40,303:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:40,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:40,324:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:40,355:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:40,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:40,370:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:40,990:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:40,997:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,006:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,386:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,408:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,587:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,605:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,655:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,672:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,805:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,835:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,840:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:41,856:INFO:Calculating mean and std
2024-08-16 18:24:41,856:INFO:Creating metrics dataframe
2024-08-16 18:24:41,872:INFO:Finalizing model
2024-08-16 18:24:46,723:INFO:Uploading results into container
2024-08-16 18:24:46,739:INFO:Uploading model into container now
2024-08-16 18:24:46,739:INFO:_master_model_container: 23
2024-08-16 18:24:46,739:INFO:_display_container: 9
2024-08-16 18:24:46,739:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123)
2024-08-16 18:24:46,739:INFO:create_model() successfully completed......................................
2024-08-16 18:24:47,016:INFO:SubProcess create_model() end ==================================
2024-08-16 18:24:47,016:INFO:choose_better activated
2024-08-16 18:24:47,025:INFO:SubProcess create_model() called ==================================
2024-08-16 18:24:47,025:INFO:Initializing create_model()
2024-08-16 18:24:47,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:24:47,025:INFO:Checking exceptions
2024-08-16 18:24:47,025:INFO:Importing libraries
2024-08-16 18:24:47,025:INFO:Copying training dataset
2024-08-16 18:24:47,060:INFO:Defining folds
2024-08-16 18:24:47,060:INFO:Declaring metric variables
2024-08-16 18:24:47,060:INFO:Importing untrained model
2024-08-16 18:24:47,060:INFO:Declaring custom model
2024-08-16 18:24:47,060:INFO:Ada Boost Classifier Imported successfully
2024-08-16 18:24:47,060:INFO:Starting cross validation
2024-08-16 18:24:47,060:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:24:47,911:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:48,004:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:48,038:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:48,043:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:48,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:48,121:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:48,159:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:48,174:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:49,289:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:49,289:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:49,304:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:49,474:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:49,474:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:49,491:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:49,790:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:49,912:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:50,224:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,224:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,240:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,378:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,393:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,425:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,441:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,456:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,472:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,477:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,572:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,572:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,572:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,572:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:50,593:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:51,254:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:51,259:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:51,259:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:24:51,274:INFO:Calculating mean and std
2024-08-16 18:24:51,274:INFO:Creating metrics dataframe
2024-08-16 18:24:51,274:INFO:Finalizing model
2024-08-16 18:24:51,791:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:24:52,758:INFO:Uploading results into container
2024-08-16 18:24:52,758:INFO:Uploading model into container now
2024-08-16 18:24:52,758:INFO:_master_model_container: 24
2024-08-16 18:24:52,758:INFO:_display_container: 10
2024-08-16 18:24:52,758:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-16 18:24:52,758:INFO:create_model() successfully completed......................................
2024-08-16 18:24:53,041:INFO:SubProcess create_model() end ==================================
2024-08-16 18:24:53,042:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123) result for Accuracy is 0.75
2024-08-16 18:24:53,043:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123) result for Accuracy is 0.7513
2024-08-16 18:24:53,044:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123) is best model
2024-08-16 18:24:53,044:INFO:choose_better completed
2024-08-16 18:24:53,063:INFO:_master_model_container: 24
2024-08-16 18:24:53,063:INFO:_display_container: 9
2024-08-16 18:24:53,063:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.4,
                   n_estimators=230, random_state=123)
2024-08-16 18:24:53,063:INFO:tune_model() successfully completed......................................
2024-08-16 18:24:53,387:INFO:Initializing tune_model()
2024-08-16 18:24:53,387:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-16 18:24:53,387:INFO:Checking exceptions
2024-08-16 18:24:53,430:INFO:Copying training dataset
2024-08-16 18:24:53,449:INFO:Checking base model
2024-08-16 18:24:53,449:INFO:Base model : Decision Tree Classifier
2024-08-16 18:24:53,468:INFO:Declaring metric variables
2024-08-16 18:24:53,476:INFO:Defining Hyperparameters
2024-08-16 18:24:53,733:INFO:Tuning with n_jobs=-1
2024-08-16 18:24:53,733:INFO:Initializing RandomizedSearchCV
2024-08-16 18:25:11,339:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy'}
2024-08-16 18:25:11,339:INFO:Hyperparameter search completed
2024-08-16 18:25:11,339:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:11,339:INFO:Initializing create_model()
2024-08-16 18:25:11,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F3A1ADDA10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.2, 'max_features': 'sqrt', 'max_depth': 5, 'criterion': 'entropy'})
2024-08-16 18:25:11,344:INFO:Checking exceptions
2024-08-16 18:25:11,344:INFO:Importing libraries
2024-08-16 18:25:11,345:INFO:Copying training dataset
2024-08-16 18:25:11,361:INFO:Defining folds
2024-08-16 18:25:11,361:INFO:Declaring metric variables
2024-08-16 18:25:11,377:INFO:Importing untrained model
2024-08-16 18:25:11,378:INFO:Declaring custom model
2024-08-16 18:25:11,385:INFO:Decision Tree Classifier Imported successfully
2024-08-16 18:25:11,392:INFO:Starting cross validation
2024-08-16 18:25:11,392:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:12,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:12,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:12,898:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:12,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,945:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,976:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,992:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,996:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:12,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:12,999:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:13,015:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,031:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,047:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:13,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:13,062:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,130:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,130:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,130:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:13,130:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:13,649:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:13,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:13,749:INFO:Calculating mean and std
2024-08-16 18:25:13,759:INFO:Creating metrics dataframe
2024-08-16 18:25:13,770:INFO:Finalizing model
2024-08-16 18:25:14,400:INFO:Uploading results into container
2024-08-16 18:25:14,400:INFO:Uploading model into container now
2024-08-16 18:25:14,400:INFO:_master_model_container: 25
2024-08-16 18:25:14,408:INFO:_display_container: 10
2024-08-16 18:25:14,410:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-16 18:25:14,410:INFO:create_model() successfully completed......................................
2024-08-16 18:25:14,645:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:14,661:INFO:choose_better activated
2024-08-16 18:25:14,678:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:14,679:INFO:Initializing create_model()
2024-08-16 18:25:14,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:14,679:INFO:Checking exceptions
2024-08-16 18:25:14,682:INFO:Importing libraries
2024-08-16 18:25:14,682:INFO:Copying training dataset
2024-08-16 18:25:14,700:INFO:Defining folds
2024-08-16 18:25:14,700:INFO:Declaring metric variables
2024-08-16 18:25:14,700:INFO:Importing untrained model
2024-08-16 18:25:14,700:INFO:Declaring custom model
2024-08-16 18:25:14,700:INFO:Decision Tree Classifier Imported successfully
2024-08-16 18:25:14,700:INFO:Starting cross validation
2024-08-16 18:25:14,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:15,844:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:15,850:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:15,850:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:15,850:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:15,944:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:15,944:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,185:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,232:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,248:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,263:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,263:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,263:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,281:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,281:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,315:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,433:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:16,833:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:19,764:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:19,764:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:19,796:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:19,818:INFO:Calculating mean and std
2024-08-16 18:25:19,819:INFO:Creating metrics dataframe
2024-08-16 18:25:19,819:INFO:Finalizing model
2024-08-16 18:25:20,447:INFO:Uploading results into container
2024-08-16 18:25:20,449:INFO:Uploading model into container now
2024-08-16 18:25:20,449:INFO:_master_model_container: 26
2024-08-16 18:25:20,450:INFO:_display_container: 11
2024-08-16 18:25:20,450:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-16 18:25:20,450:INFO:create_model() successfully completed......................................
2024-08-16 18:25:20,703:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:20,703:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.7038
2024-08-16 18:25:20,703:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') result for Accuracy is 0.8318
2024-08-16 18:25:20,703:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best') is best model
2024-08-16 18:25:20,703:INFO:choose_better completed
2024-08-16 18:25:20,719:INFO:_master_model_container: 26
2024-08-16 18:25:20,719:INFO:_display_container: 10
2024-08-16 18:25:20,719:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=5, max_features='sqrt', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-16 18:25:20,719:INFO:tune_model() successfully completed......................................
2024-08-16 18:25:21,064:INFO:Initializing compare_models()
2024-08-16 18:25:21,064:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-16 18:25:21,065:INFO:Checking exceptions
2024-08-16 18:25:21,075:INFO:Preparing display monitor
2024-08-16 18:25:21,127:INFO:Initializing Logistic Regression
2024-08-16 18:25:21,127:INFO:Total runtime is 0.0 minutes
2024-08-16 18:25:21,135:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:21,135:INFO:Initializing create_model()
2024-08-16 18:25:21,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:21,135:INFO:Checking exceptions
2024-08-16 18:25:21,136:INFO:Importing libraries
2024-08-16 18:25:21,136:INFO:Copying training dataset
2024-08-16 18:25:21,167:INFO:Defining folds
2024-08-16 18:25:21,167:INFO:Declaring metric variables
2024-08-16 18:25:21,174:INFO:Importing untrained model
2024-08-16 18:25:21,183:INFO:Logistic Regression Imported successfully
2024-08-16 18:25:21,198:INFO:Starting cross validation
2024-08-16 18:25:21,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:23,152:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:23,447:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:23,485:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,516:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,648:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:23,669:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:23,700:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:23,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,769:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,769:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,817:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,832:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,864:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:23,982:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,985:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:23,985:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,049:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,065:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,065:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,117:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:24,165:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,165:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,180:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:24,234:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,338:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,349:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,386:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,397:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,397:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,397:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,591:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:24,699:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,699:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,715:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:24,937:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 18:25:25,067:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:25,073:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:25,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:25,083:INFO:Calculating mean and std
2024-08-16 18:25:25,098:INFO:Creating metrics dataframe
2024-08-16 18:25:25,099:INFO:Uploading results into container
2024-08-16 18:25:25,099:INFO:Uploading model into container now
2024-08-16 18:25:25,099:INFO:_master_model_container: 27
2024-08-16 18:25:25,099:INFO:_display_container: 11
2024-08-16 18:25:25,099:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-16 18:25:25,099:INFO:create_model() successfully completed......................................
2024-08-16 18:25:25,332:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:25,333:INFO:Creating metrics dataframe
2024-08-16 18:25:25,372:INFO:Initializing K Neighbors Classifier
2024-08-16 18:25:25,372:INFO:Total runtime is 0.07074218988418579 minutes
2024-08-16 18:25:25,379:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:25,379:INFO:Initializing create_model()
2024-08-16 18:25:25,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:25,379:INFO:Checking exceptions
2024-08-16 18:25:25,379:INFO:Importing libraries
2024-08-16 18:25:25,382:INFO:Copying training dataset
2024-08-16 18:25:25,401:INFO:Defining folds
2024-08-16 18:25:25,401:INFO:Declaring metric variables
2024-08-16 18:25:25,415:INFO:Importing untrained model
2024-08-16 18:25:25,415:INFO:K Neighbors Classifier Imported successfully
2024-08-16 18:25:25,441:INFO:Starting cross validation
2024-08-16 18:25:25,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:27,439:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,450:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,457:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,466:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,482:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,503:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,503:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,519:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,535:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,539:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,551:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,567:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,567:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,635:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,639:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,682:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:27,782:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:28,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:28,516:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:28,516:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:28,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:28,551:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:28,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:28,569:INFO:Calculating mean and std
2024-08-16 18:25:28,569:INFO:Creating metrics dataframe
2024-08-16 18:25:28,580:INFO:Uploading results into container
2024-08-16 18:25:28,581:INFO:Uploading model into container now
2024-08-16 18:25:28,583:INFO:_master_model_container: 28
2024-08-16 18:25:28,583:INFO:_display_container: 11
2024-08-16 18:25:28,583:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-16 18:25:28,583:INFO:create_model() successfully completed......................................
2024-08-16 18:25:28,841:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:28,841:INFO:Creating metrics dataframe
2024-08-16 18:25:28,848:INFO:Initializing Naive Bayes
2024-08-16 18:25:28,848:INFO:Total runtime is 0.1286787192026774 minutes
2024-08-16 18:25:28,886:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:28,886:INFO:Initializing create_model()
2024-08-16 18:25:28,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:28,886:INFO:Checking exceptions
2024-08-16 18:25:28,886:INFO:Importing libraries
2024-08-16 18:25:28,886:INFO:Copying training dataset
2024-08-16 18:25:28,901:INFO:Defining folds
2024-08-16 18:25:28,901:INFO:Declaring metric variables
2024-08-16 18:25:28,915:INFO:Importing untrained model
2024-08-16 18:25:28,932:INFO:Naive Bayes Imported successfully
2024-08-16 18:25:28,948:INFO:Starting cross validation
2024-08-16 18:25:28,954:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:30,386:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,486:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,501:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,549:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,611:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,618:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,634:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,741:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,749:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,788:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,804:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:30,804:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:31,336:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:31,353:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:31,353:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:31,372:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:31,372:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:31,384:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:31,384:INFO:Calculating mean and std
2024-08-16 18:25:31,402:INFO:Creating metrics dataframe
2024-08-16 18:25:31,402:INFO:Uploading results into container
2024-08-16 18:25:31,402:INFO:Uploading model into container now
2024-08-16 18:25:31,408:INFO:_master_model_container: 29
2024-08-16 18:25:31,408:INFO:_display_container: 11
2024-08-16 18:25:31,408:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-16 18:25:31,409:INFO:create_model() successfully completed......................................
2024-08-16 18:25:31,653:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:31,653:INFO:Creating metrics dataframe
2024-08-16 18:25:31,682:INFO:Initializing Decision Tree Classifier
2024-08-16 18:25:31,682:INFO:Total runtime is 0.1759064714113871 minutes
2024-08-16 18:25:31,684:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:31,684:INFO:Initializing create_model()
2024-08-16 18:25:31,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:31,684:INFO:Checking exceptions
2024-08-16 18:25:31,684:INFO:Importing libraries
2024-08-16 18:25:31,684:INFO:Copying training dataset
2024-08-16 18:25:31,713:INFO:Defining folds
2024-08-16 18:25:31,713:INFO:Declaring metric variables
2024-08-16 18:25:31,731:INFO:Importing untrained model
2024-08-16 18:25:31,739:INFO:Decision Tree Classifier Imported successfully
2024-08-16 18:25:31,754:INFO:Starting cross validation
2024-08-16 18:25:31,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:33,247:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,253:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,269:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,269:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,269:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,269:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,284:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,338:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,344:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,344:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,350:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,354:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,385:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,401:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,438:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,454:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,470:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,517:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:33,538:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:34,188:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:34,204:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:34,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:34,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:34,235:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:34,235:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:34,251:INFO:Calculating mean and std
2024-08-16 18:25:34,251:INFO:Creating metrics dataframe
2024-08-16 18:25:34,269:INFO:Uploading results into container
2024-08-16 18:25:34,270:INFO:Uploading model into container now
2024-08-16 18:25:34,270:INFO:_master_model_container: 30
2024-08-16 18:25:34,270:INFO:_display_container: 11
2024-08-16 18:25:34,270:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-16 18:25:34,270:INFO:create_model() successfully completed......................................
2024-08-16 18:25:34,484:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:34,484:INFO:Creating metrics dataframe
2024-08-16 18:25:34,505:INFO:Initializing SVM - Linear Kernel
2024-08-16 18:25:34,505:INFO:Total runtime is 0.2229603290557861 minutes
2024-08-16 18:25:34,505:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:34,520:INFO:Initializing create_model()
2024-08-16 18:25:34,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:34,520:INFO:Checking exceptions
2024-08-16 18:25:34,520:INFO:Importing libraries
2024-08-16 18:25:34,520:INFO:Copying training dataset
2024-08-16 18:25:34,545:INFO:Defining folds
2024-08-16 18:25:34,545:INFO:Declaring metric variables
2024-08-16 18:25:34,552:INFO:Importing untrained model
2024-08-16 18:25:34,552:INFO:SVM - Linear Kernel Imported successfully
2024-08-16 18:25:34,583:INFO:Starting cross validation
2024-08-16 18:25:34,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:35,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:35,989:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,005:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:36,005:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,033:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,036:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,045:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:36,050:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,068:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,083:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,103:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:36,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,121:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,137:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,145:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,153:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,204:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,204:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,220:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:36,237:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,321:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,337:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,345:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,838:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,842:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,858:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,858:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,874:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:36,889:INFO:Calculating mean and std
2024-08-16 18:25:36,889:INFO:Creating metrics dataframe
2024-08-16 18:25:36,889:INFO:Uploading results into container
2024-08-16 18:25:36,889:INFO:Uploading model into container now
2024-08-16 18:25:36,889:INFO:_master_model_container: 31
2024-08-16 18:25:36,889:INFO:_display_container: 11
2024-08-16 18:25:36,905:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-16 18:25:36,905:INFO:create_model() successfully completed......................................
2024-08-16 18:25:37,147:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:37,148:INFO:Creating metrics dataframe
2024-08-16 18:25:37,171:INFO:Initializing Ridge Classifier
2024-08-16 18:25:37,171:INFO:Total runtime is 0.2673978527386983 minutes
2024-08-16 18:25:37,171:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:37,171:INFO:Initializing create_model()
2024-08-16 18:25:37,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:37,171:INFO:Checking exceptions
2024-08-16 18:25:37,171:INFO:Importing libraries
2024-08-16 18:25:37,171:INFO:Copying training dataset
2024-08-16 18:25:37,209:INFO:Defining folds
2024-08-16 18:25:37,209:INFO:Declaring metric variables
2024-08-16 18:25:37,217:INFO:Importing untrained model
2024-08-16 18:25:37,224:INFO:Ridge Classifier Imported successfully
2024-08-16 18:25:37,238:INFO:Starting cross validation
2024-08-16 18:25:37,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:38,556:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,587:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,587:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,602:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,633:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,670:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,686:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,717:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,733:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,748:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,868:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,873:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:38,873:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:39,268:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:39,303:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:39,306:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:39,369:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:39,384:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:39,384:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:39,421:INFO:Calculating mean and std
2024-08-16 18:25:39,421:INFO:Creating metrics dataframe
2024-08-16 18:25:39,431:INFO:Uploading results into container
2024-08-16 18:25:39,433:INFO:Uploading model into container now
2024-08-16 18:25:39,434:INFO:_master_model_container: 32
2024-08-16 18:25:39,434:INFO:_display_container: 11
2024-08-16 18:25:39,434:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-08-16 18:25:39,434:INFO:create_model() successfully completed......................................
2024-08-16 18:25:39,770:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:39,770:INFO:Creating metrics dataframe
2024-08-16 18:25:39,839:INFO:Initializing Random Forest Classifier
2024-08-16 18:25:39,839:INFO:Total runtime is 0.31185479561487833 minutes
2024-08-16 18:25:39,850:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:39,850:INFO:Initializing create_model()
2024-08-16 18:25:39,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:39,850:INFO:Checking exceptions
2024-08-16 18:25:39,850:INFO:Importing libraries
2024-08-16 18:25:39,850:INFO:Copying training dataset
2024-08-16 18:25:39,886:INFO:Defining folds
2024-08-16 18:25:39,886:INFO:Declaring metric variables
2024-08-16 18:25:39,904:INFO:Importing untrained model
2024-08-16 18:25:39,904:INFO:Random Forest Classifier Imported successfully
2024-08-16 18:25:39,924:INFO:Starting cross validation
2024-08-16 18:25:39,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:43,837:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:43,846:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:43,855:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:43,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:43,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:43,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:43,937:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:43,957:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:43,957:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,121:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,121:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,121:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,121:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,174:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,175:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,175:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,191:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,203:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:44,207:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:46,566:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:46,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:46,575:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:46,625:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:46,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:46,640:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:46,689:INFO:Calculating mean and std
2024-08-16 18:25:46,689:INFO:Creating metrics dataframe
2024-08-16 18:25:46,703:INFO:Uploading results into container
2024-08-16 18:25:46,704:INFO:Uploading model into container now
2024-08-16 18:25:46,705:INFO:_master_model_container: 33
2024-08-16 18:25:46,706:INFO:_display_container: 11
2024-08-16 18:25:46,707:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 18:25:46,707:INFO:create_model() successfully completed......................................
2024-08-16 18:25:46,941:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:46,941:INFO:Creating metrics dataframe
2024-08-16 18:25:46,971:INFO:Initializing Quadratic Discriminant Analysis
2024-08-16 18:25:46,971:INFO:Total runtime is 0.43073084354400637 minutes
2024-08-16 18:25:46,985:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:46,986:INFO:Initializing create_model()
2024-08-16 18:25:46,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:46,986:INFO:Checking exceptions
2024-08-16 18:25:46,987:INFO:Importing libraries
2024-08-16 18:25:46,987:INFO:Copying training dataset
2024-08-16 18:25:47,003:INFO:Defining folds
2024-08-16 18:25:47,003:INFO:Declaring metric variables
2024-08-16 18:25:47,025:INFO:Importing untrained model
2024-08-16 18:25:47,033:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-16 18:25:47,063:INFO:Starting cross validation
2024-08-16 18:25:47,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:48,105:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:48,201:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:48,257:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:48,308:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:48,323:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:48,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:48,471:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:48,540:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:48,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,658:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,671:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,688:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,688:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,688:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,688:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:48,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:48,703:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,719:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:48,734:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,766:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:48,781:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,797:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,813:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,828:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:48,828:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:49,207:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:49,318:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 18:25:49,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:49,374:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:49,390:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:49,491:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:49,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:49,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:25:49,507:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:49,538:INFO:Calculating mean and std
2024-08-16 18:25:49,538:INFO:Creating metrics dataframe
2024-08-16 18:25:49,550:INFO:Uploading results into container
2024-08-16 18:25:49,552:INFO:Uploading model into container now
2024-08-16 18:25:49,552:INFO:_master_model_container: 34
2024-08-16 18:25:49,552:INFO:_display_container: 11
2024-08-16 18:25:49,552:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-16 18:25:49,552:INFO:create_model() successfully completed......................................
2024-08-16 18:25:49,769:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:49,769:INFO:Creating metrics dataframe
2024-08-16 18:25:49,810:INFO:Initializing Ada Boost Classifier
2024-08-16 18:25:49,810:INFO:Total runtime is 0.4780430316925049 minutes
2024-08-16 18:25:49,810:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:49,810:INFO:Initializing create_model()
2024-08-16 18:25:49,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:49,810:INFO:Checking exceptions
2024-08-16 18:25:49,810:INFO:Importing libraries
2024-08-16 18:25:49,810:INFO:Copying training dataset
2024-08-16 18:25:49,859:INFO:Defining folds
2024-08-16 18:25:49,859:INFO:Declaring metric variables
2024-08-16 18:25:49,867:INFO:Importing untrained model
2024-08-16 18:25:49,875:INFO:Ada Boost Classifier Imported successfully
2024-08-16 18:25:49,904:INFO:Starting cross validation
2024-08-16 18:25:49,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:25:50,922:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:50,957:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:50,959:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:50,991:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:51,022:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:51,059:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:51,123:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:51,176:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:53,388:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,403:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,426:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,490:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,561:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,561:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,574:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,589:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,589:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,643:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,643:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,643:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,661:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,706:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:53,736:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:54,053:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 18:25:54,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:54,588:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:54,610:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:55,254:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:55,261:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:55,270:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:25:55,308:INFO:Calculating mean and std
2024-08-16 18:25:55,308:INFO:Creating metrics dataframe
2024-08-16 18:25:55,318:INFO:Uploading results into container
2024-08-16 18:25:55,320:INFO:Uploading model into container now
2024-08-16 18:25:55,321:INFO:_master_model_container: 35
2024-08-16 18:25:55,321:INFO:_display_container: 11
2024-08-16 18:25:55,321:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-16 18:25:55,321:INFO:create_model() successfully completed......................................
2024-08-16 18:25:55,618:INFO:SubProcess create_model() end ==================================
2024-08-16 18:25:55,618:INFO:Creating metrics dataframe
2024-08-16 18:25:55,655:INFO:Initializing Gradient Boosting Classifier
2024-08-16 18:25:55,655:INFO:Total runtime is 0.5754643042882284 minutes
2024-08-16 18:25:55,663:INFO:SubProcess create_model() called ==================================
2024-08-16 18:25:55,663:INFO:Initializing create_model()
2024-08-16 18:25:55,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:25:55,663:INFO:Checking exceptions
2024-08-16 18:25:55,663:INFO:Importing libraries
2024-08-16 18:25:55,663:INFO:Copying training dataset
2024-08-16 18:25:55,693:INFO:Defining folds
2024-08-16 18:25:55,693:INFO:Declaring metric variables
2024-08-16 18:25:55,710:INFO:Importing untrained model
2024-08-16 18:25:55,710:INFO:Gradient Boosting Classifier Imported successfully
2024-08-16 18:25:55,727:INFO:Starting cross validation
2024-08-16 18:25:55,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:26:02,976:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:02,992:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:02,992:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,744:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,760:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,778:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,792:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,807:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,860:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,876:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,892:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,908:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,924:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,930:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,970:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,977:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:04,977:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,009:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,009:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,009:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,009:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,030:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,070:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,829:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,829:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:05,844:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:08,808:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:08,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:08,812:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:08,828:INFO:Calculating mean and std
2024-08-16 18:26:08,839:INFO:Creating metrics dataframe
2024-08-16 18:26:08,843:INFO:Uploading results into container
2024-08-16 18:26:08,845:INFO:Uploading model into container now
2024-08-16 18:26:08,846:INFO:_master_model_container: 36
2024-08-16 18:26:08,846:INFO:_display_container: 11
2024-08-16 18:26:08,847:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-16 18:26:08,848:INFO:create_model() successfully completed......................................
2024-08-16 18:26:09,028:INFO:SubProcess create_model() end ==================================
2024-08-16 18:26:09,028:INFO:Creating metrics dataframe
2024-08-16 18:26:09,060:INFO:Initializing Linear Discriminant Analysis
2024-08-16 18:26:09,060:INFO:Total runtime is 0.798870050907135 minutes
2024-08-16 18:26:09,060:INFO:SubProcess create_model() called ==================================
2024-08-16 18:26:09,060:INFO:Initializing create_model()
2024-08-16 18:26:09,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:26:09,060:INFO:Checking exceptions
2024-08-16 18:26:09,060:INFO:Importing libraries
2024-08-16 18:26:09,060:INFO:Copying training dataset
2024-08-16 18:26:09,096:INFO:Defining folds
2024-08-16 18:26:09,097:INFO:Declaring metric variables
2024-08-16 18:26:09,098:INFO:Importing untrained model
2024-08-16 18:26:09,110:INFO:Linear Discriminant Analysis Imported successfully
2024-08-16 18:26:09,116:INFO:Starting cross validation
2024-08-16 18:26:09,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:26:10,614:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,630:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,630:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,645:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,645:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,645:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,645:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,677:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,693:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,712:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,714:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,729:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,745:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,745:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,768:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,776:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:10,776:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:11,379:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:11,395:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:11,395:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:11,443:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:11,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:11,448:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:11,464:INFO:Calculating mean and std
2024-08-16 18:26:11,464:INFO:Creating metrics dataframe
2024-08-16 18:26:11,477:INFO:Uploading results into container
2024-08-16 18:26:11,479:INFO:Uploading model into container now
2024-08-16 18:26:11,479:INFO:_master_model_container: 37
2024-08-16 18:26:11,479:INFO:_display_container: 11
2024-08-16 18:26:11,479:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-16 18:26:11,479:INFO:create_model() successfully completed......................................
2024-08-16 18:26:11,712:INFO:SubProcess create_model() end ==================================
2024-08-16 18:26:11,712:INFO:Creating metrics dataframe
2024-08-16 18:26:11,761:INFO:Initializing Extra Trees Classifier
2024-08-16 18:26:11,761:INFO:Total runtime is 0.8438951214154562 minutes
2024-08-16 18:26:11,765:INFO:SubProcess create_model() called ==================================
2024-08-16 18:26:11,765:INFO:Initializing create_model()
2024-08-16 18:26:11,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:26:11,765:INFO:Checking exceptions
2024-08-16 18:26:11,765:INFO:Importing libraries
2024-08-16 18:26:11,765:INFO:Copying training dataset
2024-08-16 18:26:11,796:INFO:Defining folds
2024-08-16 18:26:11,796:INFO:Declaring metric variables
2024-08-16 18:26:11,814:INFO:Importing untrained model
2024-08-16 18:26:11,814:INFO:Extra Trees Classifier Imported successfully
2024-08-16 18:26:11,827:INFO:Starting cross validation
2024-08-16 18:26:11,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:26:14,779:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,795:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,795:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,795:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,804:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,810:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,882:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,882:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,897:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,913:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,917:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,966:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,981:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,981:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:14,981:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,028:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,028:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,043:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,043:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,061:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,065:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,078:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,080:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:15,080:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:17,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:17,199:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:17,211:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:17,230:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:17,230:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:17,247:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:26:17,279:INFO:Calculating mean and std
2024-08-16 18:26:17,282:INFO:Creating metrics dataframe
2024-08-16 18:26:17,283:INFO:Uploading results into container
2024-08-16 18:26:17,283:INFO:Uploading model into container now
2024-08-16 18:26:17,288:INFO:_master_model_container: 38
2024-08-16 18:26:17,288:INFO:_display_container: 11
2024-08-16 18:26:17,289:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-16 18:26:17,290:INFO:create_model() successfully completed......................................
2024-08-16 18:26:17,531:INFO:SubProcess create_model() end ==================================
2024-08-16 18:26:17,531:INFO:Creating metrics dataframe
2024-08-16 18:26:17,564:INFO:Initializing Light Gradient Boosting Machine
2024-08-16 18:26:17,564:INFO:Total runtime is 0.9406081000963847 minutes
2024-08-16 18:26:17,574:INFO:SubProcess create_model() called ==================================
2024-08-16 18:26:17,574:INFO:Initializing create_model()
2024-08-16 18:26:17,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:26:17,574:INFO:Checking exceptions
2024-08-16 18:26:17,574:INFO:Importing libraries
2024-08-16 18:26:17,574:INFO:Copying training dataset
2024-08-16 18:26:17,613:INFO:Defining folds
2024-08-16 18:26:17,613:INFO:Declaring metric variables
2024-08-16 18:26:17,613:INFO:Importing untrained model
2024-08-16 18:26:17,627:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-16 18:26:17,640:INFO:Starting cross validation
2024-08-16 18:26:17,659:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:32:23,531:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,547:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,613:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,628:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,628:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,675:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,694:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,698:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,815:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,826:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:23,831:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,150:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,150:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,164:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,164:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,164:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,179:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,474:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,476:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,492:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:24,498:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:25,008:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:25,008:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:25,024:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:25,024:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:25,024:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:25,024:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:25,049:INFO:Calculating mean and std
2024-08-16 18:32:25,049:INFO:Creating metrics dataframe
2024-08-16 18:32:25,060:INFO:Uploading results into container
2024-08-16 18:32:25,061:INFO:Uploading model into container now
2024-08-16 18:32:25,062:INFO:_master_model_container: 39
2024-08-16 18:32:25,062:INFO:_display_container: 11
2024-08-16 18:32:25,062:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-16 18:32:25,062:INFO:create_model() successfully completed......................................
2024-08-16 18:32:25,290:INFO:SubProcess create_model() end ==================================
2024-08-16 18:32:25,290:INFO:Creating metrics dataframe
2024-08-16 18:32:25,319:INFO:Initializing Dummy Classifier
2024-08-16 18:32:25,320:INFO:Total runtime is 7.069871771335602 minutes
2024-08-16 18:32:25,328:INFO:SubProcess create_model() called ==================================
2024-08-16 18:32:25,329:INFO:Initializing create_model()
2024-08-16 18:32:25,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F39F195A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:32:25,329:INFO:Checking exceptions
2024-08-16 18:32:25,330:INFO:Importing libraries
2024-08-16 18:32:25,330:INFO:Copying training dataset
2024-08-16 18:32:25,355:INFO:Defining folds
2024-08-16 18:32:25,355:INFO:Declaring metric variables
2024-08-16 18:32:25,365:INFO:Importing untrained model
2024-08-16 18:32:25,373:INFO:Dummy Classifier Imported successfully
2024-08-16 18:32:25,388:INFO:Starting cross validation
2024-08-16 18:32:25,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 18:32:26,282:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,297:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,299:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,313:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,444:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,452:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,452:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,463:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,500:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,530:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,553:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,562:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,576:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,578:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,581:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,582:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,765:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,863:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,869:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:26,878:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:26,880:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:27,200:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:27,210:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:27,214:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:27,218:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:27,227:INFO:Calculating mean and std
2024-08-16 18:32:27,233:INFO:Creating metrics dataframe
2024-08-16 18:32:27,233:INFO:Uploading results into container
2024-08-16 18:32:27,233:INFO:Uploading model into container now
2024-08-16 18:32:27,233:INFO:_master_model_container: 40
2024-08-16 18:32:27,233:INFO:_display_container: 11
2024-08-16 18:32:27,233:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-16 18:32:27,233:INFO:create_model() successfully completed......................................
2024-08-16 18:32:27,380:INFO:SubProcess create_model() end ==================================
2024-08-16 18:32:27,380:INFO:Creating metrics dataframe
2024-08-16 18:32:27,420:INFO:Initializing create_model()
2024-08-16 18:32:27,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 18:32:27,420:INFO:Checking exceptions
2024-08-16 18:32:27,425:INFO:Importing libraries
2024-08-16 18:32:27,425:INFO:Copying training dataset
2024-08-16 18:32:27,433:INFO:Defining folds
2024-08-16 18:32:27,433:INFO:Declaring metric variables
2024-08-16 18:32:27,433:INFO:Importing untrained model
2024-08-16 18:32:27,433:INFO:Declaring custom model
2024-08-16 18:32:27,433:INFO:Dummy Classifier Imported successfully
2024-08-16 18:32:27,443:INFO:Cross validation set to False
2024-08-16 18:32:27,444:INFO:Fitting Model
2024-08-16 18:32:27,630:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-16 18:32:27,630:INFO:create_model() successfully completed......................................
2024-08-16 18:32:27,813:INFO:_master_model_container: 40
2024-08-16 18:32:27,820:INFO:_display_container: 11
2024-08-16 18:32:27,820:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-16 18:32:27,820:INFO:compare_models() successfully completed......................................
2024-08-16 18:32:27,867:INFO:Initializing predict_model()
2024-08-16 18:32:27,867:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F39F1867D0>, estimator=RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=2, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=3,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=10, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F3A1CBE700>)
2024-08-16 18:32:27,867:INFO:Checking exceptions
2024-08-16 18:32:27,867:INFO:Preloading libraries
2024-08-16 18:32:27,870:INFO:Set up data.
2024-08-16 18:32:27,900:INFO:Set up index.
2024-08-16 18:32:28,252:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:28,267:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-08-16 18:32:28,267:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 18:32:28,282:WARNING:c:\Users\ASUS\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '1') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

